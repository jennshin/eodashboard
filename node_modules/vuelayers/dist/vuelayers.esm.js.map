{"version":3,"file":"vuelayers.esm.js","sources":["../src/components/bingmaps-source/source.vue?rollup-plugin-vue=script.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/bingmaps-source/source.vue","../src/components/bingmaps-source/index.js","../src/components/cluster-source/inner-source.vue?rollup-plugin-vue=script.js","../src/components/cluster-source/inner-source.vue","../src/components/cluster-source/source.vue?rollup-plugin-vue=script.js","../src/components/cluster-source/source.vue","../src/components/cluster-source/index.js","../src/components/draw-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/draw-interaction/interaction.vue","../src/components/draw-interaction/index.js","../src/components/feature/circle-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/circle-geom.vue","../src/components/feature/point-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/point-geom.vue","../src/components/feature/feature.vue?rollup-plugin-vue=script.js","../src/components/feature/feature.vue","../src/components/feature/line-string-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/line-string-geom.vue","../src/components/feature/multi-line-string-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/multi-line-string-geom.vue","../src/components/feature/multi-point-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/multi-point-geom.vue","../src/components/feature/multi-polygon-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/multi-polygon-geom.vue","../src/components/feature/polygon-geom.vue?rollup-plugin-vue=script.js","../src/components/feature/polygon-geom.vue","../src/components/feature/index.js","../src/components/geoloc/geoloc.vue?rollup-plugin-vue=script.js","../src/components/geoloc/geoloc.vue","../src/components/geoloc/index.js","../src/components/style/fill.vue?rollup-plugin-vue=script.js","../src/components/style/fill.vue","../src/components/style/stroke.vue?rollup-plugin-vue=script.js","../src/components/style/stroke.vue","../src/components/style/circle.vue?rollup-plugin-vue=script.js","../src/components/style/circle.vue","../src/components/style/icon.vue?rollup-plugin-vue=script.js","../src/components/style/icon.vue","../src/components/style/reg-shape.vue?rollup-plugin-vue=script.js","../src/components/style/reg-shape.vue","../src/components/style/style.vue?rollup-plugin-vue=script.js","../src/components/style/style.vue","../src/components/style/background.vue?rollup-plugin-vue=script.js","../src/components/style/background.vue","../src/components/style/text.vue?rollup-plugin-vue=script.js","../src/components/style/text.vue","../src/components/style/index.js","../src/components/graticule-layer/lat-style.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/lat-style.vue","../src/components/graticule-layer/lon-style.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/lon-style.vue","../src/components/graticule-layer/stroke-style.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/stroke-style.vue","../src/components/graticule-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/graticule-layer/layer.vue","../src/components/graticule-layer/index.js","../src/components/group-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/group-layer/layer.vue","../src/components/group-layer/index.js","../src/components/heatmap-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/heatmap-layer/layer.vue","../src/components/heatmap-layer/index.js","../src/components/image-arcgis-rest-source/source.vue?rollup-plugin-vue=script.js","../src/components/image-arcgis-rest-source/source.vue","../src/components/image-arcgis-rest-source/index.js","../src/components/image-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/image-layer/layer.vue","../src/components/image-layer/index.js","../src/components/image-static-source/source.vue?rollup-plugin-vue=script.js","../src/components/image-static-source/source.vue","../src/components/image-static-source/index.js","../src/components/image-wms-source/source.vue?rollup-plugin-vue=script.js","../src/components/image-wms-source/source.vue","../src/components/image-wms-source/index.js","../src/components/vector-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/vector-layer/layer.vue","../src/components/vector-layer/index.js","../src/components/vector-source/source.vue?rollup-plugin-vue=script.js","../src/components/vector-source/source.vue","../src/components/vector-source/index.js","../src/components/map/view.vue?rollup-plugin-vue=script.js","../src/components/map/view.vue","../src/components/map/map.vue?rollup-plugin-vue=script.js","../src/components/map/map.vue","../src/components/map/index.js","../src/components/mapbox-source/source.vue?rollup-plugin-vue=script.js","../src/components/mapbox-source/source.vue","../src/components/mapbox-source/index.js","../src/components/vector-tile-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/vector-tile-layer/layer.vue","../src/components/vector-tile-layer/index.js","../src/components/mapbox-vector-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/mapbox-vector-layer/layer.vue","../src/components/mapbox-vector-layer/index.js","../src/components/modify-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/modify-interaction/interaction.vue","../src/components/modify-interaction/index.js","../src/components/osm-source/source.vue?rollup-plugin-vue=script.js","../src/components/osm-source/source.vue","../src/components/osm-source/index.js","../src/components/overlay/overlay.vue?rollup-plugin-vue=script.js","../src/components/overlay/overlay.vue","../src/components/overlay/index.js","../src/components/rotate-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/rotate-interaction/interaction.vue","../src/components/rotate-interaction/index.js","../src/components/select-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/select-interaction/interaction.vue","../src/components/select-interaction/index.js","../src/components/snap-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/snap-interaction/interaction.vue","../src/components/snap-interaction/index.js","../src/components/sputnik-source/source.vue?rollup-plugin-vue=script.js","../src/components/sputnik-source/source.vue","../src/components/sputnik-source/index.js","../src/components/stamen-source/source.vue?rollup-plugin-vue=script.js","../src/components/stamen-source/source.vue","../src/components/stamen-source/index.js","../src/components/style-func/style.vue?rollup-plugin-vue=script.js","../src/components/style-func/style.vue","../src/components/style-func/index.js","../src/components/tile-arcgis-rest-source/source.vue?rollup-plugin-vue=script.js","../src/components/tile-arcgis-rest-source/source.vue","../src/components/tile-arcgis-rest-source/index.js","../src/components/tile-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/tile-layer/layer.vue","../src/components/tile-layer/index.js","../src/components/tile-wms-source/source.vue?rollup-plugin-vue=script.js","../src/components/tile-wms-source/source.vue","../src/components/tile-wms-source/index.js","../src/components/translate-interaction/interaction.vue?rollup-plugin-vue=script.js","../src/components/translate-interaction/interaction.vue","../src/components/translate-interaction/index.js","../src/components/vector-image-layer/layer.vue?rollup-plugin-vue=script.js","../src/components/vector-image-layer/layer.vue","../src/components/vector-image-layer/index.js","../src/components/vector-tile-source/source.vue?rollup-plugin-vue=script.js","../src/components/vector-tile-source/source.vue","../src/components/vector-tile-source/index.js","../src/components/wmts-source/source.vue?rollup-plugin-vue=script.js","../src/components/wmts-source/source.vue","../src/components/wmts-source/index.js","../src/components/xyz-source/source.vue?rollup-plugin-vue=script.js","../src/components/xyz-source/source.vue","../src/components/xyz-source/index.js","../src/index.js"],"sourcesContent":["\nimport { BingMaps as BingMapsSource } from 'ol/source'\nimport { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\nimport { coalesce, noop } from '../../utils'\n\nexport default {\n  name: 'VlSourceBingmaps',\n  mixins: [\n    tileImageSource,\n  ],\n  props: {\n    // ol/source/BingMaps\n    /**\n     * Enables hidpi tiles.\n     * @type {boolean}\n     */\n    hidpi: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Culture code.\n     * @type {string}\n     */\n    culture: {\n      type: String,\n      default: 'en-us',\n    },\n    /**\n     * Bing Maps API key.\n     * @type {string}\n     */\n    apiKey: {\n      type: String,\n      required: true,\n    },\n    /**\n     * Type of imagery.\n     * @type {string}\n     */\n    imagerySet: {\n      type: String,\n      required: true,\n    },\n    /**\n     * @type {number}\n     */\n    maxZoom: {\n      type: Number,\n      default: 21,\n    },\n  },\n  computed: {\n    tileGridIdent: noop,\n    inputTileGridFactory: noop,\n    inputUrl: noop,\n    inputUrls: noop,\n    inputTileUrlFunction: noop,\n    inputAttributions: noop,\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'hidpi',\n      'culture',\n      'apiKey',\n      'imagerySet',\n      'maxZoom',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {module:ol/source/BingMaps}\n     * @protected\n     */\n    createSource () {\n      return new BingMapsSource({\n        // ol/source/Source\n        wrapX: this.wrapX,\n        // ol/source/Tile\n        cacheSize: this.cacheSize,\n        opaque: this.opaque,\n        transition: this.transition,\n        // ol/source/UrlTile\n        tileLoadFunction: this.currentTileLoadFunction,\n        // ol/source/TileImage\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        imageSmoothing: this.imageSmoothing,\n        // ol/source/BingMaps\n        hidpi: this.hidpi,\n        culture: this.culture,\n        key: this.apiKey,\n        imagerySet: this.imagerySet,\n        maxZoom: this.maxZoom,\n      })\n    },\n    getApiKey () {\n      return coalesce(this.$source?.getApiKey(), this.apiKey)\n    },\n    getImagerySet () {\n      return coalesce(this.$source?.getImagerySet(), this.imagerySet)\n    },\n    stateChanged: noop,\n    attributionsCollapsibleChanged: noop,\n    projectionChanged: noop,\n    tileGridIdentChanged: noop,\n    inputTileGridFactoryChanged: noop,\n    tileGridChanged: noop,\n    tileKeyChanged: noop,\n    tilePixelRatioChanged: noop,\n    zDirectionChanged: noop,\n    inputTileUrlFunctionChanged: noop,\n    inputUrlsChanged: noop,\n    crossOriginChanged: noop,\n    tileClassChanged: noop,\n  },\n}\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<script>\n  import { BingMaps as BingMapsSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\n  import { coalesce, noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceBingmaps',\n    mixins: [\n      tileImageSource,\n    ],\n    props: {\n      // ol/source/BingMaps\n      /**\n       * Enables hidpi tiles.\n       * @type {boolean}\n       */\n      hidpi: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Culture code.\n       * @type {string}\n       */\n      culture: {\n        type: String,\n        default: 'en-us',\n      },\n      /**\n       * Bing Maps API key.\n       * @type {string}\n       */\n      apiKey: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Type of imagery.\n       * @type {string}\n       */\n      imagerySet: {\n        type: String,\n        required: true,\n      },\n      /**\n       * @type {number}\n       */\n      maxZoom: {\n        type: Number,\n        default: 21,\n      },\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputUrl: noop,\n      inputUrls: noop,\n      inputTileUrlFunction: noop,\n      inputAttributions: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'hidpi',\n        'culture',\n        'apiKey',\n        'imagerySet',\n        'maxZoom',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {module:ol/source/BingMaps}\n       * @protected\n       */\n      createSource () {\n        return new BingMapsSource({\n          // ol/source/Source\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          // ol/source/TileImage\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/BingMaps\n          hidpi: this.hidpi,\n          culture: this.culture,\n          key: this.apiKey,\n          imagerySet: this.imagerySet,\n          maxZoom: this.maxZoom,\n        })\n      },\n      getApiKey () {\n        return coalesce(this.$source?.getApiKey(), this.apiKey)\n      },\n      getImagerySet () {\n        return coalesce(this.$source?.getImagerySet(), this.imagerySet)\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n      tileGridIdentChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      tileKeyChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      inputUrlsChanged: noop,\n      crossOriginChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\n/**\n * @param {Vue} Vue\n * @param {VueLayersOptions} [options]\n */\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { olCmp, sourceContainer, stubVNode } from '../../mixins'\nimport { getSourceId } from '../../ol-ext'\nimport { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\nexport default {\n  name: 'VlSourceInnerAdapter',\n  mixins: [\n    stubVNode,\n    sourceContainer,\n    olCmp,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  computed: {\n    source () {\n      if (!(this.rev && this.$source)) return\n\n      return {\n        id: getSourceId(this.$source),\n        type: this.$source.constructor.name,\n      }\n    },\n  },\n  watch: {\n    source: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:source', value && clonePlainObject(value))\n      },\n    },\n  },\n  created () {\n    Object.defineProperties(this, {\n      $innerSourceContainer: {\n        enumerable: true,\n        get: () => this.$services?.innerSourceContainer,\n      },\n    })\n  },\n  methods: {\n    createOlObject () {\n      const obj = stubObject()\n      obj.id = this.currentId\n\n      return obj\n    },\n    getServices () {\n      return mergeDescriptors(\n        this::olCmp.methods.getServices(),\n        this::sourceContainer.methods.getServices(),\n      )\n    },\n    getSourceTarget () {\n      return {\n        getSource: () => this.$innerSourceContainer?.getInnerSource(),\n        setSource: source => this.$innerSourceContainer?.setInnerSource(source),\n      }\n    },\n  },\n}\n","<script>\n  import { olCmp, sourceContainer, stubVNode } from '../../mixins'\n  import { getSourceId } from '../../ol-ext'\n  import { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlSourceInnerAdapter',\n    mixins: [\n      stubVNode,\n      sourceContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      source () {\n        if (!(this.rev && this.$source)) return\n\n        return {\n          id: getSourceId(this.$source),\n          type: this.$source.constructor.name,\n        }\n      },\n    },\n    watch: {\n      source: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:source', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $innerSourceContainer: {\n          enumerable: true,\n          get: () => this.$services?.innerSourceContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::sourceContainer.methods.getServices(),\n        )\n      },\n      getSourceTarget () {\n        return {\n          getSource: () => this.$innerSourceContainer?.getInnerSource(),\n          setSource: source => this.$innerSourceContainer?.setInnerSource(source),\n        }\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Cluster as ClusterSource, Source } from 'ol/source'\nimport { makeChangeOrRecreateWatchers, vectorSource } from '../../mixins'\nimport { createPointGeom, findPointOnSurface, getSourceId } from '../../ol-ext'\nimport { assert, clonePlainObject, coalesce, isNumber, mergeDescriptors, noop } from '../../utils'\nimport InnerSource from './inner-source.vue'\n\nexport default {\n  name: 'VlSourceCluster',\n  components: {\n    InnerSource,\n  },\n  mixins: [\n    vectorSource,\n  ],\n  props: {\n    distance: {\n      type: Number,\n      default: 20,\n    },\n    geometryFunction: {\n      type: Function,\n      // default: defaultGeomFunc,\n    },\n    /**\n     * @deprecated\n     * @todo remove later\n     */\n    geomFunc: Function,\n    /**\n     * @deprecated Use geomFunc prop instead.\n     * @todo remove in v0.13.x\n     */\n    geomFuncFactory: Function,\n  },\n  data () {\n    return {\n      currentDistance: this.distance,\n    }\n  },\n  computed: {\n    inputGeometryFunction () {\n      let geomFunc = this.geometryFunction || this.geomFunc\n      if (!geomFunc && this.geomFuncFactory) {\n        geomFunc = this.geomFuncFactory()\n      }\n\n      return geomFunc || defaultGeomFunc\n    },\n    innerSource () {\n      if (!(this.rev && this.$innerSource)) return\n\n      return {\n        id: getSourceId(this.$innerSource),\n        type: this.$innerSource.constructor.name,\n      }\n    },\n    inputUrl: noop,\n    inputLoader: noop,\n    inputLoadingStrategy: noop,\n    formatIdent: noop,\n    inputFormatFactory: noop,\n  },\n  watch: {\n    rev () {\n      if (!this.$source) return\n\n      if (this.currentDistance !== this.$source.getDistance()) {\n        this.currentDistance = this.$source.getDistance()\n      }\n    },\n    distance (value) {\n      this.setDistance(value)\n    },\n    currentDistance (value) {\n      if (value === this.distance) return\n\n      this.$emit('update:distance', value)\n    },\n    innerSource: {\n      deep: true,\n      handler (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:innerSource', value && clonePlainObject(value))\n      },\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'inputGeometryFunction',\n    ]),\n  },\n  created () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.geomFuncFactory) {\n        this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n      }\n      if (this.geomFunc) {\n        this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n      }\n    }\n\n    this._innerSource = undefined\n    this._innerSourceVm = undefined\n\n    this::defineServices()\n  },\n  updated () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.geomFuncFactory) {\n        this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n      }\n      if (this.geomFunc) {\n        this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n      }\n    }\n  },\n  methods: {\n    createSource () {\n      return new ClusterSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        wrapX: this.wrapX,\n        // ol/source/Cluster\n        source: this.$innerSource,\n        distance: this.currentDistance,\n        geometryFunction: this.inputGeometryFunction,\n      })\n    },\n    getServices () {\n      const vm = this\n\n      return mergeDescriptors(\n        this::vectorSource.methods.getServices(),\n        {\n          get innerSourceContainer () { return vm },\n        },\n      )\n    },\n    getDistance () {\n      return coalesce(this.$source?.getDistance(), this.currentDistance)\n    },\n    setDistance (distance) {\n      assert(isNumber(distance), 'Invalid distance')\n\n      if (distance !== this.currentDistance) {\n        this.currentDistance = distance\n      }\n      if (this.$source && distance !== this.$source.getDistance()) {\n        this.$source.setDistance(distance)\n      }\n    },\n    getInnerSource () {\n      return this._innerSource\n    },\n    getInnerSourceVm () {\n      return this._innerSourceVm\n    },\n    setInnerSource (innerSource) {\n      innerSource = innerSource?.$source || innerSource\n      assert(!innerSource || innerSource instanceof Source)\n      innerSource || (innerSource = undefined)\n\n      if (innerSource !== this._innerSource) {\n        this._innerSource = innerSource\n        this._innerSourceVm = innerSource?.vm && innerSource.vm[0]\n        this.scheduleRefresh()\n      }\n      if (this.$source && innerSource !== this.$source.getSource()) {\n        this.$source.setSource(innerSource)\n        this.scheduleRefresh()\n      }\n    },\n    projectionChanged: noop,\n    inputUrlChanged: noop,\n    inputLoaderChanged: noop,\n    inputLoadingStrategyChanged: noop,\n    inputFormatFactoryChanged: noop,\n    formatIdentChanged: noop,\n    formatChanged: noop,\n    overlapsChanged: noop,\n    useSpatialIndexChanged: noop,\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $innerSource: {\n      enumerable: true,\n      get: this.getInnerSource,\n    },\n    $innerSourceVm: {\n      enumerable: true,\n      get: this.getInnerSourceVm,\n    },\n  })\n}\n\nfunction defaultGeomFunc (feature) {\n  const geometry = feature.getGeometry()\n  if (!geometry) return\n\n  const coordinate = findPointOnSurface(geometry)\n  if (coordinate) {\n    return createPointGeom(coordinate)\n  }\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <InnerSource :id=\"'vl-' + currentId + '-inner-source'\">\n      <slot />\n    </InnerSource>\n  </i>\n</template>\n\n<script>\n  import { Cluster as ClusterSource, Source } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, vectorSource } from '../../mixins'\n  import { createPointGeom, findPointOnSurface, getSourceId } from '../../ol-ext'\n  import { assert, clonePlainObject, coalesce, isNumber, mergeDescriptors, noop } from '../../utils'\n  import InnerSource from './inner-source.vue'\n\n  export default {\n    name: 'VlSourceCluster',\n    components: {\n      InnerSource,\n    },\n    mixins: [\n      vectorSource,\n    ],\n    props: {\n      distance: {\n        type: Number,\n        default: 20,\n      },\n      geometryFunction: {\n        type: Function,\n        // default: defaultGeomFunc,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      geomFunc: Function,\n      /**\n       * @deprecated Use geomFunc prop instead.\n       * @todo remove in v0.13.x\n       */\n      geomFuncFactory: Function,\n    },\n    data () {\n      return {\n        currentDistance: this.distance,\n      }\n    },\n    computed: {\n      inputGeometryFunction () {\n        let geomFunc = this.geometryFunction || this.geomFunc\n        if (!geomFunc && this.geomFuncFactory) {\n          geomFunc = this.geomFuncFactory()\n        }\n\n        return geomFunc || defaultGeomFunc\n      },\n      innerSource () {\n        if (!(this.rev && this.$innerSource)) return\n\n        return {\n          id: getSourceId(this.$innerSource),\n          type: this.$innerSource.constructor.name,\n        }\n      },\n      inputUrl: noop,\n      inputLoader: noop,\n      inputLoadingStrategy: noop,\n      formatIdent: noop,\n      inputFormatFactory: noop,\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentDistance !== this.$source.getDistance()) {\n          this.currentDistance = this.$source.getDistance()\n        }\n      },\n      distance (value) {\n        this.setDistance(value)\n      },\n      currentDistance (value) {\n        if (value === this.distance) return\n\n        this.$emit('update:distance', value)\n      },\n      innerSource: {\n        deep: true,\n        handler (value, prev) {\n          if (value === prev) return\n\n          this.$emit('update:innerSource', value && clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputGeometryFunction',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.geomFuncFactory) {\n          this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n        if (this.geomFunc) {\n          this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n      }\n\n      this._innerSource = undefined\n      this._innerSourceVm = undefined\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.geomFuncFactory) {\n          this.$logger.warn(\"'geomFuncFactory' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n        if (this.geomFunc) {\n          this.$logger.warn(\"'geomFunc' prop is deprecated. Use 'geometryFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ClusterSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          wrapX: this.wrapX,\n          // ol/source/Cluster\n          source: this.$innerSource,\n          distance: this.currentDistance,\n          geometryFunction: this.inputGeometryFunction,\n        })\n      },\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::vectorSource.methods.getServices(),\n          {\n            get innerSourceContainer () { return vm },\n          },\n        )\n      },\n      getDistance () {\n        return coalesce(this.$source?.getDistance(), this.currentDistance)\n      },\n      setDistance (distance) {\n        assert(isNumber(distance), 'Invalid distance')\n\n        if (distance !== this.currentDistance) {\n          this.currentDistance = distance\n        }\n        if (this.$source && distance !== this.$source.getDistance()) {\n          this.$source.setDistance(distance)\n        }\n      },\n      getInnerSource () {\n        return this._innerSource\n      },\n      getInnerSourceVm () {\n        return this._innerSourceVm\n      },\n      setInnerSource (innerSource) {\n        innerSource = innerSource?.$source || innerSource\n        assert(!innerSource || innerSource instanceof Source)\n        innerSource || (innerSource = undefined)\n\n        if (innerSource !== this._innerSource) {\n          this._innerSource = innerSource\n          this._innerSourceVm = innerSource?.vm && innerSource.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$source && innerSource !== this.$source.getSource()) {\n          this.$source.setSource(innerSource)\n          this.scheduleRefresh()\n        }\n      },\n      projectionChanged: noop,\n      inputUrlChanged: noop,\n      inputLoaderChanged: noop,\n      inputLoadingStrategyChanged: noop,\n      inputFormatFactoryChanged: noop,\n      formatIdentChanged: noop,\n      formatChanged: noop,\n      overlapsChanged: noop,\n      useSpatialIndexChanged: noop,\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $innerSource: {\n        enumerable: true,\n        get: this.getInnerSource,\n      },\n      $innerSourceVm: {\n        enumerable: true,\n        get: this.getInnerSourceVm,\n      },\n    })\n  }\n\n  function defaultGeomFunc (feature) {\n    const geometry = feature.getGeometry()\n    if (!geometry) return\n\n    const coordinate = findPointOnSurface(geometry)\n    if (coordinate) {\n      return createPointGeom(coordinate)\n    }\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { Collection } from 'ol'\nimport { noModifierKeys, shiftKeyOnly } from 'ol/events/condition'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { Draw as DrawInteraction } from 'ol/interaction'\nimport { Vector as VectorSource } from 'ol/source'\nimport { merge as mergeObs, of as obsOf } from 'rxjs'\nimport { delay, first, map as mapObs, mapTo, mergeMap, tap } from 'rxjs/operators'\nimport { FRAME_TIME, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\nimport { COORD_PRECISION, initializeFeature, roundLineCoords, writeGeoJsonFeature } from '../../ol-ext'\nimport { fromOlEvent as obsFromOlEvent, fromVueEvent as obsFromVueEvent } from '../../rx-ext'\nimport { assert, camelCase, instanceOf, isFunction, mergeDescriptors, upperFirst } from '../../utils'\n\nconst transformType = /*#__PURE__*/type => upperFirst(camelCase(type))\n\nexport default {\n  name: 'VlInteractionDraw',\n  mixins: [\n    interaction,\n    styleContainer,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  props: {\n    /**\n     * Target source or collection identifier from IdentityMap.\n     * @type {String}\n     */\n    source: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The maximum distance in pixels between \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n     * actually add a point/vertex to the geometry being drawn. Default is 6 pixels. That value was chosen for the\n     * draw interaction to behave correctly on mouse as well as on touch devices.\n     * @type {number}\n     */\n    clickTolerance: {\n      type: Number,\n      default: 6,\n    },\n    /**\n     * Pixel distance for snapping to the drawing finish.\n     * @type {number}\n     */\n    snapTolerance: {\n      type: Number,\n      default: 12,\n    },\n    /**\n     * Drawing type ('Point', 'LineString', 'Polygon', 'MultiPoint', 'MultiLineString', 'MultiPolygon' or 'Circle').\n     * @type {string}\n     */\n    type: {\n      type: String,\n      required: true,\n      validator: value => Object.values(GeometryType).includes(transformType(value)),\n    },\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * @type {boolean}\n     */\n    stopClick: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * The number of points that can be drawn before a polygon ring or line string is finished.\n     * @type {number|undefined}\n     */\n    maxPoints: Number,\n    /**\n     * The number of points that must be drawn before a polygon ring or line string can be finished.\n     * Default is `3` for polygon rings and `2` for line strings.\n     * @type {number|undefined}\n     */\n    minPoints: Number,\n    /**\n     * A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether the drawing can be finished.\n     * @type {function|undefined}\n     */\n    finishCondition: Function,\n    /**\n     * Function that is called when a geometry's coordinates are updated.\n     * @type {function|undefined}\n     */\n    geometryFunction: Function,\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string}\n     */\n    geometryName: {\n      type: String,\n      default: 'geometry',\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n     * By default `ol.events.condition.noModifierKeys`, i.e. a click, adds a vertex or deactivates freehand drawing.\n     * @type {function|undefined}\n     */\n    condition: {\n      type: Function,\n      default: noModifierKeys,\n    },\n    /**\n     * Operate in freehand mode for lines, polygons, and circles. This makes the interaction always operate in\n     * freehand mode and takes precedence over any `freehandCondition` option.\n     * @type {boolean}\n     */\n    freehand: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Condition that activates freehand drawing for lines and polygons. This function takes an `ol.MapBrowserEvent` and\n     * returns a boolean to indicate whether that event should be handled. The default is `ol.events.condition.shiftKeyOnly`,\n     * meaning that the Shift key activates freehand drawing.\n     * @type {function|undefined}\n     */\n    freehandCondition: {\n      type: Function,\n      default: shiftKeyOnly,\n    },\n    /**\n     * Wrap the world horizontally on the sketch overlay.\n     * @type {boolean}\n     */\n    wrapX: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Delay in milliseconds after pointerdown before the current vertex can be dragged to its exact position.\n     * @type {number}\n     */\n    dragVertexDelay: {\n      type: Number,\n      default: 500,\n    },\n  },\n  computed: {\n    inputType () {\n      return transformType(this.type)\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'source',\n      'clickTolerance',\n      'snapTolerance',\n      'inputType',\n      'stopClick',\n      'maxPoints',\n      'minPoints',\n      'finishCondition',\n      'geometryFunction',\n      'geometryName',\n      'condition',\n      'freehand',\n      'freehandCondition',\n      'wrapX',\n      'dragVertexDelay',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {Promise<Draw>}\n     * @protected\n     */\n    async createInteraction () {\n      let source = this._source = await this.getInstance(this.source)\n      assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n      let features\n      if (!(source instanceof VectorSource)) {\n        if (isFunction(source.getFeaturesCollection)) {\n          features = source.getFeaturesCollection()\n        } else if (isFunction(source.getFeatures)) {\n          features = source.getFeatures()\n        }\n        instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        source = null\n      }\n\n      return new DrawInteraction({\n        source,\n        features,\n        clickTolerance: this.clickTolerance,\n        snapTolerance: this.snapTolerance,\n        type: this.inputType,\n        stopClick: this.stopClick,\n        maxPoints: this.maxPoints,\n        minPoints: this.minPoints,\n        finishCondition: this.finishCondition,\n        geometryFunction: this.geometryFunction,\n        geometryName: this.geometryName,\n        condition: this.condition,\n        freehand: this.freehand,\n        freehandCondition: this.freehandCondition,\n        wrapX: this.wrapX,\n        dragVertexDelay: this.dragVertexDelay,\n        style: this.$style,\n      })\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      return mergeDescriptors(\n        this::interaction.methods.getServices(),\n        this::styleContainer.methods.getServices(),\n      )\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::interaction.methods.subscribeAll()\n      this::subscribeToInteractionChanges()\n    },\n    /**\n     * @return {StyleTarget}\n     * @protected\n     */\n    getStyleTarget () {\n      return {\n        getStyle: () => this._style,\n        setStyle: () => {\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log('style changed, scheduling recreate...')\n          }\n\n          this.scheduleRecreate()\n        },\n      }\n    },\n    async getOverlay () {\n      return (await this.resolveInteraction()).getOverlay()\n    },\n    async abortDrawing () {\n      (await this.resolveInteraction()).abortDrawing()\n    },\n    async finishDrawing () {\n      (await this.resolveInteraction()).finishDrawing()\n    },\n    async appendCoordinates (coordinates, viewProj = false) {\n      coordinates = viewProj ? roundLineCoords(coordinates) : this.lineToViewProj(coordinates);\n\n      (await this.resolveInteraction()).appendCoordinates(coordinates)\n    },\n    async removeLastPoint () {\n      (await this.resolveInteraction()).removeLastPoint()\n    },\n    async getPointerCount () {\n      return (await this.resolveInteraction()).getPointerCount()\n    },\n  },\n}\n\n/**\n * @return {void}\n * @private\n */\nfunction subscribeToInteractionChanges () {\n  const start = obsFromOlEvent(this.$interaction, 'drawstart').pipe(\n    mapObs(evt => ({\n      ...evt,\n      feature: initializeFeature(evt.feature),\n    })),\n    tap(() => this.setInteracting(true)),\n  )\n  const sourceUpdObs = () => {\n    if (!this._source?.vm?.length) {\n      return obsOf(true).pipe(delay(3 * FRAME_TIME))\n    }\n    // update:features on the source (which is feature-container)\n    // will be always after drawend with delay ~= computed property update time + FRAME_TIME\n    // so we can safely just wait first event\n    return obsFromVueEvent(this._source.vm[0], 'update:features').pipe(\n      first(),\n    )\n  }\n  const end = obsFromOlEvent(this.$interaction, 'drawend').pipe(\n    mergeMap(evt => sourceUpdObs().pipe(\n      mapTo(evt),\n    )),\n    tap(() => this.setInteracting(false)),\n  )\n  const events = mergeObs(start, end).pipe(\n    mapObs(({ type, feature }) => {\n      const viewProj = this.resolvedViewProjection\n      const dataProj = this.resolvedDataProjection\n      return {\n        type,\n        feature,\n        get json () {\n          if (!this._json) {\n            this._json = writeGeoJsonFeature(this.feature, viewProj, dataProj, COORD_PRECISION)\n          }\n          return this._json\n        },\n      }\n    }),\n  )\n  this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n}\n","<script>\n  import { Collection } from 'ol'\n  import { noModifierKeys, shiftKeyOnly } from 'ol/events/condition'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { Draw as DrawInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { merge as mergeObs, of as obsOf } from 'rxjs'\n  import { delay, first, map as mapObs, mapTo, mergeMap, tap } from 'rxjs/operators'\n  import { FRAME_TIME, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, initializeFeature, roundLineCoords, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent, fromVueEvent as obsFromVueEvent } from '../../rx-ext'\n  import { assert, camelCase, instanceOf, isFunction, mergeDescriptors, upperFirst } from '../../utils'\n\n  const transformType = /*#__PURE__*/type => upperFirst(camelCase(type))\n\n  export default {\n    name: 'VlInteractionDraw',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Target source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * The maximum distance in pixels between \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n       * actually add a point/vertex to the geometry being drawn. Default is 6 pixels. That value was chosen for the\n       * draw interaction to behave correctly on mouse as well as on touch devices.\n       * @type {number}\n       */\n      clickTolerance: {\n        type: Number,\n        default: 6,\n      },\n      /**\n       * Pixel distance for snapping to the drawing finish.\n       * @type {number}\n       */\n      snapTolerance: {\n        type: Number,\n        default: 12,\n      },\n      /**\n       * Drawing type ('Point', 'LineString', 'Polygon', 'MultiPoint', 'MultiLineString', 'MultiPolygon' or 'Circle').\n       * @type {string}\n       */\n      type: {\n        type: String,\n        required: true,\n        validator: value => Object.values(GeometryType).includes(transformType(value)),\n      },\n      /**\n       * Stop click, singleclick, and doubleclick events from firing during drawing.\n       * @type {boolean}\n       */\n      stopClick: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * The number of points that can be drawn before a polygon ring or line string is finished.\n       * @type {number|undefined}\n       */\n      maxPoints: Number,\n      /**\n       * The number of points that must be drawn before a polygon ring or line string can be finished.\n       * Default is `3` for polygon rings and `2` for line strings.\n       * @type {number|undefined}\n       */\n      minPoints: Number,\n      /**\n       * A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether the drawing can be finished.\n       * @type {function|undefined}\n       */\n      finishCondition: Function,\n      /**\n       * Function that is called when a geometry's coordinates are updated.\n       * @type {function|undefined}\n       */\n      geometryFunction: Function,\n      /**\n       * Name of the geometry attribute for newly created features.\n       * @type {string}\n       */\n      geometryName: {\n        type: String,\n        default: 'geometry',\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default `ol.events.condition.noModifierKeys`, i.e. a click, adds a vertex or deactivates freehand drawing.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: noModifierKeys,\n      },\n      /**\n       * Operate in freehand mode for lines, polygons, and circles. This makes the interaction always operate in\n       * freehand mode and takes precedence over any `freehandCondition` option.\n       * @type {boolean}\n       */\n      freehand: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Condition that activates freehand drawing for lines and polygons. This function takes an `ol.MapBrowserEvent` and\n       * returns a boolean to indicate whether that event should be handled. The default is `ol.events.condition.shiftKeyOnly`,\n       * meaning that the Shift key activates freehand drawing.\n       * @type {function|undefined}\n       */\n      freehandCondition: {\n        type: Function,\n        default: shiftKeyOnly,\n      },\n      /**\n       * Wrap the world horizontally on the sketch overlay.\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Delay in milliseconds after pointerdown before the current vertex can be dragged to its exact position.\n       * @type {number}\n       */\n      dragVertexDelay: {\n        type: Number,\n        default: 500,\n      },\n    },\n    computed: {\n      inputType () {\n        return transformType(this.type)\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'clickTolerance',\n        'snapTolerance',\n        'inputType',\n        'stopClick',\n        'maxPoints',\n        'minPoints',\n        'finishCondition',\n        'geometryFunction',\n        'geometryName',\n        'condition',\n        'freehand',\n        'freehandCondition',\n        'wrapX',\n        'dragVertexDelay',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Draw>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n        let features\n        if (!(source instanceof VectorSource)) {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new DrawInteraction({\n          source,\n          features,\n          clickTolerance: this.clickTolerance,\n          snapTolerance: this.snapTolerance,\n          type: this.inputType,\n          stopClick: this.stopClick,\n          maxPoints: this.maxPoints,\n          minPoints: this.minPoints,\n          finishCondition: this.finishCondition,\n          geometryFunction: this.geometryFunction,\n          geometryName: this.geometryName,\n          condition: this.condition,\n          freehand: this.freehand,\n          freehandCondition: this.freehandCondition,\n          wrapX: this.wrapX,\n          dragVertexDelay: this.dragVertexDelay,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      async getOverlay () {\n        return (await this.resolveInteraction()).getOverlay()\n      },\n      async abortDrawing () {\n        (await this.resolveInteraction()).abortDrawing()\n      },\n      async finishDrawing () {\n        (await this.resolveInteraction()).finishDrawing()\n      },\n      async appendCoordinates (coordinates, viewProj = false) {\n        coordinates = viewProj ? roundLineCoords(coordinates) : this.lineToViewProj(coordinates);\n\n        (await this.resolveInteraction()).appendCoordinates(coordinates)\n      },\n      async removeLastPoint () {\n        (await this.resolveInteraction()).removeLastPoint()\n      },\n      async getPointerCount () {\n        return (await this.resolveInteraction()).getPointerCount()\n      },\n    },\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const start = obsFromOlEvent(this.$interaction, 'drawstart').pipe(\n      mapObs(evt => ({\n        ...evt,\n        feature: initializeFeature(evt.feature),\n      })),\n      tap(() => this.setInteracting(true)),\n    )\n    const sourceUpdObs = () => {\n      if (!this._source?.vm?.length) {\n        return obsOf(true).pipe(delay(3 * FRAME_TIME))\n      }\n      // update:features on the source (which is feature-container)\n      // will be always after drawend with delay ~= computed property update time + FRAME_TIME\n      // so we can safely just wait first event\n      return obsFromVueEvent(this._source.vm[0], 'update:features').pipe(\n        first(),\n      )\n    }\n    const end = obsFromOlEvent(this.$interaction, 'drawend').pipe(\n      mergeMap(evt => sourceUpdObs().pipe(\n        mapTo(evt),\n      )),\n      tap(() => this.setInteracting(false)),\n    )\n    const events = mergeObs(start, end).pipe(\n      mapObs(({ type, feature }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          feature,\n          get json () {\n            if (!this._json) {\n              this._json = writeGeoJsonFeature(this.feature, viewProj, dataProj, COORD_PRECISION)\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\nimport { Circle } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { get as getProj } from 'ol/proj'\nimport { simpleGeometry } from '../../mixins'\nimport { isPointCoords, roundPointCoords, transformDistance } from '../../ol-ext'\nimport { assert, coalesce, constant, isEqual, isNumber, round } from '../../utils'\n\nexport default {\n  name: 'VlGeomCircle',\n  mixins: [\n    simpleGeometry,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    coordinates: {\n      ...simpleGeometry.props.coordinates,\n      validator: isPointCoords,\n    },\n    /* eslint-enable vue/require-prop-types */\n    /**\n     * Circle radius always in meters.\n     * @type {number}\n     */\n    radius: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * Projection in which radius provided.\n     * Default: map data projection\n     * @type {string}\n     */\n    radiusProjection: {\n      type: String,\n      validator: value => !!getProj(value),\n    },\n  },\n  data () {\n    return {\n      currentRadiusViewProj: this.radius,\n    }\n  },\n  computed: {\n    type: /*#__PURE__*/constant(GeometryType.CIRCLE),\n    resolvedRadiusProjection () {\n      return this.radiusProjection || this.resolvedDataProjection\n    },\n    radiusDataProj () {\n      return round(this.radius)\n    },\n    radiusViewProj () {\n      return this.radiusToViewProj(this.radius, this.coordinatesDataProj)\n    },\n    currentRadiusDataProj () {\n      return this.radiusToDataProj(this.currentRadiusViewProj)\n    },\n  },\n  watch: {\n    radiusViewProj (value) {\n      this.setRadius(value, true)\n    },\n    currentRadiusDataProj (value) {\n      if (value === this.radiusDataProj) return\n\n      this.$emit('update:radius', value)\n    },\n  },\n  created () {\n    this.currentRadiusViewProj = this.radiusViewProj\n  },\n  methods: {\n    /**\n     * @return {Circle}\n     * @protected\n     */\n    createGeometry () {\n      return new Circle(this.currentCoordinatesViewProj, this.currentRadiusViewProj)\n    },\n    /**\n     * @param {boolean} [viewProj=false]\n     * @return {number[]}\n     */\n    getCoordinates (viewProj = false) {\n      return this.getCenter(viewProj)\n    },\n    /**\n     * @param {number[]} coordinate\n     * @param {boolean} [viewProj=false]\n     */\n    setCoordinates (coordinate, viewProj = false) {\n      this.setCenter(coordinate, viewProj)\n    },\n    /**\n     * @param {boolean} [viewProj=false]\n     * @return {number[]}\n     */\n    getCenter (viewProj = false) {\n      const center = coalesce(this.$geometry?.getCenter(), this.currentCoordinatesViewProj)\n\n      return viewProj ? roundPointCoords(center) : this.pointToDataProj(center)\n    },\n    /**\n     * @param {number[]} center\n     * @param {boolean} [viewProj=false]\n     */\n    setCenter (center, viewProj = false) {\n      assert(isPointCoords(center), 'Invalid center')\n      center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n\n      if (!isEqual(center, this.currentCoordinatesViewProj)) {\n        this.currentCoordinatesViewProj = center\n      }\n      if (this.$geometry && !isEqual(center, this.$geometry.getCenter())) {\n        this.$geometry.setCenter(center)\n      }\n    },\n    /**\n     * @param {boolean} [viewProj=false]\n     * @return {number}\n     */\n    getRadius (viewProj = false) {\n      const radius = coalesce(this.$geometry?.getRadius(), this.currentRadiusViewProj)\n\n      return viewProj ? round(radius) : this.radiusToDataProj(radius)\n    },\n    /**\n     * @param {number} radius\n     * @param {boolean} [viewProj=false]\n     */\n    setRadius (radius, viewProj = false) {\n      assert(isNumber(radius), 'Invalid radius')\n      radius = viewProj ? round(radius) : this.radiusToDataProj(radius)\n\n      if (radius !== this.currentRadiusViewProj) {\n        this.currentRadiusViewProj = radius\n      }\n      if (this.$geometry && radius !== this.$geometry.getRadius()) {\n        this.$geometry.setRadius(radius)\n      }\n    },\n    /**\n     * @param {number[]} center\n     * @param {number} radius\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<void>}\n     */\n    setCenterAndRadius (center, radius, viewProj = false) {\n      center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n      radius = viewProj ? round(radius) : this.radiusToViewProj(radius)\n\n      if (this.$geometry) {\n        this.$geometry.setCenterAndRadius(center, radius)\n      } else {\n        this.setCenter(center, true)\n        this.setRadius(radius, true)\n      }\n    },\n    /**\n     * @param {number} radius\n     * @return {undefined|number}\n     * @protected\n     */\n    radiusToViewProj (radius) {\n      return transformDistance(radius, this.resolvedRadiusProjection, this.resolvedViewProjection)\n    },\n    /**\n     * @param {number} radius\n     * @return {undefined|number}\n     * @protected\n     */\n    radiusToDataProj (radius) {\n      return transformDistance(radius, this.resolvedViewProjection, this.resolvedRadiusProjection)\n    },\n  },\n}\n","<script>\n  import { Circle } from 'ol/geom'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { get as getProj } from 'ol/proj'\n  import { simpleGeometry } from '../../mixins'\n  import { isPointCoords, roundPointCoords, transformDistance } from '../../ol-ext'\n  import { assert, coalesce, constant, isEqual, isNumber, round } from '../../utils'\n\n  export default {\n    name: 'VlGeomCircle',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n      /**\n       * Circle radius always in meters.\n       * @type {number}\n       */\n      radius: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * Projection in which radius provided.\n       * Default: map data projection\n       * @type {string}\n       */\n      radiusProjection: {\n        type: String,\n        validator: value => !!getProj(value),\n      },\n    },\n    data () {\n      return {\n        currentRadiusViewProj: this.radius,\n      }\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.CIRCLE),\n      resolvedRadiusProjection () {\n        return this.radiusProjection || this.resolvedDataProjection\n      },\n      radiusDataProj () {\n        return round(this.radius)\n      },\n      radiusViewProj () {\n        return this.radiusToViewProj(this.radius, this.coordinatesDataProj)\n      },\n      currentRadiusDataProj () {\n        return this.radiusToDataProj(this.currentRadiusViewProj)\n      },\n    },\n    watch: {\n      radiusViewProj (value) {\n        this.setRadius(value, true)\n      },\n      currentRadiusDataProj (value) {\n        if (value === this.radiusDataProj) return\n\n        this.$emit('update:radius', value)\n      },\n    },\n    created () {\n      this.currentRadiusViewProj = this.radiusViewProj\n    },\n    methods: {\n      /**\n       * @return {Circle}\n       * @protected\n       */\n      createGeometry () {\n        return new Circle(this.currentCoordinatesViewProj, this.currentRadiusViewProj)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCoordinates (viewProj = false) {\n        return this.getCenter(viewProj)\n      },\n      /**\n       * @param {number[]} coordinate\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinate, viewProj = false) {\n        this.setCenter(coordinate, viewProj)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCenter (viewProj = false) {\n        const center = coalesce(this.$geometry?.getCenter(), this.currentCoordinatesViewProj)\n\n        return viewProj ? roundPointCoords(center) : this.pointToDataProj(center)\n      },\n      /**\n       * @param {number[]} center\n       * @param {boolean} [viewProj=false]\n       */\n      setCenter (center, viewProj = false) {\n        assert(isPointCoords(center), 'Invalid center')\n        center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n\n        if (!isEqual(center, this.currentCoordinatesViewProj)) {\n          this.currentCoordinatesViewProj = center\n        }\n        if (this.$geometry && !isEqual(center, this.$geometry.getCenter())) {\n          this.$geometry.setCenter(center)\n        }\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number}\n       */\n      getRadius (viewProj = false) {\n        const radius = coalesce(this.$geometry?.getRadius(), this.currentRadiusViewProj)\n\n        return viewProj ? round(radius) : this.radiusToDataProj(radius)\n      },\n      /**\n       * @param {number} radius\n       * @param {boolean} [viewProj=false]\n       */\n      setRadius (radius, viewProj = false) {\n        assert(isNumber(radius), 'Invalid radius')\n        radius = viewProj ? round(radius) : this.radiusToDataProj(radius)\n\n        if (radius !== this.currentRadiusViewProj) {\n          this.currentRadiusViewProj = radius\n        }\n        if (this.$geometry && radius !== this.$geometry.getRadius()) {\n          this.$geometry.setRadius(radius)\n        }\n      },\n      /**\n       * @param {number[]} center\n       * @param {number} radius\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      setCenterAndRadius (center, radius, viewProj = false) {\n        center = viewProj ? roundPointCoords(center) : this.pointToViewProj(center)\n        radius = viewProj ? round(radius) : this.radiusToViewProj(radius)\n\n        if (this.$geometry) {\n          this.$geometry.setCenterAndRadius(center, radius)\n        } else {\n          this.setCenter(center, true)\n          this.setRadius(radius, true)\n        }\n      },\n      /**\n       * @param {number} radius\n       * @return {undefined|number}\n       * @protected\n       */\n      radiusToViewProj (radius) {\n        return transformDistance(radius, this.resolvedRadiusProjection, this.resolvedViewProjection)\n      },\n      /**\n       * @param {number} radius\n       * @return {undefined|number}\n       * @protected\n       */\n      radiusToDataProj (radius) {\n        return transformDistance(radius, this.resolvedViewProjection, this.resolvedRadiusProjection)\n      },\n    },\n  }\n</script>\n","\nimport { Point } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { simpleGeometry } from '../../mixins'\nimport { isPointCoords } from '../../ol-ext'\nimport { assert, constant } from '../../utils'\n\nexport default {\n  name: 'VlGeomPoint',\n  mixins: [\n    simpleGeometry,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    coordinates: {\n      ...simpleGeometry.props.coordinates,\n      validator: isPointCoords,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  computed: {\n    type: /*#__PURE__*/constant(GeometryType.POINT),\n  },\n  methods: {\n    /**\n     * @return {Point}\n     * @protected\n     */\n    createGeometry () {\n      return new Point(this.currentCoordinatesViewProj)\n    },\n    /**\n     * @param {number[]} coordinates\n     * @param {boolean} [viewProj=false]\n     */\n    setCoordinates (coordinates, viewProj = false) {\n      assert(isPointCoords(coordinates), 'Invalid coordinates')\n\n      this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n    },\n  },\n}\n","<script>\n  import { Point } from 'ol/geom'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { simpleGeometry } from '../../mixins'\n  import { isPointCoords } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomPoint',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.POINT),\n    },\n    methods: {\n      /**\n       * @return {Point}\n       * @protected\n       */\n      createGeometry () {\n        return new Point(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isPointCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { feature } from '../../mixins'\nimport PointGeom from './point-geom.vue'\n\n/**\n * A vector object for geographic features with a geometry and other attribute properties,\n * similar to the features in vector file formats like **GeoJSON**.\n */\nexport default {\n  name: 'VlFeature',\n  components: {\n    PointGeom,\n  },\n  mixins: [\n    feature,\n  ],\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot\n      :id=\"currentId\"\n      :properties=\"currentProperties\">\n      <PointGeom\n        :id=\"'vl-' + currentId + '-default-geom'\"\n        :coordinates=\"[0, 0]\" />\n    </slot>\n  </i>\n</template>\n\n<script>\n  import { feature } from '../../mixins'\n  import PointGeom from './point-geom.vue'\n\n  /**\n   * A vector object for geographic features with a geometry and other attribute properties,\n   * similar to the features in vector file formats like **GeoJSON**.\n   */\n  export default {\n    name: 'VlFeature',\n    components: {\n      PointGeom,\n    },\n    mixins: [\n      feature,\n    ],\n  }\n</script>\n","\nimport { LineString } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { simpleGeometry } from '../../mixins'\nimport { isLineCoords } from '../../ol-ext'\nimport { assert, constant } from '../../utils'\n\nexport default {\n  name: 'VlGeomLineString',\n  mixins: [\n    simpleGeometry,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    coordinates: {\n      ...simpleGeometry.props.coordinates,\n      validator: isLineCoords,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  computed: {\n    type: /*#__PURE__*/constant(GeometryType.LINE_STRING),\n  },\n  methods: {\n    /**\n     * @returns {LineString}\n     * @protected\n     */\n    createGeometry () {\n      return new LineString(this.currentCoordinatesViewProj)\n    },\n    /**\n     * @param {number[]} coordinates\n     * @param {boolean} [viewProj=false]\n     */\n    setCoordinates (coordinates, viewProj = false) {\n      assert(isLineCoords(coordinates), 'Invalid coordinates')\n\n      this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n    },\n  },\n}\n","<script>\n  import { LineString } from 'ol/geom'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { simpleGeometry } from '../../mixins'\n  import { isLineCoords } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomLineString',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isLineCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.LINE_STRING),\n    },\n    methods: {\n      /**\n       * @returns {LineString}\n       * @protected\n       */\n      createGeometry () {\n        return new LineString(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isLineCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\nimport { MultiLineString } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { simpleGeometry } from '../../mixins'\nimport { isMultiLineCoords } from '../../ol-ext'\nimport { assert, constant } from '../../utils'\n\nexport default {\n  name: 'VlGeomMultiLineString',\n  mixins: [\n    simpleGeometry,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    coordinates: {\n      ...simpleGeometry.props.coordinates,\n      validator: isMultiLineCoords,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  computed: {\n    type: /*#__PURE__*/constant(GeometryType.MULTI_LINE_STRING),\n  },\n  methods: {\n    /**\n     * @returns {MultiLineString}\n     * @protected\n     */\n    createGeometry () {\n      return new MultiLineString(this.currentCoordinatesViewProj)\n    },\n    /**\n     * @param {number[]} coordinates\n     * @param {boolean} [viewProj=false]\n     */\n    setCoordinates (coordinates, viewProj = false) {\n      assert(isMultiLineCoords(coordinates), 'Invalid coordinates')\n\n      this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n    },\n  },\n}\n","<script>\n  import { MultiLineString } from 'ol/geom'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiLineCoords } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiLineString',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiLineCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_LINE_STRING),\n    },\n    methods: {\n      /**\n       * @returns {MultiLineString}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiLineString(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiLineCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\nimport { MultiPoint } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { simpleGeometry } from '../../mixins'\nimport { isMultiPointCoords } from '../../ol-ext'\nimport { assert, constant } from '../../utils'\n\nexport default {\n  name: 'VlGeomMultiPoint',\n  mixins: [\n    simpleGeometry,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    coordinates: {\n      ...simpleGeometry.props.coordinates,\n      validator: isMultiPointCoords,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  computed: {\n    type: /*#__PURE__*/constant(GeometryType.MULTI_POINT),\n  },\n  methods: {\n    /**\n     * @returns {MultiPoint}\n     * @protected\n     */\n    createGeometry () {\n      return new MultiPoint(this.currentCoordinatesViewProj)\n    },\n    /**\n     * @param {number[]} coordinates\n     * @param {boolean} [viewProj=false]\n     */\n    setCoordinates (coordinates, viewProj = false) {\n      assert(isMultiPointCoords(coordinates), 'Invalid coordinates')\n\n      this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n    },\n  },\n}\n","<script>\n  import { MultiPoint } from 'ol/geom'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiPointCoords } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiPoint',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiPointCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_POINT),\n    },\n    methods: {\n      /**\n       * @returns {MultiPoint}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiPoint(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiPointCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\nimport { MultiPolygon } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { simpleGeometry } from '../../mixins'\nimport { isMultiPolygonCoords } from '../../ol-ext'\nimport { assert, constant } from '../../utils'\n\nexport default {\n  name: 'VlGeomMultiPolygon',\n  mixins: [\n    simpleGeometry,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    coordinates: {\n      ...simpleGeometry.props.coordinates,\n      validator: isMultiPolygonCoords,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  computed: {\n    type: /*#__PURE__*/constant(GeometryType.MULTI_POLYGON),\n  },\n  methods: {\n    /**\n     * @returns {MultiPolygon}\n     * @protected\n     */\n    createGeometry () {\n      return new MultiPolygon(this.currentCoordinatesViewProj)\n    },\n    /**\n     * @param {number[]} coordinates\n     * @param {boolean} [viewProj=false]\n     */\n    setCoordinates (coordinates, viewProj = false) {\n      assert(isMultiPolygonCoords(coordinates), 'Invalid coordinates')\n\n      this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n    },\n  },\n}\n","<script>\n  import { MultiPolygon } from 'ol/geom'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { simpleGeometry } from '../../mixins'\n  import { isMultiPolygonCoords } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomMultiPolygon',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isMultiPolygonCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.MULTI_POLYGON),\n    },\n    methods: {\n      /**\n       * @returns {MultiPolygon}\n       * @protected\n       */\n      createGeometry () {\n        return new MultiPolygon(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isMultiPolygonCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","\nimport { Polygon } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { simpleGeometry } from '../../mixins'\nimport { isPolygonCoords } from '../../ol-ext'\nimport { assert, constant } from '../../utils'\n\nexport default {\n  name: 'VlGeomPolygon',\n  mixins: [\n    simpleGeometry,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    coordinates: {\n      ...simpleGeometry.props.coordinates,\n      validator: isPolygonCoords,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  computed: {\n    type: /*#__PURE__*/constant(GeometryType.POLYGON),\n  },\n  methods: {\n    /**\n     * @returns {Polygon}\n     * @protected\n     */\n    createGeometry () {\n      return new Polygon(this.currentCoordinatesViewProj)\n    },\n    /**\n     * @param {number[]} coordinates\n     * @param {boolean} [viewProj=false]\n     */\n    setCoordinates (coordinates, viewProj = false) {\n      assert(isPolygonCoords(coordinates), 'Invalid coordinates')\n\n      this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n    },\n  },\n}\n","<script>\n  import { Polygon } from 'ol/geom'\n  import GeometryType from 'ol/geom/GeometryType'\n  import { simpleGeometry } from '../../mixins'\n  import { isPolygonCoords } from '../../ol-ext'\n  import { assert, constant } from '../../utils'\n\n  export default {\n    name: 'VlGeomPolygon',\n    mixins: [\n      simpleGeometry,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      coordinates: {\n        ...simpleGeometry.props.coordinates,\n        validator: isPolygonCoords,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      type: /*#__PURE__*/constant(GeometryType.POLYGON),\n    },\n    methods: {\n      /**\n       * @returns {Polygon}\n       * @protected\n       */\n      createGeometry () {\n        return new Polygon(this.currentCoordinatesViewProj)\n      },\n      /**\n       * @param {number[]} coordinates\n       * @param {boolean} [viewProj=false]\n       */\n      setCoordinates (coordinates, viewProj = false) {\n        assert(isPolygonCoords(coordinates), 'Invalid coordinates')\n\n        this::simpleGeometry.methods.setCoordinates(coordinates, viewProj)\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport CircleGeom from './circle-geom.vue'\nimport Feature from './feature.vue'\nimport LineStringGeom from './line-string-geom.vue'\nimport MultiLineStringGeom from './multi-line-string-geom.vue'\nimport MultiPointGeom from './multi-point-geom.vue'\nimport MultiPolygonGeom from './multi-polygon-geom.vue'\nimport PointGeom from './point-geom.vue'\nimport PolygonGeom from './polygon-geom.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Feature, options)\n  Object.assign(CircleGeom, options)\n  Object.assign(PointGeom, options)\n  Object.assign(LineStringGeom, options)\n  Object.assign(PolygonGeom, options)\n  Object.assign(MultiPointGeom, options)\n  Object.assign(MultiLineStringGeom, options)\n  Object.assign(MultiPolygonGeom, options)\n\n  Vue.component(Feature.name, Feature)\n  Vue.component(CircleGeom.name, CircleGeom)\n  Vue.component(PointGeom.name, PointGeom)\n  Vue.component(LineStringGeom.name, LineStringGeom)\n  Vue.component(PolygonGeom.name, PolygonGeom)\n  Vue.component(MultiPointGeom.name, MultiPointGeom)\n  Vue.component(MultiLineStringGeom.name, MultiLineStringGeom)\n  Vue.component(MultiPolygonGeom.name, MultiPolygonGeom)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Feature,\n  CircleGeom,\n  PointGeom,\n  LineStringGeom,\n  PolygonGeom,\n  MultiPointGeom,\n  MultiLineStringGeom,\n  MultiPolygonGeom,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Geolocation } from 'ol'\nimport { get as getProj } from 'ol/proj'\nimport { merge as mergeObs } from 'rxjs'\nimport { map as mapObs } from 'rxjs/operators'\nimport { olCmp, projTransforms, waitForMap } from '../../mixins'\nimport { EPSG_3857 } from '../../ol-ext'\nimport { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\nimport { addPrefix, and, assert, clonePlainObject, coalesce, isEqual, isString } from '../../utils'\n\nconst validateProjection = /*#__PURE__*/and(isString, value => getProj(value) != null)\n\nexport default {\n  name: 'VlGeoloc',\n  mixins: [\n    projTransforms,\n    olCmp,\n    waitForMap,\n  ],\n  stubVNode: {\n    empty () {\n      return this.vmId\n    },\n  },\n  props: {\n    tracking: {\n      type: Boolean,\n      default: true,\n    },\n    trackingOptions: Object,\n    projection: {\n      type: String,\n      validator: validateProjection,\n    },\n  },\n  data () {\n    return {\n      viewProjection: EPSG_3857,\n      dataProjection: EPSG_3857,\n      currentTracking: this.tracking,\n      currentTrackingOptions: this.trackingOptions && clonePlainObject(this.trackingOptions),\n      currentProjection: this.projection,\n    }\n  },\n  computed: {\n    resolvedDataProjection () {\n      return coalesce(\n        this.currentProjection,\n        this.$options?.dataProjection,\n        this.dataProjection,\n        this.resolvedViewProjection,\n      )\n    },\n    accuracy () {\n      return this.rev ? this.getAccuracy() : undefined\n    },\n    accuracyGeometryDataProj () {\n      return this.rev ? this.writeGeometryInDataProj(this.getAccuracyGeometry()) : undefined\n    },\n    accuracyGeometryViewProj () {\n      return this.rev ? this.writeGeometryInViewProj(this.getAccuracyGeometry()) : undefined\n    },\n    altitude () {\n      return this.rev ? this.getAltitude() : undefined\n    },\n    altitudeAccuracy () {\n      return this.rev ? this.getAltitudeAccuracy() : undefined\n    },\n    heading () {\n      return this.rev ? this.getHeading() : undefined\n    },\n    speed () {\n      return this.rev ? this.getSpeed() : undefined\n    },\n    positionDataProj () {\n      return this.rev ? this.getPosition() : undefined\n    },\n    positionViewProj () {\n      return this.rev ? this.pointToViewProj(this.getPosition()) : undefined\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$geolocation) return\n\n      if (this.currentTracking !== this.$geolocation.getTracking()) {\n        this.currentTracking = this.$geolocation.getTracking()\n      }\n      if (!isEqual(this.currentTrackingOptions, this.$geolocation.getTrackingOptions())) {\n        this.currentTrackingOptions = this.$geolocation.getTrackingOptions()\n      }\n      if (this.currentProjection !== this.$geolocation.getProjection().getCode()) {\n        this.currentProjection = this.$geolocation.getProjection().getCode()\n      }\n    },\n    tracking (value) {\n      this.setTracking(value)\n    },\n    currentTracking (value) {\n      if (value === this.tracking) return\n\n      this.$emit('update:tracking', value)\n    },\n    tracingOptions: {\n      deep: true,\n      handler (value) {\n        this.setTrackingOptions(value)\n      },\n    },\n    currentTrackingOptions: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.trackingOptions)) return\n\n        this.$emit('update:tracingOptions', value && clonePlainObject(value))\n      },\n    },\n    projection (value) {\n      this.setProjection(value)\n    },\n    currentProjection (value) {\n      if (value === this.projection) return\n\n      this.$emit('update:projection', value)\n    },\n    accuracy (value, prev) {\n      if (value === prev) return\n\n      this.$emit('update:accuracy', value)\n    },\n    accuracyGeometryDataProj (value, prev) {\n      if (isEqual(value, prev)) return\n\n      this.$emit('update:accuracyGeometry', value)\n    },\n    currentAltitude (value, prev) {\n      if (value === prev) return\n\n      this.$emit('update:altitude', value)\n    },\n    altitudeAccuracy (value, prev) {\n      if (value === prev) return\n\n      this.$emit('update:altitudeAccuracy', value)\n    },\n    heading (value, prev) {\n      if (value === prev) return\n\n      this.$emit('update:heading', value)\n    },\n    speed (value, prev) {\n      if (value === prev) return\n\n      this.$emit('update:speed', value)\n    },\n    positionDataProj (value, prev) {\n      if (isEqual(value, prev)) return\n\n      this.$emit('update:position', value)\n    },\n  },\n  created () {\n    this::defineServices()\n  },\n  methods: {\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async beforeInit () {\n      await Promise.all([\n        this::olCmp.methods.beforeInit(),\n        this::waitForMap.methods.beforeInit(),\n      ])\n    },\n    /**\n     * @return {module:ol/Geolocation~Geolocation}\n     * @private\n     */\n    createOlObject () {\n      const geoloc = new Geolocation({\n        tracking: this.currentTracking,\n        trackingOptions: this.currentTrackingOptions,\n        projection: this.resolvedDataProjection,\n      })\n      geoloc.set('id', this.currentId)\n\n      return geoloc\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    mount () {\n      this.setTracking(this.tracking)\n\n      return this::olCmp.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    unmount () {\n      this.setTracking(false)\n\n      return this::olCmp.methods.unmount()\n    },\n    /**\n     * @protected\n     */\n    subscribeAll () {\n      this::olCmp.methods.subscribeAll()\n      this::subscribeToGeolocation()\n    },\n    resolveGeolocation: olCmp.methods.resolveOlObject,\n    /**\n     * @return {number|string}\n     */\n    getIdInternal () {\n      return this.$geolocation.get('id')\n    },\n    /**\n     * @param {string|number} id\n     * @return {void}\n     */\n    setIdInternal (id) {\n      if (id === this.getIdInternal()) return\n\n      this.$geolocation.set('id', id)\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getAccuracy () {\n      return this.$geolocation?.getAccuracy()\n    },\n    /**\n     * @return {module:/ol/geom/Geometry~Geometry|undefined}\n     */\n    getAccuracyGeometry () {\n      return this.$geolocation?.getAccuracyGeometry()\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getAltitude () {\n      return this.$geolocation?.getAltitude()\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getAltitudeAccuracy () {\n      return this.$geolocation?.getAltitudeAccuracy()\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getHeading () {\n      return this.$geolocation?.getHeading()\n    },\n    /**\n     * @return {number[]|undefined}\n     */\n    getPosition () {\n      return this.$geolocation?.getPosition()\n    },\n    /**\n     * @return {module:ol/proj~ProjectionLike|undefined}\n     */\n    getProjection () {\n      return coalesce(this.$geolocation?.getProjection(), this.currentProjection)\n    },\n    /**\n     * @param {module:ol/proj~ProjectionLike} projection\n     */\n    setProjection (projection) {\n      assert(validateProjection(projection), 'Invalid projection')\n      projection = getProj(projection)\n\n      if (projection.getCode() !== this.currentProjection) {\n        this.currentProjection = projection.getCode()\n      }\n      if (this.$geolocation && projection !== this.$geolocation.getProjection()) {\n        this.$geolocation.setProjection(projection)\n      }\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getSpeed () {\n      return this.$geolocation?.getSpeed()\n    },\n    /**\n     * @return {boolean}\n     */\n    getTracking () {\n      return coalesce(this.$geolocation?.getTracking(), this.currentTracking)\n    },\n    /**\n     * @param {boolean} tracking\n     */\n    setTracking (tracking) {\n      if (tracking !== this.currentTracking) {\n        this.currentTracking = tracking\n      }\n      if (this.$geolocation && tracking !== this.$geolocation.getTracking()) {\n        this.$geolocation.setTracking(tracking)\n      }\n    },\n    /**\n     * @return {Object|undefined}\n     */\n    getTrackingOptions () {\n      return coalesce(this.$geolocation?.getTrackingOptions(), this.currentTrackingOptions)\n    },\n    /**\n     * @param {Promise<Object|undefined>} options\n     */\n    setTrackingOptions (options) {\n      if (!isEqual(options, this.currentTrackingOptions)) {\n        this.currentTrackingOptions = options\n      }\n      if (this.$geolocation && !isEqual(options, this.$geolocation.getTrackingOptions())) {\n        this.$geolocation.setTrackingOptions(options)\n      }\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $geolocation: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    $mapVm: {\n      enumerable: true,\n      get: () => this.$services?.mapVm,\n    },\n    $viewVm: {\n      enumerable: true,\n      get: () => this.$services?.viewVm,\n    },\n  })\n}\n\n/**\n * @return {void}\n * @private\n */\nfunction subscribeToGeolocation () {\n  const setterKey = addPrefix('set')\n  const setPropsChanges = mergeObs(\n    obsFromOlChangeEvent(this.$geolocation, 'projection', true, evt => ({\n      ...evt,\n      value: getProj(evt.value).getCode(),\n    })),\n    obsFromOlChangeEvent(this.$geolocation, [\n      'tracking',\n      'trackingOptions',\n    ], true),\n  ).pipe(\n    mapObs(evt => ({\n      ...evt,\n      setter: val => {\n        this[setterKey(evt.prop)](val)\n        this.scheduleRefresh()\n      },\n    })),\n  )\n  this.subscribeTo(setPropsChanges, ({ setter, value }) => setter(value))\n\n  const otherChanged = obsFromOlChangeEvent(this.$geolocation, [\n    'accuracy',\n    'accuracyGeometry',\n    'altitude',\n    'altitudeAccuracy',\n    'heading',\n    'speed',\n    'position',\n  ], true)\n  this.subscribeTo(otherChanged, ::this.scheduleRefresh)\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot\n      :accuracy=\"accuracy\"\n      :accuracy-geometry=\"accuracyGeometryDataProj\"\n      :altitude=\"altitude\"\n      :altitude-accuracy=\"altitudeAccuracy\"\n      :heading=\"heading\"\n      :position=\"positionDataProj\"\n      :speed=\"speed\" />\n  </i>\n</template>\n\n<script>\n  import { Geolocation } from 'ol'\n  import { get as getProj } from 'ol/proj'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs } from 'rxjs/operators'\n  import { olCmp, projTransforms, waitForMap } from '../../mixins'\n  import { EPSG_3857 } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, and, assert, clonePlainObject, coalesce, isEqual, isString } from '../../utils'\n\n  const validateProjection = /*#__PURE__*/and(isString, value => getProj(value) != null)\n\n  export default {\n    name: 'VlGeoloc',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty () {\n        return this.vmId\n      },\n    },\n    props: {\n      tracking: {\n        type: Boolean,\n        default: true,\n      },\n      trackingOptions: Object,\n      projection: {\n        type: String,\n        validator: validateProjection,\n      },\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentTracking: this.tracking,\n        currentTrackingOptions: this.trackingOptions && clonePlainObject(this.trackingOptions),\n        currentProjection: this.projection,\n      }\n    },\n    computed: {\n      resolvedDataProjection () {\n        return coalesce(\n          this.currentProjection,\n          this.$options?.dataProjection,\n          this.dataProjection,\n          this.resolvedViewProjection,\n        )\n      },\n      accuracy () {\n        return this.rev ? this.getAccuracy() : undefined\n      },\n      accuracyGeometryDataProj () {\n        return this.rev ? this.writeGeometryInDataProj(this.getAccuracyGeometry()) : undefined\n      },\n      accuracyGeometryViewProj () {\n        return this.rev ? this.writeGeometryInViewProj(this.getAccuracyGeometry()) : undefined\n      },\n      altitude () {\n        return this.rev ? this.getAltitude() : undefined\n      },\n      altitudeAccuracy () {\n        return this.rev ? this.getAltitudeAccuracy() : undefined\n      },\n      heading () {\n        return this.rev ? this.getHeading() : undefined\n      },\n      speed () {\n        return this.rev ? this.getSpeed() : undefined\n      },\n      positionDataProj () {\n        return this.rev ? this.getPosition() : undefined\n      },\n      positionViewProj () {\n        return this.rev ? this.pointToViewProj(this.getPosition()) : undefined\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$geolocation) return\n\n        if (this.currentTracking !== this.$geolocation.getTracking()) {\n          this.currentTracking = this.$geolocation.getTracking()\n        }\n        if (!isEqual(this.currentTrackingOptions, this.$geolocation.getTrackingOptions())) {\n          this.currentTrackingOptions = this.$geolocation.getTrackingOptions()\n        }\n        if (this.currentProjection !== this.$geolocation.getProjection().getCode()) {\n          this.currentProjection = this.$geolocation.getProjection().getCode()\n        }\n      },\n      tracking (value) {\n        this.setTracking(value)\n      },\n      currentTracking (value) {\n        if (value === this.tracking) return\n\n        this.$emit('update:tracking', value)\n      },\n      tracingOptions: {\n        deep: true,\n        handler (value) {\n          this.setTrackingOptions(value)\n        },\n      },\n      currentTrackingOptions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.trackingOptions)) return\n\n          this.$emit('update:tracingOptions', value && clonePlainObject(value))\n        },\n      },\n      projection (value) {\n        this.setProjection(value)\n      },\n      currentProjection (value) {\n        if (value === this.projection) return\n\n        this.$emit('update:projection', value)\n      },\n      accuracy (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:accuracy', value)\n      },\n      accuracyGeometryDataProj (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:accuracyGeometry', value)\n      },\n      currentAltitude (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:altitude', value)\n      },\n      altitudeAccuracy (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:altitudeAccuracy', value)\n      },\n      heading (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:heading', value)\n      },\n      speed (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:speed', value)\n      },\n      positionDataProj (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:position', value)\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/Geolocation~Geolocation}\n       * @private\n       */\n      createOlObject () {\n        const geoloc = new Geolocation({\n          tracking: this.currentTracking,\n          trackingOptions: this.currentTrackingOptions,\n          projection: this.resolvedDataProjection,\n        })\n        geoloc.set('id', this.currentId)\n\n        return geoloc\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      mount () {\n        this.setTracking(this.tracking)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      unmount () {\n        this.setTracking(false)\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToGeolocation()\n      },\n      resolveGeolocation: olCmp.methods.resolveOlObject,\n      /**\n       * @return {number|string}\n       */\n      getIdInternal () {\n        return this.$geolocation.get('id')\n      },\n      /**\n       * @param {string|number} id\n       * @return {void}\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        this.$geolocation.set('id', id)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAccuracy () {\n        return this.$geolocation?.getAccuracy()\n      },\n      /**\n       * @return {module:/ol/geom/Geometry~Geometry|undefined}\n       */\n      getAccuracyGeometry () {\n        return this.$geolocation?.getAccuracyGeometry()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAltitude () {\n        return this.$geolocation?.getAltitude()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getAltitudeAccuracy () {\n        return this.$geolocation?.getAltitudeAccuracy()\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getHeading () {\n        return this.$geolocation?.getHeading()\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getPosition () {\n        return this.$geolocation?.getPosition()\n      },\n      /**\n       * @return {module:ol/proj~ProjectionLike|undefined}\n       */\n      getProjection () {\n        return coalesce(this.$geolocation?.getProjection(), this.currentProjection)\n      },\n      /**\n       * @param {module:ol/proj~ProjectionLike} projection\n       */\n      setProjection (projection) {\n        assert(validateProjection(projection), 'Invalid projection')\n        projection = getProj(projection)\n\n        if (projection.getCode() !== this.currentProjection) {\n          this.currentProjection = projection.getCode()\n        }\n        if (this.$geolocation && projection !== this.$geolocation.getProjection()) {\n          this.$geolocation.setProjection(projection)\n        }\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getSpeed () {\n        return this.$geolocation?.getSpeed()\n      },\n      /**\n       * @return {boolean}\n       */\n      getTracking () {\n        return coalesce(this.$geolocation?.getTracking(), this.currentTracking)\n      },\n      /**\n       * @param {boolean} tracking\n       */\n      setTracking (tracking) {\n        if (tracking !== this.currentTracking) {\n          this.currentTracking = tracking\n        }\n        if (this.$geolocation && tracking !== this.$geolocation.getTracking()) {\n          this.$geolocation.setTracking(tracking)\n        }\n      },\n      /**\n       * @return {Object|undefined}\n       */\n      getTrackingOptions () {\n        return coalesce(this.$geolocation?.getTrackingOptions(), this.currentTrackingOptions)\n      },\n      /**\n       * @param {Promise<Object|undefined>} options\n       */\n      setTrackingOptions (options) {\n        if (!isEqual(options, this.currentTrackingOptions)) {\n          this.currentTrackingOptions = options\n        }\n        if (this.$geolocation && !isEqual(options, this.$geolocation.getTrackingOptions())) {\n          this.$geolocation.setTrackingOptions(options)\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $geolocation: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n    })\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToGeolocation () {\n    const setterKey = addPrefix('set')\n    const setPropsChanges = mergeObs(\n      obsFromOlChangeEvent(this.$geolocation, 'projection', true, evt => ({\n        ...evt,\n        value: getProj(evt.value).getCode(),\n      })),\n      obsFromOlChangeEvent(this.$geolocation, [\n        'tracking',\n        'trackingOptions',\n      ], true),\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: val => {\n          this[setterKey(evt.prop)](val)\n          this.scheduleRefresh()\n        },\n      })),\n    )\n    this.subscribeTo(setPropsChanges, ({ setter, value }) => setter(value))\n\n    const otherChanged = obsFromOlChangeEvent(this.$geolocation, [\n      'accuracy',\n      'accuracyGeometry',\n      'altitude',\n      'altitudeAccuracy',\n      'heading',\n      'speed',\n      'position',\n    ], true)\n    this.subscribeTo(otherChanged, ::this.scheduleRefresh)\n  }\n</script>\n","import { pick } from '../../utils'\nimport Geoloc from './geoloc.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Geoloc, options)\n\n  Vue.component(Geoloc.name, Geoloc)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Geoloc,\n}\n","\nimport { Fill as FillStyle } from 'ol/style'\nimport { style } from '../../mixins'\nimport { normalizeColor } from '../../ol-ext'\nimport { coalesce, isEqual } from '../../utils'\n\nexport default {\n  name: 'VlStyleFill',\n  mixins: [\n    style,\n  ],\n  props: {\n    color: {\n      type: [String, Array],\n      default: () => [255, 255, 255, 0.4],\n    },\n  },\n  data () {\n    return {\n      currentColor: normalizeColor(this.color),\n    }\n  },\n  computed: {\n    inputColor () {\n      return normalizeColor(this.color)\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$style) return\n\n      this.setColor(this.getColor())\n    },\n    inputColor: {\n      deep: true,\n      handler (value) {\n        this.setColor(value)\n      },\n    },\n    currentColor: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.inputColor)) return\n\n        this.$emit('update:color', value?.slice())\n      },\n    },\n  },\n  created () {\n    this::defineServices()\n  },\n  methods: {\n    /**\n     * @return {FillStyle}\n     * @protected\n     */\n    createStyle () {\n      return new FillStyle({\n        color: this.currentColor,\n      })\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.$fillStyleContainer?.setFill(this)\n\n      return this::style.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async unmount () {\n      if (this.$fillStyleContainer?.getFillVm() === this) {\n        this.$fillStyleContainer.setFill(null)\n      }\n\n      return this::style.methods.unmount()\n    },\n    /**\n     * @return {Promise<void>}\n     */\n    async refresh () {\n      await Promise.all([\n        this::style.methods.refresh(),\n        this.$fillStyleContainer?.refresh(),\n      ])\n    },\n    /**\n     * @protected\n     */\n    syncNonObservable () {\n      this::style.methods.syncNonObservable()\n\n      this.setColor(this.getColor())\n    },\n    getColor () {\n      return normalizeColor(coalesce(this.$style?.getColor(), this.currentColor))\n    },\n    setColor (color) {\n      color = normalizeColor(color)\n\n      if (!isEqual(color, this.currentColor)) {\n        this.currentColor = color\n        this.scheduleRefresh()\n      }\n      if (this.$style && !isEqual(color, this.$style.getColor())) {\n        this.$style.setColor(color)\n        this.scheduleRefresh()\n      }\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $fillStyleContainer: {\n      enumerable: true,\n      get: () => this.$services?.fillStyleContainer,\n    },\n  })\n}\n","<script>\n  import { Fill as FillStyle } from 'ol/style'\n  import { style } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { coalesce, isEqual } from '../../utils'\n\n  export default {\n    name: 'VlStyleFill',\n    mixins: [\n      style,\n    ],\n    props: {\n      color: {\n        type: [String, Array],\n        default: () => [255, 255, 255, 0.4],\n      },\n    },\n    data () {\n      return {\n        currentColor: normalizeColor(this.color),\n      }\n    },\n    computed: {\n      inputColor () {\n        return normalizeColor(this.color)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setColor(this.getColor())\n      },\n      inputColor: {\n        deep: true,\n        handler (value) {\n          this.setColor(value)\n        },\n      },\n      currentColor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputColor)) return\n\n          this.$emit('update:color', value?.slice())\n        },\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {FillStyle}\n       * @protected\n       */\n      createStyle () {\n        return new FillStyle({\n          color: this.currentColor,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$fillStyleContainer?.setFill(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$fillStyleContainer?.getFillVm() === this) {\n          this.$fillStyleContainer.setFill(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$fillStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setColor(this.getColor())\n      },\n      getColor () {\n        return normalizeColor(coalesce(this.$style?.getColor(), this.currentColor))\n      },\n      setColor (color) {\n        color = normalizeColor(color)\n\n        if (!isEqual(color, this.currentColor)) {\n          this.currentColor = color\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(color, this.$style.getColor())) {\n          this.$style.setColor(color)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $fillStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.fillStyleContainer,\n      },\n    })\n  }\n</script>\n","\nimport { Stroke as StrokeStyle } from 'ol/style'\nimport { style } from '../../mixins'\nimport { normalizeColor } from '../../ol-ext'\nimport { clonePlainObject, coalesce, isEqual, isObjectLike, lowerFirst, makeWatchers, upperFirst } from '../../utils'\n\nexport default {\n  name: 'VlStyleStroke',\n  mixins: [\n    style,\n  ],\n  props: {\n    color: {\n      type: [Array, String],\n      default: '#3399cc',\n    },\n    lineCap: {\n      type: String,\n      default: 'round', // round, butt, square\n    },\n    lineJoin: {\n      type: String,\n      default: 'round', // round, bevel, miter\n    },\n    lineDash: Array,\n    lineDashOffset: {\n      type: Number,\n      default: 0,\n    },\n    miterLimit: {\n      type: Number,\n      default: 10,\n    },\n    width: {\n      type: Number,\n      default: 1.25,\n    },\n  },\n  data () {\n    return {\n      currentColor: normalizeColor(this.color),\n      currentLineCap: this.lineCap,\n      currentLineJoin: this.lineJoin,\n      currentLineDash: this.lineDash?.slice(),\n      currentLineDashOffset: this.lineDashOffset,\n      currentMiterLimit: this.miterLimit,\n      currentWidth: this.width,\n    }\n  },\n  computed: {\n    inputColor () {\n      return normalizeColor(this.color)\n    },\n    inputLineDash () {\n      return this.lineDash?.slice()\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$style) return\n\n      this.setColor(this.getColor())\n      this.setLineCap(this.getLineCap())\n      this.setLineJoin(this.getLineJoin())\n      this.setLineDash(this.getLineDash())\n      this.setLineDashOffset(this.getLineDashOffset())\n      this.setMiterLimit(this.getMiterLimit())\n      this.setWidth(this.getWidth())\n    },\n    .../*#__PURE__*/makeWatchers([\n      'inputColor',\n      'lineCap',\n      'lineJoin',\n      'inputLineDash',\n      'lineDashOffset',\n      'miterLimit',\n      'width',\n    ], inProp => {\n      const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n      const setter = 'set' + upperFirst(prop)\n\n      return {\n        deep: [\n          'inputColor',\n          'inputLineDash',\n        ].includes(inProp),\n        handler (value) {\n          this[setter](value)\n        },\n      }\n    }),\n    .../*#__PURE__*/makeWatchers([\n      'currentColor',\n      'currentLineCap',\n      'currentLineJoin',\n      'currentLineDash',\n      'currentLineDashOffset',\n      'currentMiterLimit',\n      'currentWidth',\n    ], curProp => {\n      const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n      const inProp = 'input' + upperFirst(prop)\n\n      return {\n        deep: [\n          'currentColor',\n          'currentLineDash',\n        ].includes(curProp),\n        handler (value) {\n          if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        },\n      }\n    }),\n    inputColor: {\n      deep: true,\n      handler (value) {\n        this.setColor(value)\n      },\n    },\n    currentColor: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.inputColor)) return\n\n        this.$emit('update:color', value?.slice())\n      },\n    },\n    lineCap (value) {\n      this.setLineCap(value)\n    },\n    currentLineCap (value) {\n      if (value === this.lineCap) return\n\n      this.$emit('update:lineCap', value)\n    },\n    lineJoin (value) {\n      this.setLineJoin(value)\n    },\n    currentLineJoin (value) {\n      if (value === this.lineJoin) return\n\n      this.$emit('update:lineJoin', value)\n    },\n    inputLineDash: {\n      deep: true,\n      handler (value) {\n        this.setLineDash(value)\n      },\n    },\n    currentLineDash: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.currentLineDash)) return\n\n        this.$emit('update:lineDash', value?.slice())\n      },\n    },\n    lineDashOffset (value) {\n      this.setLineDashOffset(value)\n    },\n    currentLineDashOffset (value) {\n      if (value === this.lineDashOffset) return\n\n      this.$emit('update:lineDashOffset', value)\n    },\n    miterLimit (value) {\n      this.setMiterLimit(value)\n    },\n    currentMiterLimit (value) {\n      if (value === this.miterLimit) return\n\n      this.$emit('update:miterLimit', value)\n    },\n    width (value) {\n      this.setWidth(value)\n    },\n    currentWidth (value) {\n      if (value === this.width) return\n\n      this.$emit('update:width', value)\n    },\n  },\n  created () {\n    this::defineServices()\n  },\n  methods: {\n    /**\n     * @return {StrokeStyle}\n     * @protected\n     */\n    createStyle () {\n      return new StrokeStyle({\n        color: this.currentColor,\n        lineCap: this.currentLineCap,\n        lineJoin: this.currentLineJoin,\n        lineDash: this.currentLineDash,\n        lineDashOffset: this.currentLineDashOffset,\n        miterLimit: this.currentMiterLimit,\n        width: this.currentWidth,\n      })\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.$strokeStyleContainer?.setStroke(this)\n\n      return this::style.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async unmount () {\n      if (this.$strokeStyleContainer?.getStrokeVm() === this) {\n        this.$strokeStyleContainer.setStroke(null)\n      }\n\n      return this::style.methods.unmount()\n    },\n    /**\n     * @return {Promise}\n     */\n    async refresh () {\n      await Promise.all([\n        this::style.methods.refresh(),\n        this.$strokeStyleContainer?.refresh(),\n      ])\n    },\n    /**\n     * @protected\n     */\n    syncNonObservable () {\n      this::style.methods.syncNonObservable()\n\n      this.setColor(this.getColor())\n      this.setLineCap(this.getLineCap())\n      this.setLineJoin(this.getLineJoin())\n      this.setLineDash(this.getLineDash())\n      this.setLineDashOffset(this.getLineDashOffset())\n      this.setMiterLimit(this.getMiterLimit())\n      this.setWidth(this.getWidth())\n    },\n    getColor () {\n      return coalesce(this.$style?.getColor(), this.currentColor)\n    },\n    setColor (color) {\n      color = normalizeColor(color)\n\n      if (!isEqual(color, this.currentColor)) {\n        this.currentColor = color\n        this.scheduleRefresh()\n      }\n      if (this.$style && !isEqual(color, this.$style.getColor())) {\n        this.$style.setColor(color)\n        this.scheduleRefresh()\n      }\n    },\n    getLineCap () {\n      return coalesce(this.$style?.getLineCap(), this.currentLineCap)\n    },\n    setLineCap (lineCap) {\n      if (lineCap !== this.currentLineCap) {\n        this.currentLineCap = lineCap\n        this.scheduleRefresh()\n      }\n      if (this.$style && lineCap !== this.$style.getLineCap()) {\n        this.$style.setLineCap(lineCap)\n        this.scheduleRefresh()\n      }\n    },\n    getLineJoin () {\n      return coalesce(this.$style?.getLineJoin(), this.currentLineJoin)\n    },\n    setLineJoin (lineJoin) {\n      if (lineJoin !== this.currentLineJoin) {\n        this.currentLineJoin = lineJoin\n      }\n      if (this.$style && lineJoin !== this.$style.getLineJoin()) {\n        this.$style.setLineJoin(lineJoin)\n        this.scheduleRefresh()\n      }\n    },\n    getLineDash () {\n      return coalesce(this.$style?.getLineDash(), this.currentLineDash)\n    },\n    setLineDash (lineDash) {\n      lineDash = lineDash?.slice()\n\n      if (!isEqual(lineDash, this.currentLineDash)) {\n        this.currentLineDash = lineDash\n        this.scheduleRefresh()\n      }\n      if (this.$style && !isEqual(lineDash, this.$style.getLineDash())) {\n        this.$style.setLineDash(lineDash)\n        this.scheduleRefresh()\n      }\n    },\n    getLineDashOffset () {\n      return coalesce(this.$style?.getLineDashOffset(), this.currentLineDashOffset)\n    },\n    setLineDashOffset (lineDashOffset) {\n      if (lineDashOffset !== this.currentLineDashOffset) {\n        this.currentLineDashOffset = lineDashOffset\n        this.scheduleRefresh()\n      }\n      if (this.$style && lineDashOffset !== this.$style.getLineDashOffset()) {\n        this.$style.setLineDashOffset(lineDashOffset)\n        this.scheduleRefresh()\n      }\n    },\n    getMiterLimit () {\n      return coalesce(this.$style?.getMiterLimit(), this.currentMiterLimit)\n    },\n    setMiterLimit (miterLimit) {\n      if (miterLimit !== this.currentMiterLimit) {\n        this.currentMiterLimit = miterLimit\n        this.scheduleRefresh()\n      }\n      if (this.$style && miterLimit !== this.$style.getMiterLimit()) {\n        this.$style.setMiterLimit(miterLimit)\n        this.scheduleRefresh()\n      }\n    },\n    getWidth () {\n      return coalesce(this.$style?.getWidth(), this.currentWidth)\n    },\n    setWidth (width) {\n      if (width !== this.currentWidth) {\n        this.currentWidth = width\n        this.scheduleRefresh()\n      }\n      if (this.$style && width !== this.$style.getWidth()) {\n        this.$style.setWidth(width)\n        this.scheduleRefresh()\n      }\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $strokeStyleContainer: {\n      enumerable: true,\n      get: () => this.$services?.strokeStyleContainer,\n    },\n  })\n}\n","<script>\n  import { Stroke as StrokeStyle } from 'ol/style'\n  import { style } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { clonePlainObject, coalesce, isEqual, isObjectLike, lowerFirst, makeWatchers, upperFirst } from '../../utils'\n\n  export default {\n    name: 'VlStyleStroke',\n    mixins: [\n      style,\n    ],\n    props: {\n      color: {\n        type: [Array, String],\n        default: '#3399cc',\n      },\n      lineCap: {\n        type: String,\n        default: 'round', // round, butt, square\n      },\n      lineJoin: {\n        type: String,\n        default: 'round', // round, bevel, miter\n      },\n      lineDash: Array,\n      lineDashOffset: {\n        type: Number,\n        default: 0,\n      },\n      miterLimit: {\n        type: Number,\n        default: 10,\n      },\n      width: {\n        type: Number,\n        default: 1.25,\n      },\n    },\n    data () {\n      return {\n        currentColor: normalizeColor(this.color),\n        currentLineCap: this.lineCap,\n        currentLineJoin: this.lineJoin,\n        currentLineDash: this.lineDash?.slice(),\n        currentLineDashOffset: this.lineDashOffset,\n        currentMiterLimit: this.miterLimit,\n        currentWidth: this.width,\n      }\n    },\n    computed: {\n      inputColor () {\n        return normalizeColor(this.color)\n      },\n      inputLineDash () {\n        return this.lineDash?.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setColor(this.getColor())\n        this.setLineCap(this.getLineCap())\n        this.setLineJoin(this.getLineJoin())\n        this.setLineDash(this.getLineDash())\n        this.setLineDashOffset(this.getLineDashOffset())\n        this.setMiterLimit(this.getMiterLimit())\n        this.setWidth(this.getWidth())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'inputColor',\n        'lineCap',\n        'lineJoin',\n        'inputLineDash',\n        'lineDashOffset',\n        'miterLimit',\n        'width',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return {\n          deep: [\n            'inputColor',\n            'inputLineDash',\n          ].includes(inProp),\n          handler (value) {\n            this[setter](value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentColor',\n        'currentLineCap',\n        'currentLineJoin',\n        'currentLineDash',\n        'currentLineDashOffset',\n        'currentMiterLimit',\n        'currentWidth',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return {\n          deep: [\n            'currentColor',\n            'currentLineDash',\n          ].includes(curProp),\n          handler (value) {\n            if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n      inputColor: {\n        deep: true,\n        handler (value) {\n          this.setColor(value)\n        },\n      },\n      currentColor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputColor)) return\n\n          this.$emit('update:color', value?.slice())\n        },\n      },\n      lineCap (value) {\n        this.setLineCap(value)\n      },\n      currentLineCap (value) {\n        if (value === this.lineCap) return\n\n        this.$emit('update:lineCap', value)\n      },\n      lineJoin (value) {\n        this.setLineJoin(value)\n      },\n      currentLineJoin (value) {\n        if (value === this.lineJoin) return\n\n        this.$emit('update:lineJoin', value)\n      },\n      inputLineDash: {\n        deep: true,\n        handler (value) {\n          this.setLineDash(value)\n        },\n      },\n      currentLineDash: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.currentLineDash)) return\n\n          this.$emit('update:lineDash', value?.slice())\n        },\n      },\n      lineDashOffset (value) {\n        this.setLineDashOffset(value)\n      },\n      currentLineDashOffset (value) {\n        if (value === this.lineDashOffset) return\n\n        this.$emit('update:lineDashOffset', value)\n      },\n      miterLimit (value) {\n        this.setMiterLimit(value)\n      },\n      currentMiterLimit (value) {\n        if (value === this.miterLimit) return\n\n        this.$emit('update:miterLimit', value)\n      },\n      width (value) {\n        this.setWidth(value)\n      },\n      currentWidth (value) {\n        if (value === this.width) return\n\n        this.$emit('update:width', value)\n      },\n    },\n    created () {\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @return {StrokeStyle}\n       * @protected\n       */\n      createStyle () {\n        return new StrokeStyle({\n          color: this.currentColor,\n          lineCap: this.currentLineCap,\n          lineJoin: this.currentLineJoin,\n          lineDash: this.currentLineDash,\n          lineDashOffset: this.currentLineDashOffset,\n          miterLimit: this.currentMiterLimit,\n          width: this.currentWidth,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$strokeStyleContainer?.setStroke(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$strokeStyleContainer?.getStrokeVm() === this) {\n          this.$strokeStyleContainer.setStroke(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$strokeStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setColor(this.getColor())\n        this.setLineCap(this.getLineCap())\n        this.setLineJoin(this.getLineJoin())\n        this.setLineDash(this.getLineDash())\n        this.setLineDashOffset(this.getLineDashOffset())\n        this.setMiterLimit(this.getMiterLimit())\n        this.setWidth(this.getWidth())\n      },\n      getColor () {\n        return coalesce(this.$style?.getColor(), this.currentColor)\n      },\n      setColor (color) {\n        color = normalizeColor(color)\n\n        if (!isEqual(color, this.currentColor)) {\n          this.currentColor = color\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(color, this.$style.getColor())) {\n          this.$style.setColor(color)\n          this.scheduleRefresh()\n        }\n      },\n      getLineCap () {\n        return coalesce(this.$style?.getLineCap(), this.currentLineCap)\n      },\n      setLineCap (lineCap) {\n        if (lineCap !== this.currentLineCap) {\n          this.currentLineCap = lineCap\n          this.scheduleRefresh()\n        }\n        if (this.$style && lineCap !== this.$style.getLineCap()) {\n          this.$style.setLineCap(lineCap)\n          this.scheduleRefresh()\n        }\n      },\n      getLineJoin () {\n        return coalesce(this.$style?.getLineJoin(), this.currentLineJoin)\n      },\n      setLineJoin (lineJoin) {\n        if (lineJoin !== this.currentLineJoin) {\n          this.currentLineJoin = lineJoin\n        }\n        if (this.$style && lineJoin !== this.$style.getLineJoin()) {\n          this.$style.setLineJoin(lineJoin)\n          this.scheduleRefresh()\n        }\n      },\n      getLineDash () {\n        return coalesce(this.$style?.getLineDash(), this.currentLineDash)\n      },\n      setLineDash (lineDash) {\n        lineDash = lineDash?.slice()\n\n        if (!isEqual(lineDash, this.currentLineDash)) {\n          this.currentLineDash = lineDash\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(lineDash, this.$style.getLineDash())) {\n          this.$style.setLineDash(lineDash)\n          this.scheduleRefresh()\n        }\n      },\n      getLineDashOffset () {\n        return coalesce(this.$style?.getLineDashOffset(), this.currentLineDashOffset)\n      },\n      setLineDashOffset (lineDashOffset) {\n        if (lineDashOffset !== this.currentLineDashOffset) {\n          this.currentLineDashOffset = lineDashOffset\n          this.scheduleRefresh()\n        }\n        if (this.$style && lineDashOffset !== this.$style.getLineDashOffset()) {\n          this.$style.setLineDashOffset(lineDashOffset)\n          this.scheduleRefresh()\n        }\n      },\n      getMiterLimit () {\n        return coalesce(this.$style?.getMiterLimit(), this.currentMiterLimit)\n      },\n      setMiterLimit (miterLimit) {\n        if (miterLimit !== this.currentMiterLimit) {\n          this.currentMiterLimit = miterLimit\n          this.scheduleRefresh()\n        }\n        if (this.$style && miterLimit !== this.$style.getMiterLimit()) {\n          this.$style.setMiterLimit(miterLimit)\n          this.scheduleRefresh()\n        }\n      },\n      getWidth () {\n        return coalesce(this.$style?.getWidth(), this.currentWidth)\n      },\n      setWidth (width) {\n        if (width !== this.currentWidth) {\n          this.currentWidth = width\n          this.scheduleRefresh()\n        }\n        if (this.$style && width !== this.$style.getWidth()) {\n          this.$style.setWidth(width)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $strokeStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.strokeStyleContainer,\n      },\n    })\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Circle as CircleStyle } from 'ol/style'\nimport { regShapeStyle } from '../../mixins'\nimport { coalesce, noop } from '../../utils'\nimport FillStyle from './fill.vue'\nimport StrokeStyle from './stroke.vue'\n\nexport default {\n  name: 'VlStyleCircle',\n  components: {\n    FillStyle,\n    StrokeStyle,\n  },\n  mixins: [\n    regShapeStyle,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    radius: {\n      ...regShapeStyle.props.radius,\n      default: 5,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  data () {\n    return {\n      currentRadius: this.radius,\n    }\n  },\n  watch: {\n    rev () {\n      if (!this.$style) return\n\n      this.setRadius(this.getRadius())\n    },\n    currentRadius (value) {\n      if (value === this.radius) return\n\n      this.$emit('update:radius', value)\n    },\n  },\n  methods: {\n    /**\n     * @return {CircleStyle}\n     * @protected\n     */\n    createStyle () {\n      return new CircleStyle({\n        // ol/style/Image\n        displacement: this.inputDisplacement,\n        // ol/style/RegularShape\n        radius: this.currentRadius,\n        fill: this.$fill,\n        stroke: this.$stroke,\n      })\n    },\n    /**\n     * @protected\n     */\n    syncNonObservable () {\n      this::regShapeStyle.methods.syncNonObservable()\n\n      this.setRadius(this.getRadius())\n    },\n    getRadius () {\n      return coalesce(this.$style?.getRadius(), this.currentRadius)\n    },\n    setRadius (radius) {\n      if (radius !== this.currentRadius) {\n        this.currentRadius = radius\n        this.scheduleRefresh()\n      }\n      if (this.$style && radius !== this.$style.getRadius()) {\n        this.$style.setRadius(radius)\n        this.scheduleRefresh()\n      }\n    },\n    /**\n     * @param {number} value\n     * @protected\n     */\n    radiusChanged (value) {\n      this.setRadius(value)\n    },\n    pointsChanged: noop,\n    radius1Changed: noop,\n    radius2Changed: noop,\n    angleChanged: noop,\n  },\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot>\n      <FillStyle :id=\"'vl-' + currentId + '-default-fill-style'\" />\n      <StrokeStyle :id=\"'vl-' + currentId + '-default-stroke-style'\" />\n    </slot>\n  </i>\n</template>\n\n<script>\n  import { Circle as CircleStyle } from 'ol/style'\n  import { regShapeStyle } from '../../mixins'\n  import { coalesce, noop } from '../../utils'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  export default {\n    name: 'VlStyleCircle',\n    components: {\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      regShapeStyle,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      radius: {\n        ...regShapeStyle.props.radius,\n        default: 5,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    data () {\n      return {\n        currentRadius: this.radius,\n      }\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setRadius(this.getRadius())\n      },\n      currentRadius (value) {\n        if (value === this.radius) return\n\n        this.$emit('update:radius', value)\n      },\n    },\n    methods: {\n      /**\n       * @return {CircleStyle}\n       * @protected\n       */\n      createStyle () {\n        return new CircleStyle({\n          // ol/style/Image\n          displacement: this.inputDisplacement,\n          // ol/style/RegularShape\n          radius: this.currentRadius,\n          fill: this.$fill,\n          stroke: this.$stroke,\n        })\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::regShapeStyle.methods.syncNonObservable()\n\n        this.setRadius(this.getRadius())\n      },\n      getRadius () {\n        return coalesce(this.$style?.getRadius(), this.currentRadius)\n      },\n      setRadius (radius) {\n        if (radius !== this.currentRadius) {\n          this.currentRadius = radius\n          this.scheduleRefresh()\n        }\n        if (this.$style && radius !== this.$style.getRadius()) {\n          this.$style.setRadius(radius)\n          this.scheduleRefresh()\n        }\n      },\n      /**\n       * @param {number} value\n       * @protected\n       */\n      radiusChanged (value) {\n        this.setRadius(value)\n      },\n      pointsChanged: noop,\n      radius1Changed: noop,\n      radius2Changed: noop,\n      angleChanged: noop,\n    },\n  }\n</script>\n","\nimport { Icon as IconStyle } from 'ol/style'\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits'\nimport IconOrigin from 'ol/style/IconOrigin'\nimport { imageStyle, makeChangeOrRecreateWatchers } from '../../mixins'\nimport { normalizeColor } from '../../ol-ext'\nimport { assert, coalesce, isEmpty, isEqual, round } from '../../utils'\n\nexport default {\n  name: 'VlStyleIcon',\n  mixins: [\n    imageStyle,\n  ],\n  props: {\n    src: String,\n    size: {\n      type: Array,\n      validator: val => val.length === 2,\n    },\n    img: Image,\n    imgSize: {\n      type: Array,\n      validator: val => val.length === 2,\n    },\n    anchor: {\n      type: Array,\n      default: () => [0.5, 0.5],\n      validator: val => val.length === 2,\n    },\n    anchorOrigin: {\n      type: String,\n      default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n    },\n    anchorXUnits: {\n      type: String,\n      default: IconAnchorUnits.FRACTION, // pixels, fraction\n    },\n    anchorYUnits: {\n      type: String,\n      default: IconAnchorUnits.FRACTION, // pixels, fraction\n    },\n    color: [Array, String],\n    crossOrigin: String,\n    offset: {\n      type: Array,\n      default: () => [0, 0],\n      validator: val => val.length === 2,\n    },\n    offsetOrigin: {\n      type: String,\n      default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n    },\n  },\n  data () {\n    return {\n      currentAnchor: this.anchor?.slice(),\n    }\n  },\n  computed: {\n    inputSize () {\n      return this.size?.slice()\n    },\n    inputImgSize () {\n      return this.imgSize?.slice()\n    },\n    inputAnchor () {\n      return this.anchor?.slice()\n    },\n    inputColor () {\n      return this.color ? normalizeColor(this.color) : undefined\n    },\n    inputOffset () {\n      return this.offset?.slice()\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$style) return\n\n      this.setAnchor(this.getAnchor())\n    },\n    inputAnchor: {\n      deep: true,\n      handler (value) {\n        this.setAnchor(value)\n      },\n    },\n    currentAnchor: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.inputAnchor)) return\n\n        this.$emit('update:anchor', value?.slice())\n      },\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'src',\n      'inputSize',\n      'img',\n      'inputImgSize',\n      'anchorOrigin',\n      'anchorXUnits',\n      'anchorYUnits',\n      'anchorYUnits',\n      'inputColor',\n      'crossOrigin',\n      'inputOffset',\n      'offsetOrigin',\n    ], [\n      'inputSize',\n      'inputImgSize',\n      'inputColor',\n      'inputOffset',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {Icon}\n     * @protected\n     */\n    createStyle () {\n      assert(\n        (this.src && !this.img) || (!this.src && this.img),\n        \"vl-style-icon one of 'image' or 'src' prop must be provided.'\",\n      )\n      assert(\n        !this.img || (this.img && !isEmpty(this.imgSize)),\n        \"vl-style-icon 'imgSize' must be set when image is provided.\",\n      )\n\n      return new IconStyle({\n        // ol/style/Image\n        opacity: this.currentOpacity,\n        scale: this.currentScale,\n        rotateWithView: this.currentRotateWithView,\n        rotation: this.currentRotation,\n        displacement: this.inputDisplacement,\n        // ol/style/Icon\n        anchor: this.currentAnchor,\n        anchorOrigin: this.anchorOrigin,\n        anchorXUnits: this.anchorXUnits,\n        anchorYUnits: this.anchorYUnits,\n        color: this.inputColor,\n        crossOrigin: this.crossOrigin,\n        offset: this.inputOffset,\n        offsetOrigin: this.offsetOrigin,\n        size: this.inputSize,\n        src: this.src,\n        img: this.img,\n        imgSize: this.inputImgSize,\n      })\n    },\n    /**\n     * @protected\n     */\n    syncNonObservable () {\n      this::imageStyle.methods.syncNonObservable()\n\n      this.setAnchor(this.getAnchor())\n    },\n    getAnchor () {\n      const anchor = this.$style?.getAnchor()?.slice()\n      if (!anchor) return this.currentAnchor\n\n      const size = this.getSize()\n      if (!size) return\n\n      if (this.anchorXUnits === IconAnchorUnits.FRACTION) {\n        anchor[0] /= size[0]\n      }\n      if (this.anchorYUnits === IconAnchorUnits.FRACTION) {\n        anchor[1] /= size[1]\n      }\n      if ([IconOrigin.TOP_RIGHT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n        anchor[0] = 1 - anchor[0]\n      }\n      if ([IconOrigin.BOTTOM_LEFT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n        anchor[1] = 1 - anchor[1]\n      }\n      anchor[0] = round(anchor[0], 3)\n      anchor[1] = round(anchor[1], 3)\n\n      return anchor\n    },\n    setAnchor (anchor) {\n      anchor = anchor?.slice()\n\n      if (!isEqual(anchor, this.currentAnchor)) {\n        this.currentAnchor = anchor\n        this.scheduleRefresh()\n      }\n      if (this.$style && !isEqual(anchor, this.$style.getAnchor())) {\n        this.$style.setAnchor(anchor)\n        this.scheduleRefresh()\n      }\n    },\n    getColor () {\n      return coalesce(this.$style?.getColor(), this.inputColor)\n    },\n    getImage (pixelRatio) {\n      return this.$style?.getImage(pixelRatio)\n    },\n    getPixelRatio (pixelRatio) {\n      return this.$style?.getPixelRatio(pixelRatio)\n    },\n    getOrigin () {\n      return this.$style?.getOrigin()\n    },\n    getSize () {\n      return coalesce(this.$style?.getSize(), this.inputSize)\n    },\n    getSrc () {\n      return coalesce(this.$style?.getSrc(), this.src)\n    },\n    async load () {\n      (await this.resolveStyle()).load()\n    },\n  },\n}\n","<script>\n  import { Icon as IconStyle } from 'ol/style'\n  import IconAnchorUnits from 'ol/style/IconAnchorUnits'\n  import IconOrigin from 'ol/style/IconOrigin'\n  import { imageStyle, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { normalizeColor } from '../../ol-ext'\n  import { assert, coalesce, isEmpty, isEqual, round } from '../../utils'\n\n  export default {\n    name: 'VlStyleIcon',\n    mixins: [\n      imageStyle,\n    ],\n    props: {\n      src: String,\n      size: {\n        type: Array,\n        validator: val => val.length === 2,\n      },\n      img: Image,\n      imgSize: {\n        type: Array,\n        validator: val => val.length === 2,\n      },\n      anchor: {\n        type: Array,\n        default: () => [0.5, 0.5],\n        validator: val => val.length === 2,\n      },\n      anchorOrigin: {\n        type: String,\n        default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n      },\n      anchorXUnits: {\n        type: String,\n        default: IconAnchorUnits.FRACTION, // pixels, fraction\n      },\n      anchorYUnits: {\n        type: String,\n        default: IconAnchorUnits.FRACTION, // pixels, fraction\n      },\n      color: [Array, String],\n      crossOrigin: String,\n      offset: {\n        type: Array,\n        default: () => [0, 0],\n        validator: val => val.length === 2,\n      },\n      offsetOrigin: {\n        type: String,\n        default: IconOrigin.TOP_LEFT, // bottom-left, bottom-right, top-left or top-right\n      },\n    },\n    data () {\n      return {\n        currentAnchor: this.anchor?.slice(),\n      }\n    },\n    computed: {\n      inputSize () {\n        return this.size?.slice()\n      },\n      inputImgSize () {\n        return this.imgSize?.slice()\n      },\n      inputAnchor () {\n        return this.anchor?.slice()\n      },\n      inputColor () {\n        return this.color ? normalizeColor(this.color) : undefined\n      },\n      inputOffset () {\n        return this.offset?.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setAnchor(this.getAnchor())\n      },\n      inputAnchor: {\n        deep: true,\n        handler (value) {\n          this.setAnchor(value)\n        },\n      },\n      currentAnchor: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputAnchor)) return\n\n          this.$emit('update:anchor', value?.slice())\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'src',\n        'inputSize',\n        'img',\n        'inputImgSize',\n        'anchorOrigin',\n        'anchorXUnits',\n        'anchorYUnits',\n        'anchorYUnits',\n        'inputColor',\n        'crossOrigin',\n        'inputOffset',\n        'offsetOrigin',\n      ], [\n        'inputSize',\n        'inputImgSize',\n        'inputColor',\n        'inputOffset',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Icon}\n       * @protected\n       */\n      createStyle () {\n        assert(\n          (this.src && !this.img) || (!this.src && this.img),\n          \"vl-style-icon one of 'image' or 'src' prop must be provided.'\",\n        )\n        assert(\n          !this.img || (this.img && !isEmpty(this.imgSize)),\n          \"vl-style-icon 'imgSize' must be set when image is provided.\",\n        )\n\n        return new IconStyle({\n          // ol/style/Image\n          opacity: this.currentOpacity,\n          scale: this.currentScale,\n          rotateWithView: this.currentRotateWithView,\n          rotation: this.currentRotation,\n          displacement: this.inputDisplacement,\n          // ol/style/Icon\n          anchor: this.currentAnchor,\n          anchorOrigin: this.anchorOrigin,\n          anchorXUnits: this.anchorXUnits,\n          anchorYUnits: this.anchorYUnits,\n          color: this.inputColor,\n          crossOrigin: this.crossOrigin,\n          offset: this.inputOffset,\n          offsetOrigin: this.offsetOrigin,\n          size: this.inputSize,\n          src: this.src,\n          img: this.img,\n          imgSize: this.inputImgSize,\n        })\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::imageStyle.methods.syncNonObservable()\n\n        this.setAnchor(this.getAnchor())\n      },\n      getAnchor () {\n        const anchor = this.$style?.getAnchor()?.slice()\n        if (!anchor) return this.currentAnchor\n\n        const size = this.getSize()\n        if (!size) return\n\n        if (this.anchorXUnits === IconAnchorUnits.FRACTION) {\n          anchor[0] /= size[0]\n        }\n        if (this.anchorYUnits === IconAnchorUnits.FRACTION) {\n          anchor[1] /= size[1]\n        }\n        if ([IconOrigin.TOP_RIGHT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n          anchor[0] = 1 - anchor[0]\n        }\n        if ([IconOrigin.BOTTOM_LEFT, IconOrigin.BOTTOM_RIGHT].includes(this.anchorOrigin)) {\n          anchor[1] = 1 - anchor[1]\n        }\n        anchor[0] = round(anchor[0], 3)\n        anchor[1] = round(anchor[1], 3)\n\n        return anchor\n      },\n      setAnchor (anchor) {\n        anchor = anchor?.slice()\n\n        if (!isEqual(anchor, this.currentAnchor)) {\n          this.currentAnchor = anchor\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(anchor, this.$style.getAnchor())) {\n          this.$style.setAnchor(anchor)\n          this.scheduleRefresh()\n        }\n      },\n      getColor () {\n        return coalesce(this.$style?.getColor(), this.inputColor)\n      },\n      getImage (pixelRatio) {\n        return this.$style?.getImage(pixelRatio)\n      },\n      getPixelRatio (pixelRatio) {\n        return this.$style?.getPixelRatio(pixelRatio)\n      },\n      getOrigin () {\n        return this.$style?.getOrigin()\n      },\n      getSize () {\n        return coalesce(this.$style?.getSize(), this.inputSize)\n      },\n      getSrc () {\n        return coalesce(this.$style?.getSrc(), this.src)\n      },\n      async load () {\n        (await this.resolveStyle()).load()\n      },\n    },\n  }\n</script>\n","\nimport { RegularShape as RegularShapeStyle } from 'ol/style'\nimport { regShapeStyle } from '../../mixins'\n\nexport default {\n  name: 'VlStyleRegShape',\n  mixins: [\n    regShapeStyle,\n  ],\n  methods: {\n    /**\n     * @return {RegularShapeStyle}\n     * @protected\n     */\n    createStyle () {\n      return new RegularShapeStyle({\n        // ol/style/Image\n        rotation: this.currentRotation,\n        rotateWithView: this.currentRotateWithView,\n        displacement: this.inputDisplacement,\n        // ol/style/RegularShape\n        points: this.points,\n        radius: this.radius,\n        radius1: this.radius1,\n        radius2: this.radius2,\n        angle: this.angle,\n        fill: this.$fill,\n        stroke: this.$stroke,\n      })\n    },\n  },\n}\n","<script>\n  import { RegularShape as RegularShapeStyle } from 'ol/style'\n  import { regShapeStyle } from '../../mixins'\n\n  export default {\n    name: 'VlStyleRegShape',\n    mixins: [\n      regShapeStyle,\n    ],\n    methods: {\n      /**\n       * @return {RegularShapeStyle}\n       * @protected\n       */\n      createStyle () {\n        return new RegularShapeStyle({\n          // ol/style/Image\n          rotation: this.currentRotation,\n          rotateWithView: this.currentRotateWithView,\n          displacement: this.inputDisplacement,\n          // ol/style/RegularShape\n          points: this.points,\n          radius: this.radius,\n          radius1: this.radius1,\n          radius2: this.radius2,\n          angle: this.angle,\n          fill: this.$fill,\n          stroke: this.$stroke,\n        })\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Style } from 'ol/style'\nimport {\n  fillStyleContainer,\n  geometryContainer,\n  imageStyleContainer,\n  projTransforms,\n  strokeStyleContainer,\n  style,\n  textStyleContainer,\n  waitForMap,\n} from '../../mixins'\nimport { dumpFillStyle, dumpImageStyle, dumpStrokeStyle, dumpTextStyle, EPSG_3857 } from '../../ol-ext'\nimport {\n  clonePlainObject,\n  coalesce,\n  isEqual,\n  isObjectLike,\n  lowerFirst,\n  makeWatchers,\n  mergeDescriptors,\n  upperFirst,\n} from '../../utils'\nimport CircleStyle from './circle.vue'\nimport FillStyle from './fill.vue'\nimport StrokeStyle from './stroke.vue'\n\n/**\n * Style box component.\n * Wrapper for Style class. Can be inserted into component with setStyle/getStyle methods (vl-layer-vector, vl-feature & etc.)\n * and acts as a box for inner style components (vl-style-fill, vl-style-stroke, icon ...)\n */\nexport default {\n  name: 'VlStyle',\n  components: {\n    CircleStyle,\n    FillStyle,\n    StrokeStyle,\n  },\n  mixins: [\n    projTransforms,\n    fillStyleContainer,\n    strokeStyleContainer,\n    textStyleContainer,\n    imageStyleContainer,\n    geometryContainer,\n    style,\n    waitForMap,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  props: {\n    /**\n     * @type {number}\n     */\n    zIndex: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * @type {function}\n     */\n    renderer: Function,\n    /**\n     * @deprecated Use v-if directive.\n     * @todo remove in v0.13.x\n     */\n    condition: [Boolean, Function],\n  },\n  data () {\n    return {\n      viewProjection: EPSG_3857,\n      dataProjection: EPSG_3857,\n      currentZIndex: this.zIndex,\n      currentRenderer: this.renderer,\n    }\n  },\n  computed: {\n    stroke () {\n      if (!(this.rev && this.$stroke)) return\n\n      return dumpStrokeStyle(this.$stroke)\n    },\n    fill () {\n      if (!(this.rev && this.$fill)) return\n\n      return dumpFillStyle(this.$fill)\n    },\n    text () {\n      if (!(this.rev && this.$text)) return\n\n      return dumpTextStyle(this.$text)\n    },\n    image () {\n      if (!(this.rev && this.$image)) return\n\n      return dumpImageStyle(this.$image)\n    },\n    geometryDataProj () {\n      if (!(this.rev && this.$geometry)) return\n\n      return this.writeGeometryInDataProj(this.$geometry)\n    },\n    geometryViewProj () {\n      if (!(this.rev && this.$geometry)) return\n\n      return this.writeGeometryInViewProj(this.$geometry)\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$style) return\n\n      this.setZIndex(this.getZIndex())\n      this.setRenderer(this.getRenderer())\n    },\n    .../*#__PURE__*/makeWatchers([\n      'zIndex',\n      'renderer',\n    ], inProp => {\n      const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n      const setter = 'set' + upperFirst(prop)\n\n      return function (value) {\n        this[setter](value)\n      }\n    }),\n    .../*#__PURE__*/makeWatchers([\n      'currentZIndex',\n      'currentRenderer',\n    ], curProp => {\n      const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n      const inProp = 'input' + upperFirst(prop)\n\n      return function (value) {\n        if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n        this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n      }\n    }),\n    .../*#__PURE__*/makeWatchers([\n      'fill',\n      'stroke',\n      'text',\n      'image',\n      'geometryDataProj',\n    ], prop => {\n      prop = prop.replace(/(DataProj|ViewProj)$/i, '')\n\n      return {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        },\n      }\n    }),\n  },\n  created () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.condition) {\n        this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n      }\n    }\n\n    this::defineServices()\n  },\n  updated () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.condition) {\n        this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n      }\n    }\n  },\n  methods: {\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async beforeInit () {\n      await Promise.all([\n        this::style.methods.beforeInit(),\n        this::waitForMap.methods.beforeInit(),\n      ])\n    },\n    /**\n     * @return {module:ol/style/Style~Style}\n     * @protected\n     */\n    createStyle () {\n      return new Style({\n        zIndex: this.currentZIndex,\n        renderer: this.currentRenderer,\n        fill: this.$fill,\n        stroke: this.$stroke,\n        image: this.$image,\n        text: this.$text,\n        geometry: this.$geometry,\n      })\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.$styleContainer?.addStyle(this)\n\n      return this::style.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async unmount () {\n      this.$styleContainer?.removeStyle(this)\n\n      return this::style.methods.unmount()\n    },\n    /**\n     * @return {Promise}\n     */\n    async refresh () {\n      await Promise.all([\n        this::style.methods.refresh(),\n        this.$styleContainer?.refresh(),\n      ])\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      return mergeDescriptors(\n        this::style.methods.getServices(),\n        this::fillStyleContainer.methods.getServices(),\n        this::strokeStyleContainer.methods.getServices(),\n        this::textStyleContainer.methods.getServices(),\n        this::imageStyleContainer.methods.getServices(),\n        this::geometryContainer.methods.getServices(),\n      )\n    },\n    /**\n     * @protected\n     */\n    syncNonObservable () {\n      this::style.methods.syncNonObservable()\n\n      this.setZIndex(this.getZIndex())\n      this.setRenderer(this.getRenderer())\n    },\n    getFillStyleTarget () {\n      return this.$style\n    },\n    getStrokeStyleTarget () {\n      return this.$style\n    },\n    getTextStyleTarget () {\n      return this.$style\n    },\n    getImageStyleTarget () {\n      return this.$style\n    },\n    getGeometryTarget () {\n      return this.$style\n    },\n    getZIndex () {\n      return coalesce(this.$style?.getZIndex(), this.currentZIndex)\n    },\n    setZIndex (zIndex) {\n      if (zIndex !== this.currentZIndex) {\n        this.currentZIndex = zIndex\n        this.scheduleRefresh()\n      }\n      if (this.$style && zIndex !== this.$style.getZIndex()) {\n        this.$style.setZIndex(zIndex)\n        this.scheduleRefresh()\n      }\n    },\n    getRenderer () {\n      return coalesce(this.$style?.getRenderer(), this.currentRenderer)\n    },\n    setRenderer (renderer) {\n      if (renderer !== this.currentRenderer) {\n        this.currentRenderer = renderer\n        this.scheduleRefresh()\n      }\n      if (this.$style && renderer !== this.$style.getRenderer()) {\n        this.$style.setRenderer(renderer)\n        this.scheduleRefresh()\n      }\n    },\n    // todo add support for geometry function\n    getGeometryFunction () {\n      return this.$style?.getGeometryFunction()\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    /**\n     * @type {Object|undefined}\n     */\n    $mapVm: {\n      enumerable: true,\n      get: () => this.$services?.mapVm,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $viewVm: {\n      enumerable: true,\n      get: () => this.$services?.viewVm,\n    },\n  })\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot>\n      <CircleStyle :id=\"'vl-' + currentId + '-default-circle-style'\" />\n      <FillStyle :id=\"'vl-' + currentId + '-default-fill-style'\" />\n      <StrokeStyle :id=\"'vl-' + currentId + '-default-stroke-style'\" />\n    </slot>\n  </i>\n</template>\n\n<script>\n  import { Style } from 'ol/style'\n  import {\n    fillStyleContainer,\n    geometryContainer,\n    imageStyleContainer,\n    projTransforms,\n    strokeStyleContainer,\n    style,\n    textStyleContainer,\n    waitForMap,\n  } from '../../mixins'\n  import { dumpFillStyle, dumpImageStyle, dumpStrokeStyle, dumpTextStyle, EPSG_3857 } from '../../ol-ext'\n  import {\n    clonePlainObject,\n    coalesce,\n    isEqual,\n    isObjectLike,\n    lowerFirst,\n    makeWatchers,\n    mergeDescriptors,\n    upperFirst,\n  } from '../../utils'\n  import CircleStyle from './circle.vue'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  /**\n   * Style box component.\n   * Wrapper for Style class. Can be inserted into component with setStyle/getStyle methods (vl-layer-vector, vl-feature & etc.)\n   * and acts as a box for inner style components (vl-style-fill, vl-style-stroke, icon ...)\n   */\n  export default {\n    name: 'VlStyle',\n    components: {\n      CircleStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      projTransforms,\n      fillStyleContainer,\n      strokeStyleContainer,\n      textStyleContainer,\n      imageStyleContainer,\n      geometryContainer,\n      style,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * @type {number}\n       */\n      zIndex: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {function}\n       */\n      renderer: Function,\n      /**\n       * @deprecated Use v-if directive.\n       * @todo remove in v0.13.x\n       */\n      condition: [Boolean, Function],\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentZIndex: this.zIndex,\n        currentRenderer: this.renderer,\n      }\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n      image () {\n        if (!(this.rev && this.$image)) return\n\n        return dumpImageStyle(this.$image)\n      },\n      geometryDataProj () {\n        if (!(this.rev && this.$geometry)) return\n\n        return this.writeGeometryInDataProj(this.$geometry)\n      },\n      geometryViewProj () {\n        if (!(this.rev && this.$geometry)) return\n\n        return this.writeGeometryInViewProj(this.$geometry)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setZIndex(this.getZIndex())\n        this.setRenderer(this.getRenderer())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'zIndex',\n        'renderer',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return function (value) {\n          this[setter](value)\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentZIndex',\n        'currentRenderer',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return function (value) {\n          if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n        'text',\n        'image',\n        'geometryDataProj',\n      ], prop => {\n        prop = prop.replace(/(DataProj|ViewProj)$/i, '')\n\n        return {\n          deep: true,\n          handler (value, prev) {\n            if (isEqual(value, prev)) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.condition) {\n          this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n        }\n      }\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.condition) {\n          this.$logger.warn(\"'condition' is deprecated. Use v-if directive instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::style.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/style/Style~Style}\n       * @protected\n       */\n      createStyle () {\n        return new Style({\n          zIndex: this.currentZIndex,\n          renderer: this.currentRenderer,\n          fill: this.$fill,\n          stroke: this.$stroke,\n          image: this.$image,\n          text: this.$text,\n          geometry: this.$geometry,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$styleContainer?.addStyle(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.$styleContainer?.removeStyle(this)\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$styleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::style.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n          this::imageStyleContainer.methods.getServices(),\n          this::geometryContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setZIndex(this.getZIndex())\n        this.setRenderer(this.getRenderer())\n      },\n      getFillStyleTarget () {\n        return this.$style\n      },\n      getStrokeStyleTarget () {\n        return this.$style\n      },\n      getTextStyleTarget () {\n        return this.$style\n      },\n      getImageStyleTarget () {\n        return this.$style\n      },\n      getGeometryTarget () {\n        return this.$style\n      },\n      getZIndex () {\n        return coalesce(this.$style?.getZIndex(), this.currentZIndex)\n      },\n      setZIndex (zIndex) {\n        if (zIndex !== this.currentZIndex) {\n          this.currentZIndex = zIndex\n          this.scheduleRefresh()\n        }\n        if (this.$style && zIndex !== this.$style.getZIndex()) {\n          this.$style.setZIndex(zIndex)\n          this.scheduleRefresh()\n        }\n      },\n      getRenderer () {\n        return coalesce(this.$style?.getRenderer(), this.currentRenderer)\n      },\n      setRenderer (renderer) {\n        if (renderer !== this.currentRenderer) {\n          this.currentRenderer = renderer\n          this.scheduleRefresh()\n        }\n        if (this.$style && renderer !== this.$style.getRenderer()) {\n          this.$style.setRenderer(renderer)\n          this.scheduleRefresh()\n        }\n      },\n      // todo add support for geometry function\n      getGeometryFunction () {\n        return this.$style?.getGeometryFunction()\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n    })\n  }\n</script>\n","\nimport { fillStyleContainer, olCmp, strokeStyleContainer, stubVNode } from '../../mixins'\nimport { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\nimport { clonePlainObject, isEqual, isObjectLike, makeWatchers, mergeDescriptors, stubObject } from '../../utils'\n\nexport default {\n  name: 'VlStyleBackgroundAdapter',\n  mixins: [\n    stubVNode,\n    fillStyleContainer,\n    strokeStyleContainer,\n    olCmp,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  computed: {\n    stroke () {\n      if (!(this.rev && this.$strokeStyle)) return\n\n      return dumpStrokeStyle(this.$strokeStyle)\n    },\n    fill () {\n      if (!(this.rev && this.$fill)) return\n\n      return dumpFillStyle(this.$fill)\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeWatchers([\n      'fill',\n      'stroke',\n    ], prop => function (value, prev) {\n      if (isEqual(value, prev)) return\n\n      this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n    }),\n  },\n  created () {\n    Object.defineProperties(this, {\n      $bgStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.bgStyleContainer,\n      },\n    })\n  },\n  methods: {\n    createOlObject () {\n      const obj = stubObject()\n      obj.id = this.currentId\n\n      return obj\n    },\n    getServices () {\n      return mergeDescriptors(\n        this::olCmp.methods.getServices(),\n        this::fillStyleContainer.methods.getServices(),\n        this::strokeStyleContainer.methods.getServices(),\n      )\n    },\n    getFillStyleTarget () {\n      return {\n        getFill: () => this.$bgStyleContainer?.getBackgroundFill(),\n        setFill: style => this.$bgStyleContainer?.setBackgroundFill(style),\n      }\n    },\n    getStrokeStyleTarget () {\n      return {\n        getStroke: () => this.$bgStyleContainer?.getBackgroundStroke(),\n        setStroke: style => this.$bgStyleContainer?.setBackgroundStroke(style),\n      }\n    },\n  },\n}\n","<script>\n  import { fillStyleContainer, olCmp, strokeStyleContainer, stubVNode } from '../../mixins'\n  import { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\n  import { clonePlainObject, isEqual, isObjectLike, makeWatchers, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlStyleBackgroundAdapter',\n    mixins: [\n      stubVNode,\n      fillStyleContainer,\n      strokeStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$strokeStyle)) return\n\n        return dumpStrokeStyle(this.$strokeStyle)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n      ], prop => function (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n      }),\n    },\n    created () {\n      Object.defineProperties(this, {\n        $bgStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.bgStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n        )\n      },\n      getFillStyleTarget () {\n        return {\n          getFill: () => this.$bgStyleContainer?.getBackgroundFill(),\n          setFill: style => this.$bgStyleContainer?.setBackgroundFill(style),\n        }\n      },\n      getStrokeStyleTarget () {\n        return {\n          getStroke: () => this.$bgStyleContainer?.getBackgroundStroke(),\n          setStroke: style => this.$bgStyleContainer?.setBackgroundStroke(style),\n        }\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Text as TextStyle } from 'ol/style'\nimport { fillStyleContainer, strokeStyleContainer, style } from '../../mixins'\nimport { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\nimport {\n  clonePlainObject,\n  coalesce,\n  isEqual,\n  isObjectLike,\n  lowerFirst,\n  makeWatchers,\n  mergeDescriptors,\n  upperFirst,\n} from '../../utils'\nimport BackgroundStyle from './background.vue'\nimport FillStyle from './fill.vue'\nimport StrokeStyle from './stroke.vue'\n\nexport default {\n  name: 'VlStyleText',\n  components: {\n    BackgroundStyle,\n    FillStyle,\n    StrokeStyle,\n  },\n  mixins: [\n    fillStyleContainer,\n    strokeStyleContainer,\n    style,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  props: {\n    font: {\n      type: String,\n      default: '10px sans-serif', // css font format https://developer.mozilla.org/en-US/docs/Web/CSS/font?v=control\n    },\n    maxAngle: Number,\n    placement: String,\n    offsetX: {\n      type: Number,\n      default: 0,\n    },\n    offsetY: {\n      type: Number,\n      default: 0,\n    },\n    overflow: Boolean,\n    rotateWithView: {\n      type: Boolean,\n      default: false,\n    },\n    rotation: {\n      type: Number,\n      default: 0,\n    },\n    scale: {\n      type: Number,\n      default: 1,\n    },\n    text: String,\n    textAlign: String, // left, right, center, end, start\n    textBaseline: String, // bottom, top, middle, alphabetic, hanging, ideographic\n    padding: {\n      type: Array,\n      default: () => [0, 0, 0, 0],\n      validate: val => val.length && val.length === 4,\n    },\n  },\n  data () {\n    return {\n      currentFont: this.font,\n      currentMaxAngle: this.maxAngle,\n      currentPlacement: this.placement,\n      currentOffsetX: this.offsetX,\n      currentOffsetY: this.offsetY,\n      currentOverflow: this.overflow,\n      currentRotateWithView: this.rotateWithView,\n      currentRotation: this.rotation,\n      currentScale: this.scale,\n      currentText: this.text,\n      currentTextAlign: this.textAlign,\n      currentTextBaseline: this.textBaseline,\n      currentPadding: this.padding?.slice(),\n    }\n  },\n  computed: {\n    inputPadding () {\n      return this.padding?.slice()\n    },\n    stroke () {\n      if (!(this.rev && this.$stroke)) return\n\n      return dumpStrokeStyle(this.$stroke)\n    },\n    fill () {\n      if (!(this.rev && this.$fill)) return\n\n      return dumpFillStyle(this.$fill)\n    },\n    backgroundFill () {\n      if (!(this.rev && this.$bgFill)) return\n\n      return dumpFillStyle(this.$bgFill)\n    },\n    backgroundStroke () {\n      if (!(this.rev && this.$bgStroke)) return\n\n      return dumpStrokeStyle(this.$bgStroke)\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$style) return\n\n      this.setFont(this.getFont())\n      this.setMaxAngle(this.getMaxAngle())\n      this.setPlacement(this.getPlacement())\n      this.setOffsetX(this.getOffsetX())\n      this.setOffsetY(this.getOffsetY())\n      this.setOverflow(this.getOverflow())\n      this.setRotateWithView(this.getRotateWithView())\n      this.setRotation(this.getRotation())\n      this.setScale(this.getScale())\n      this.setText(this.getText())\n      this.setTextAlign(this.getTextAlign())\n      this.setTextBaseline(this.getTextBaseline())\n      this.setPadding(this.getPadding())\n    },\n    .../*#__PURE__*/makeWatchers([\n      'font',\n      'maxAngle',\n      'placement',\n      'offsetX',\n      'offsetY',\n      'overflow',\n      'rotateWithView',\n      'rotation',\n      'scale',\n      'text',\n      'textAlign',\n      'textBaseline',\n      'inputPadding',\n    ], inProp => {\n      const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n      const setter = 'set' + upperFirst(prop)\n\n      return {\n        deep: [\n          'inputPadding',\n        ].includes(inProp),\n        handler (value) {\n          this[setter](value)\n        },\n      }\n    }),\n    .../*#__PURE__*/makeWatchers([\n      'currentFont',\n      'currentMaxAngle',\n      'currentPlacement',\n      'currentOffsetX',\n      'currentOffsetY',\n      'currentOverflow',\n      'currentRotateWithView',\n      'currentRotation',\n      'currentScale',\n      'currentText',\n      'currentTextAlign',\n      'currentTextBaseline',\n      'currentPadding',\n    ], curProp => {\n      const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n      const inProp = 'input' + upperFirst(prop)\n\n      return {\n        deep: [\n          'currentPadding',\n        ].includes(curProp),\n        handler (value) {\n          if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        },\n      }\n    }),\n    .../*#__PURE__*/makeWatchers([\n      'fill',\n      'stroke',\n      'backgroundFill',\n      'backgroundStroke',\n    ], prop => ({\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n      },\n    })),\n  },\n  created () {\n    this._bgFill = undefined\n    this._bgFillVm = undefined\n    this._bgStroke = undefined\n    this._bgStrokeVm = undefined\n\n    this::defineServices()\n  },\n  methods: {\n    /**\n     * @returns {Text}\n     * @protected\n     */\n    createStyle () {\n      return new TextStyle({\n        font: this.currentFont,\n        maxAngle: this.currentMaxAngle,\n        placement: this.currentPlacement,\n        offsetX: this.currentOffsetX,\n        offsetY: this.currentOffsetY,\n        overflow: this.currentOverflow,\n        rotateWithView: this.currentRotateWithView,\n        rotation: this.currentRotation,\n        scale: this.currentScale,\n        text: this.currentText,\n        textAlign: this.currentTextAlign,\n        textBaseline: this.currentTextBaseline,\n        padding: this.currentPadding,\n        fill: this.$fill,\n        stroke: this.$stroke,\n        backgroundFill: this.$bgFill,\n        backgroundStroke: this.$bgStroke,\n      })\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.$textStyleContainer?.setText(this)\n\n      return this::style.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async unmount () {\n      if (this.$textStyleContainer?.getTextVm() === this) {\n        await this.$textStyleContainer.setText(null)\n      }\n\n      return this::style.methods.unmount()\n    },\n    /**\n     * @return {Promise<void>}\n     */\n    async refresh () {\n      await Promise.all([\n        this::style.methods.refresh(),\n        this.$textStyleContainer?.refresh(),\n      ])\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      const vm = this\n\n      return mergeDescriptors(\n        this::style.methods.getServices(),\n        this::fillStyleContainer.methods.getServices(),\n        this::strokeStyleContainer.methods.getServices(),\n        {\n          get bgStyleContainer () { return vm },\n        },\n      )\n    },\n    /**\n     * @protected\n     */\n    syncNonObservable () {\n      this::style.methods.syncNonObservable()\n\n      this.setFont(this.getFont())\n      this.setMaxAngle(this.getMaxAngle())\n      this.setPlacement(this.getPlacement())\n      this.setOffsetX(this.getOffsetX())\n      this.setOffsetY(this.getOffsetY())\n      this.setOverflow(this.getOverflow())\n      this.setRotateWithView(this.getRotateWithView())\n      this.setRotation(this.getRotation())\n      this.setScale(this.getScale())\n      this.setText(this.getText())\n      this.setTextAlign(this.getTextAlign())\n      this.setTextBaseline(this.getTextBaseline())\n      this.setPadding(this.getPadding())\n    },\n    getFont () {\n      return coalesce(this.$style?.getFont(), this.currentFont)\n    },\n    setFont (font) {\n      if (font !== this.currentFont) {\n        this.currentFont = font\n        this.scheduleRefresh()\n      }\n      if (this.$style && font !== this.$style.getFont()) {\n        this.$style.setFont(font)\n        this.scheduleRefresh()\n      }\n    },\n    getMaxAngle () {\n      return coalesce(this.$style?.getMaxAngle(), this.currentMaxAngle)\n    },\n    setMaxAngle (maxAngle) {\n      if (maxAngle !== this.currentMaxAngle) {\n        this.currentMaxAngle = maxAngle\n        this.scheduleRefresh()\n      }\n      if (this.$style && maxAngle !== this.$style.getMaxAngle()) {\n        this.$style.setMaxAngle(maxAngle)\n        this.scheduleRefresh()\n      }\n    },\n    getOffsetX () {\n      return coalesce(this.$style?.getOffsetX(), this.currentOffsetX)\n    },\n    setOffsetX (offsetX) {\n      if (offsetX !== this.currentOffsetX) {\n        this.currentOffsetX = offsetX\n        this.scheduleRefresh()\n      }\n      if (this.$style && offsetX !== this.$style.getOffsetX()) {\n        this.$style.setOffsetX(offsetX)\n        this.scheduleRefresh()\n      }\n    },\n    getOffsetY () {\n      return coalesce(this.$style?.getOffsetY(), this.currentOffsetY)\n    },\n    setOffsetY (offsetY) {\n      if (offsetY !== this.currentOffsetY) {\n        this.currentOffsetY = offsetY\n        this.scheduleRefresh()\n      }\n      if (this.$style && offsetY !== this.$style.getOffsetY()) {\n        this.$style.setOffsetY(offsetY)\n        this.scheduleRefresh()\n      }\n    },\n    getOverflow () {\n      return coalesce(this.$style?.getOverflow(), this.currentOverflow)\n    },\n    setOverflow (overflow) {\n      if (overflow !== this.currentOverflow) {\n        this.currentOverflow = overflow\n        this.scheduleRefresh()\n      }\n      if (this.$style && overflow !== this.$style.getOverflow()) {\n        this.$style.setOverflow(overflow)\n        this.scheduleRefresh()\n      }\n    },\n    getPadding () {\n      return coalesce(this.$style?.getPadding(), this.currentPadding)\n    },\n    setPadding (padding) {\n      padding = padding?.slice()\n\n      if (!isEqual(padding, this.currentPadding)) {\n        this.currentPadding = padding\n        this.scheduleRefresh()\n      }\n      if (this.$style && !isEqual(padding, this.$style.getPadding())) {\n        this.$style.setPadding(padding)\n        this.scheduleRefresh()\n      }\n    },\n    getPlacement () {\n      return coalesce(this.$source?.getPlacement(), this.currentPlacement)\n    },\n    setPlacement (placement) {\n      if (placement !== this.currentPlacement) {\n        this.currentPlacement = placement\n        this.scheduleRefresh()\n      }\n      if (this.$style && placement !== this.$style.getPlacement()) {\n        this.$style.setPlacement(placement)\n        this.scheduleRefresh()\n      }\n    },\n    getRotateWithView () {\n      return coalesce(this.$style?.getRotateWithView(), this.currentRotateWithView)\n    },\n    setRotateWithView (rotateWithView) {\n      if (rotateWithView !== this.currentRotateWithView) {\n        this.currentRotateWithView = rotateWithView\n        this.scheduleRefresh()\n      }\n      if (this.$style && rotateWithView !== this.$style.getRotateWithView()) {\n        this.$style.setRotateWithView(rotateWithView)\n        this.scheduleRefresh()\n      }\n    },\n    getRotation () {\n      return coalesce(this.$style?.getRotation(), this.currentRotation)\n    },\n    setRotation (rotation) {\n      if (rotation !== this.currentRotation) {\n        this.currentRotation = rotation\n        this.scheduleRefresh()\n      }\n      if (this.$style && rotation !== this.$style.getRotation()) {\n        this.$style.setRotation(rotation)\n        this.scheduleRefresh()\n      }\n    },\n    getScale () {\n      return coalesce(this.$style?.getScale(), this.currentScale)\n    },\n    setScale (scale) {\n      if (scale !== this.currentScale) {\n        this.currentScale = scale\n        this.scheduleRefresh()\n      }\n      if (this.$style && scale !== this.$style.getScale()) {\n        this.$style.setScale(scale)\n        this.scheduleRefresh()\n      }\n    },\n    getText () {\n      return coalesce(this.$style?.getText(), this.currentText)\n    },\n    setText (text) {\n      if (text !== this.currentText) {\n        this.currentText = text\n        this.scheduleRefresh()\n      }\n      if (this.$style && text !== this.$style.getText()) {\n        this.$style.setText(text)\n        this.scheduleRefresh()\n      }\n    },\n    getTextAlign () {\n      return coalesce(this.$style?.getTextAlign(), this.currentTextAlign)\n    },\n    setTextAlign (textAlign) {\n      if (textAlign !== this.currentTextAlign) {\n        this.currentTextAlign = textAlign\n        this.scheduleRefresh()\n      }\n      if (this.$style && textAlign !== this.$style.getTextAlign()) {\n        this.$style.setTextAlign(textAlign)\n        this.scheduleRefresh()\n      }\n    },\n    getTextBaseline () {\n      return coalesce(this.$style?.getTextBaseline(), this.currentTextBaseline)\n    },\n    setTextBaseline (textBaseline) {\n      if (textBaseline !== this.currentTextBaseline) {\n        this.currentTextBaseline = textBaseline\n        this.scheduleRefresh()\n      }\n      if (this.$style && textBaseline !== this.$style.getTextBaseline()) {\n        this.$style.setTextBaseline(textBaseline)\n        this.scheduleRefresh()\n      }\n    },\n    getFillStyleTarget () {\n      return this.$style\n    },\n    getStrokeStyleTarget () {\n      return this.$style\n    },\n    getBackgroundFill () {\n      return this._bgFill\n    },\n    setBackgroundFill (fill) {\n      fill = fill?.$fill || fill\n      fill || (fill = undefined)\n\n      if (fill !== this._bgFill) {\n        this._bgFill = fill\n        this._bgFillVm = fill?.vm && fill.vm[0]\n        this.scheduleRefresh()\n      }\n      if (this.$style && fill !== this.$style.getBackgroundFill()) {\n        this.$style.setBackgroundFill(fill)\n        this.scheduleRefresh()\n      }\n    },\n    getBackgroundStroke () {\n      return this._bgStroke\n    },\n    setBackgroundStroke (stroke) {\n      stroke = stroke?.$stroke || stroke\n      stroke || (stroke = undefined)\n\n      if (stroke !== this._bgStroke) {\n        this._bgStroke = stroke\n        this._bgStrokeVm = stroke?.vm && stroke.vm[0]\n        this.scheduleRefresh()\n      }\n      if (this.$style && stroke !== this.$style.getBackgroundStroke()) {\n        this.$style.setBackgroundStroke(stroke)\n        this.scheduleRefresh()\n      }\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $textStyleContainer: {\n      enumerable: true,\n      get: () => this.$services?.textStyleContainer,\n    },\n    $bgFill: {\n      enumerable: true,\n      get: this.getBackgroundFill,\n    },\n    $bgFillVm: {\n      enumerable: true,\n      get: () => this._bgFillVm,\n    },\n    $bgStroke: {\n      enumerable: true,\n      get: this.getBackgroundStroke,\n    },\n    $bgStrokeVm: {\n      enumerable: true,\n      get: () => this._bgStrokeVm,\n    },\n  })\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot>\n      <FillStyle\n        :id=\"'vl-' + currentId + '-default-fill-style'\"\n        color=\"#333\" />\n      <StrokeStyle\n        :id=\"'vl-' + currentId + '-default-stroke-style'\"\n        color=\"#eee\" />\n    </slot>\n    <BackgroundStyle :id=\"'vl-' + currentId + '-background-style'\">\n      <slot name=\"background\" />\n    </BackgroundStyle>\n  </i>\n</template>\n\n<script>\n  import { Text as TextStyle } from 'ol/style'\n  import { fillStyleContainer, strokeStyleContainer, style } from '../../mixins'\n  import { dumpFillStyle, dumpStrokeStyle } from '../../ol-ext'\n  import {\n    clonePlainObject,\n    coalesce,\n    isEqual,\n    isObjectLike,\n    lowerFirst,\n    makeWatchers,\n    mergeDescriptors,\n    upperFirst,\n  } from '../../utils'\n  import BackgroundStyle from './background.vue'\n  import FillStyle from './fill.vue'\n  import StrokeStyle from './stroke.vue'\n\n  export default {\n    name: 'VlStyleText',\n    components: {\n      BackgroundStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      fillStyleContainer,\n      strokeStyleContainer,\n      style,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      font: {\n        type: String,\n        default: '10px sans-serif', // css font format https://developer.mozilla.org/en-US/docs/Web/CSS/font?v=control\n      },\n      maxAngle: Number,\n      placement: String,\n      offsetX: {\n        type: Number,\n        default: 0,\n      },\n      offsetY: {\n        type: Number,\n        default: 0,\n      },\n      overflow: Boolean,\n      rotateWithView: {\n        type: Boolean,\n        default: false,\n      },\n      rotation: {\n        type: Number,\n        default: 0,\n      },\n      scale: {\n        type: Number,\n        default: 1,\n      },\n      text: String,\n      textAlign: String, // left, right, center, end, start\n      textBaseline: String, // bottom, top, middle, alphabetic, hanging, ideographic\n      padding: {\n        type: Array,\n        default: () => [0, 0, 0, 0],\n        validate: val => val.length && val.length === 4,\n      },\n    },\n    data () {\n      return {\n        currentFont: this.font,\n        currentMaxAngle: this.maxAngle,\n        currentPlacement: this.placement,\n        currentOffsetX: this.offsetX,\n        currentOffsetY: this.offsetY,\n        currentOverflow: this.overflow,\n        currentRotateWithView: this.rotateWithView,\n        currentRotation: this.rotation,\n        currentScale: this.scale,\n        currentText: this.text,\n        currentTextAlign: this.textAlign,\n        currentTextBaseline: this.textBaseline,\n        currentPadding: this.padding?.slice(),\n      }\n    },\n    computed: {\n      inputPadding () {\n        return this.padding?.slice()\n      },\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n      fill () {\n        if (!(this.rev && this.$fill)) return\n\n        return dumpFillStyle(this.$fill)\n      },\n      backgroundFill () {\n        if (!(this.rev && this.$bgFill)) return\n\n        return dumpFillStyle(this.$bgFill)\n      },\n      backgroundStroke () {\n        if (!(this.rev && this.$bgStroke)) return\n\n        return dumpStrokeStyle(this.$bgStroke)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$style) return\n\n        this.setFont(this.getFont())\n        this.setMaxAngle(this.getMaxAngle())\n        this.setPlacement(this.getPlacement())\n        this.setOffsetX(this.getOffsetX())\n        this.setOffsetY(this.getOffsetY())\n        this.setOverflow(this.getOverflow())\n        this.setRotateWithView(this.getRotateWithView())\n        this.setRotation(this.getRotation())\n        this.setScale(this.getScale())\n        this.setText(this.getText())\n        this.setTextAlign(this.getTextAlign())\n        this.setTextBaseline(this.getTextBaseline())\n        this.setPadding(this.getPadding())\n      },\n      .../*#__PURE__*/makeWatchers([\n        'font',\n        'maxAngle',\n        'placement',\n        'offsetX',\n        'offsetY',\n        'overflow',\n        'rotateWithView',\n        'rotation',\n        'scale',\n        'text',\n        'textAlign',\n        'textBaseline',\n        'inputPadding',\n      ], inProp => {\n        const prop = inProp.slice(0, 5) === 'input' ? lowerFirst(inProp.slice(5)) : inProp\n        const setter = 'set' + upperFirst(prop)\n\n        return {\n          deep: [\n            'inputPadding',\n          ].includes(inProp),\n          handler (value) {\n            this[setter](value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'currentFont',\n        'currentMaxAngle',\n        'currentPlacement',\n        'currentOffsetX',\n        'currentOffsetY',\n        'currentOverflow',\n        'currentRotateWithView',\n        'currentRotation',\n        'currentScale',\n        'currentText',\n        'currentTextAlign',\n        'currentTextBaseline',\n        'currentPadding',\n      ], curProp => {\n        const prop = curProp.slice(0, 7) === 'current' ? lowerFirst(curProp.slice(7)) : curProp\n        const inProp = 'input' + upperFirst(prop)\n\n        return {\n          deep: [\n            'currentPadding',\n          ].includes(curProp),\n          handler (value) {\n            if (isEqual(value, coalesce(this[inProp], this[prop]))) return\n\n            this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n          },\n        }\n      }),\n      .../*#__PURE__*/makeWatchers([\n        'fill',\n        'stroke',\n        'backgroundFill',\n        'backgroundStroke',\n      ], prop => ({\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit(`update:${prop}`, isObjectLike(value) ? clonePlainObject(value) : value)\n        },\n      })),\n    },\n    created () {\n      this._bgFill = undefined\n      this._bgFillVm = undefined\n      this._bgStroke = undefined\n      this._bgStrokeVm = undefined\n\n      this::defineServices()\n    },\n    methods: {\n      /**\n       * @returns {Text}\n       * @protected\n       */\n      createStyle () {\n        return new TextStyle({\n          font: this.currentFont,\n          maxAngle: this.currentMaxAngle,\n          placement: this.currentPlacement,\n          offsetX: this.currentOffsetX,\n          offsetY: this.currentOffsetY,\n          overflow: this.currentOverflow,\n          rotateWithView: this.currentRotateWithView,\n          rotation: this.currentRotation,\n          scale: this.currentScale,\n          text: this.currentText,\n          textAlign: this.currentTextAlign,\n          textBaseline: this.currentTextBaseline,\n          padding: this.currentPadding,\n          fill: this.$fill,\n          stroke: this.$stroke,\n          backgroundFill: this.$bgFill,\n          backgroundStroke: this.$bgStroke,\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$textStyleContainer?.setText(this)\n\n        return this::style.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$textStyleContainer?.getTextVm() === this) {\n          await this.$textStyleContainer.setText(null)\n        }\n\n        return this::style.methods.unmount()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async refresh () {\n        await Promise.all([\n          this::style.methods.refresh(),\n          this.$textStyleContainer?.refresh(),\n        ])\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::style.methods.getServices(),\n          this::fillStyleContainer.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n          {\n            get bgStyleContainer () { return vm },\n          },\n        )\n      },\n      /**\n       * @protected\n       */\n      syncNonObservable () {\n        this::style.methods.syncNonObservable()\n\n        this.setFont(this.getFont())\n        this.setMaxAngle(this.getMaxAngle())\n        this.setPlacement(this.getPlacement())\n        this.setOffsetX(this.getOffsetX())\n        this.setOffsetY(this.getOffsetY())\n        this.setOverflow(this.getOverflow())\n        this.setRotateWithView(this.getRotateWithView())\n        this.setRotation(this.getRotation())\n        this.setScale(this.getScale())\n        this.setText(this.getText())\n        this.setTextAlign(this.getTextAlign())\n        this.setTextBaseline(this.getTextBaseline())\n        this.setPadding(this.getPadding())\n      },\n      getFont () {\n        return coalesce(this.$style?.getFont(), this.currentFont)\n      },\n      setFont (font) {\n        if (font !== this.currentFont) {\n          this.currentFont = font\n          this.scheduleRefresh()\n        }\n        if (this.$style && font !== this.$style.getFont()) {\n          this.$style.setFont(font)\n          this.scheduleRefresh()\n        }\n      },\n      getMaxAngle () {\n        return coalesce(this.$style?.getMaxAngle(), this.currentMaxAngle)\n      },\n      setMaxAngle (maxAngle) {\n        if (maxAngle !== this.currentMaxAngle) {\n          this.currentMaxAngle = maxAngle\n          this.scheduleRefresh()\n        }\n        if (this.$style && maxAngle !== this.$style.getMaxAngle()) {\n          this.$style.setMaxAngle(maxAngle)\n          this.scheduleRefresh()\n        }\n      },\n      getOffsetX () {\n        return coalesce(this.$style?.getOffsetX(), this.currentOffsetX)\n      },\n      setOffsetX (offsetX) {\n        if (offsetX !== this.currentOffsetX) {\n          this.currentOffsetX = offsetX\n          this.scheduleRefresh()\n        }\n        if (this.$style && offsetX !== this.$style.getOffsetX()) {\n          this.$style.setOffsetX(offsetX)\n          this.scheduleRefresh()\n        }\n      },\n      getOffsetY () {\n        return coalesce(this.$style?.getOffsetY(), this.currentOffsetY)\n      },\n      setOffsetY (offsetY) {\n        if (offsetY !== this.currentOffsetY) {\n          this.currentOffsetY = offsetY\n          this.scheduleRefresh()\n        }\n        if (this.$style && offsetY !== this.$style.getOffsetY()) {\n          this.$style.setOffsetY(offsetY)\n          this.scheduleRefresh()\n        }\n      },\n      getOverflow () {\n        return coalesce(this.$style?.getOverflow(), this.currentOverflow)\n      },\n      setOverflow (overflow) {\n        if (overflow !== this.currentOverflow) {\n          this.currentOverflow = overflow\n          this.scheduleRefresh()\n        }\n        if (this.$style && overflow !== this.$style.getOverflow()) {\n          this.$style.setOverflow(overflow)\n          this.scheduleRefresh()\n        }\n      },\n      getPadding () {\n        return coalesce(this.$style?.getPadding(), this.currentPadding)\n      },\n      setPadding (padding) {\n        padding = padding?.slice()\n\n        if (!isEqual(padding, this.currentPadding)) {\n          this.currentPadding = padding\n          this.scheduleRefresh()\n        }\n        if (this.$style && !isEqual(padding, this.$style.getPadding())) {\n          this.$style.setPadding(padding)\n          this.scheduleRefresh()\n        }\n      },\n      getPlacement () {\n        return coalesce(this.$source?.getPlacement(), this.currentPlacement)\n      },\n      setPlacement (placement) {\n        if (placement !== this.currentPlacement) {\n          this.currentPlacement = placement\n          this.scheduleRefresh()\n        }\n        if (this.$style && placement !== this.$style.getPlacement()) {\n          this.$style.setPlacement(placement)\n          this.scheduleRefresh()\n        }\n      },\n      getRotateWithView () {\n        return coalesce(this.$style?.getRotateWithView(), this.currentRotateWithView)\n      },\n      setRotateWithView (rotateWithView) {\n        if (rotateWithView !== this.currentRotateWithView) {\n          this.currentRotateWithView = rotateWithView\n          this.scheduleRefresh()\n        }\n        if (this.$style && rotateWithView !== this.$style.getRotateWithView()) {\n          this.$style.setRotateWithView(rotateWithView)\n          this.scheduleRefresh()\n        }\n      },\n      getRotation () {\n        return coalesce(this.$style?.getRotation(), this.currentRotation)\n      },\n      setRotation (rotation) {\n        if (rotation !== this.currentRotation) {\n          this.currentRotation = rotation\n          this.scheduleRefresh()\n        }\n        if (this.$style && rotation !== this.$style.getRotation()) {\n          this.$style.setRotation(rotation)\n          this.scheduleRefresh()\n        }\n      },\n      getScale () {\n        return coalesce(this.$style?.getScale(), this.currentScale)\n      },\n      setScale (scale) {\n        if (scale !== this.currentScale) {\n          this.currentScale = scale\n          this.scheduleRefresh()\n        }\n        if (this.$style && scale !== this.$style.getScale()) {\n          this.$style.setScale(scale)\n          this.scheduleRefresh()\n        }\n      },\n      getText () {\n        return coalesce(this.$style?.getText(), this.currentText)\n      },\n      setText (text) {\n        if (text !== this.currentText) {\n          this.currentText = text\n          this.scheduleRefresh()\n        }\n        if (this.$style && text !== this.$style.getText()) {\n          this.$style.setText(text)\n          this.scheduleRefresh()\n        }\n      },\n      getTextAlign () {\n        return coalesce(this.$style?.getTextAlign(), this.currentTextAlign)\n      },\n      setTextAlign (textAlign) {\n        if (textAlign !== this.currentTextAlign) {\n          this.currentTextAlign = textAlign\n          this.scheduleRefresh()\n        }\n        if (this.$style && textAlign !== this.$style.getTextAlign()) {\n          this.$style.setTextAlign(textAlign)\n          this.scheduleRefresh()\n        }\n      },\n      getTextBaseline () {\n        return coalesce(this.$style?.getTextBaseline(), this.currentTextBaseline)\n      },\n      setTextBaseline (textBaseline) {\n        if (textBaseline !== this.currentTextBaseline) {\n          this.currentTextBaseline = textBaseline\n          this.scheduleRefresh()\n        }\n        if (this.$style && textBaseline !== this.$style.getTextBaseline()) {\n          this.$style.setTextBaseline(textBaseline)\n          this.scheduleRefresh()\n        }\n      },\n      getFillStyleTarget () {\n        return this.$style\n      },\n      getStrokeStyleTarget () {\n        return this.$style\n      },\n      getBackgroundFill () {\n        return this._bgFill\n      },\n      setBackgroundFill (fill) {\n        fill = fill?.$fill || fill\n        fill || (fill = undefined)\n\n        if (fill !== this._bgFill) {\n          this._bgFill = fill\n          this._bgFillVm = fill?.vm && fill.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$style && fill !== this.$style.getBackgroundFill()) {\n          this.$style.setBackgroundFill(fill)\n          this.scheduleRefresh()\n        }\n      },\n      getBackgroundStroke () {\n        return this._bgStroke\n      },\n      setBackgroundStroke (stroke) {\n        stroke = stroke?.$stroke || stroke\n        stroke || (stroke = undefined)\n\n        if (stroke !== this._bgStroke) {\n          this._bgStroke = stroke\n          this._bgStrokeVm = stroke?.vm && stroke.vm[0]\n          this.scheduleRefresh()\n        }\n        if (this.$style && stroke !== this.$style.getBackgroundStroke()) {\n          this.$style.setBackgroundStroke(stroke)\n          this.scheduleRefresh()\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $textStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.textStyleContainer,\n      },\n      $bgFill: {\n        enumerable: true,\n        get: this.getBackgroundFill,\n      },\n      $bgFillVm: {\n        enumerable: true,\n        get: () => this._bgFillVm,\n      },\n      $bgStroke: {\n        enumerable: true,\n        get: this.getBackgroundStroke,\n      },\n      $bgStrokeVm: {\n        enumerable: true,\n        get: () => this._bgStrokeVm,\n      },\n    })\n  }\n</script>\n","import { pick } from '../../utils'\nimport CircleStyle from './circle.vue'\nimport FillStyle from './fill.vue'\nimport IconStyle from './icon.vue'\nimport RegShapeStyle from './reg-shape.vue'\nimport StrokeStyle from './stroke.vue'\nimport Style from './style.vue'\nimport TextStyle from './text.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(CircleStyle, options)\n  Object.assign(FillStyle, options)\n  Object.assign(IconStyle, options)\n  Object.assign(RegShapeStyle, options)\n  Object.assign(StrokeStyle, options)\n  Object.assign(Style, options)\n  Object.assign(TextStyle, options)\n\n  Vue.component(CircleStyle.name, CircleStyle)\n  Vue.component(FillStyle.name, FillStyle)\n  Vue.component(IconStyle.name, IconStyle)\n  Vue.component(RegShapeStyle.name, RegShapeStyle)\n  Vue.component(StrokeStyle.name, StrokeStyle)\n  Vue.component(Style.name, Style)\n  Vue.component(TextStyle.name, TextStyle)\n\n  // todo remove in v0.13.x\n  Vue.component('VlStyleBox', {\n    name: 'VlStyleBox',\n    extends: Style,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlStyleBox component is deprecated. Use VlStyle component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  CircleStyle,\n  FillStyle,\n  IconStyle,\n  RegShapeStyle,\n  StrokeStyle,\n  Style,\n  TextStyle,\n}\n","\nimport { olCmp, stubVNode, textStyleContainer } from '../../mixins'\nimport { dumpTextStyle } from '../../ol-ext'\nimport { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\nexport default {\n  name: 'VlLayerGraticuleLatStyleAdapter',\n  mixins: [\n    stubVNode,\n    textStyleContainer,\n    olCmp,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  computed: {\n    text () {\n      if (!(this.rev && this.$text)) return\n\n      return dumpTextStyle(this.$text)\n    },\n  },\n  watch: {\n    text: {\n      deep: true,\n      handler (value, prev) {\n        if (!isEqual(value, prev)) return\n\n        this.$emit('update:text', value && clonePlainObject(value))\n      },\n    },\n  },\n  created () {\n    Object.defineProperties(this, {\n      $latStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.latStyleContainer,\n      },\n    })\n  },\n  methods: {\n    createOlObject () {\n      const obj = stubObject()\n      obj.id = this.currentId\n\n      return obj\n    },\n    getServices () {\n      return mergeDescriptors(\n        this::olCmp.methods.getServices(),\n        this::textStyleContainer.methods.getServices(),\n      )\n    },\n    getTextStyleTarget () {\n      return {\n        getText: () => this.$latStyleContainer?.getLatLabelStyle(),\n        setText: style => this.$latStyleContainer?.setLatLabelStyle(style),\n      }\n    },\n  },\n}\n","<script>\n  import { olCmp, stubVNode, textStyleContainer } from '../../mixins'\n  import { dumpTextStyle } from '../../ol-ext'\n  import { clonePlainObject, isEqual, mergeDescriptors, stubObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleLatStyleAdapter',\n    mixins: [\n      stubVNode,\n      textStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n    },\n    watch: {\n      text: {\n        deep: true,\n        handler (value, prev) {\n          if (!isEqual(value, prev)) return\n\n          this.$emit('update:text', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $latStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.latStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n        )\n      },\n      getTextStyleTarget () {\n        return {\n          getText: () => this.$latStyleContainer?.getLatLabelStyle(),\n          setText: style => this.$latStyleContainer?.setLatLabelStyle(style),\n        }\n      },\n    },\n  }\n</script>\n","\nimport { olCmp, stubVNode, textStyleContainer } from '../../mixins'\nimport { dumpTextStyle } from '../../ol-ext'\nimport { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\nexport default {\n  name: 'VlLayerGraticuleLonStyleAdapter',\n  mixins: [\n    stubVNode,\n    textStyleContainer,\n    olCmp,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  computed: {\n    text () {\n      if (!(this.rev && this.$text)) return\n\n      return dumpTextStyle(this.$text)\n    },\n  },\n  watch: {\n    text: {\n      deep: true,\n      handler (value, prev) {\n        if (!isEqual(value, prev)) return\n\n        this.$emit('update:text', value && clonePlainObject(value))\n      },\n    },\n  },\n  created () {\n    Object.defineProperties(this, {\n      $lonStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.lonStyleContainer,\n      },\n    })\n  },\n  methods: {\n    createOlObject () {\n      const obj = stubObject()\n      obj.id = this.currentId\n\n      return obj\n    },\n    getServices () {\n      return mergeDescriptors(\n        this::olCmp.methods.getServices(),\n        this::textStyleContainer.methods.getServices(),\n      )\n    },\n    getTextStyleTarget () {\n      return {\n        getText: () => this.$lonStyleContainer?.getLonLabelStyle(),\n        setText: style => this.$lonStyleContainer?.setLonLabelStyle(style),\n      }\n    },\n  },\n}\n","<script>\n  import { olCmp, stubVNode, textStyleContainer } from '../../mixins'\n  import { dumpTextStyle } from '../../ol-ext'\n  import { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleLonStyleAdapter',\n    mixins: [\n      stubVNode,\n      textStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      text () {\n        if (!(this.rev && this.$text)) return\n\n        return dumpTextStyle(this.$text)\n      },\n    },\n    watch: {\n      text: {\n        deep: true,\n        handler (value, prev) {\n          if (!isEqual(value, prev)) return\n\n          this.$emit('update:text', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $lonStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.lonStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::textStyleContainer.methods.getServices(),\n        )\n      },\n      getTextStyleTarget () {\n        return {\n          getText: () => this.$lonStyleContainer?.getLonLabelStyle(),\n          setText: style => this.$lonStyleContainer?.setLonLabelStyle(style),\n        }\n      },\n    },\n  }\n</script>\n","\nimport { olCmp, stubVNode, strokeStyleContainer } from '../../mixins'\nimport { dumpStrokeStyle } from '../../ol-ext'\nimport { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\nexport default {\n  name: 'VlLayerGraticuleStrokeStyleAdapter',\n  mixins: [\n    stubVNode,\n    strokeStyleContainer,\n    olCmp,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  computed: {\n    stroke () {\n      if (!(this.rev && this.$stroke)) return\n\n      return dumpStrokeStyle(this.$stroke)\n    },\n  },\n  watch: {\n    stroke: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:stroke', value && clonePlainObject(value))\n      },\n    },\n  },\n  created () {\n    Object.defineProperties(this, {\n      $strokeStyleContainer: {\n        enumerable: true,\n        get: () => this.$services?.strokeStyleContainer,\n      },\n    })\n  },\n  methods: {\n    createOlObject () {\n      const obj = stubObject()\n      obj.id = this.currentId\n\n      return obj\n    },\n    getServices () {\n      return mergeDescriptors(\n        this::olCmp.methods.getServices(),\n        this::strokeStyleContainer.methods.getServices(),\n      )\n    },\n    getStrokeStyleTarget () {\n      return {\n        setStroke: style => this.$strokeStyleContainer.setStrokeStyle(style),\n        getStroke: () => this.$strokeStyleContainer.getStrokeStyle(),\n      }\n    },\n  },\n}\n","<script>\n  import { olCmp, stubVNode, strokeStyleContainer } from '../../mixins'\n  import { dumpStrokeStyle } from '../../ol-ext'\n  import { stubObject, mergeDescriptors, isEqual, clonePlainObject } from '../../utils'\n\n  export default {\n    name: 'VlLayerGraticuleStrokeStyleAdapter',\n    mixins: [\n      stubVNode,\n      strokeStyleContainer,\n      olCmp,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    computed: {\n      stroke () {\n        if (!(this.rev && this.$stroke)) return\n\n        return dumpStrokeStyle(this.$stroke)\n      },\n    },\n    watch: {\n      stroke: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:stroke', value && clonePlainObject(value))\n        },\n      },\n    },\n    created () {\n      Object.defineProperties(this, {\n        $strokeStyleContainer: {\n          enumerable: true,\n          get: () => this.$services?.strokeStyleContainer,\n        },\n      })\n    },\n    methods: {\n      createOlObject () {\n        const obj = stubObject()\n        obj.id = this.currentId\n\n        return obj\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::strokeStyleContainer.methods.getServices(),\n        )\n      },\n      getStrokeStyleTarget () {\n        return {\n          setStroke: style => this.$strokeStyleContainer.setStrokeStyle(style),\n          getStroke: () => this.$strokeStyleContainer.getStrokeStyle(),\n        }\n      },\n    },\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GraticuleLayer from 'ol/layer/Graticule'\nimport { Stroke, Text } from 'ol/style'\nimport { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\nimport { dumpStrokeStyle, dumpTextStyle } from '../../ol-ext'\nimport { assert, clonePlainObject, coalesce, isEqual, map, mergeDescriptors } from '../../utils'\nimport { FillStyle, StrokeStyle, TextStyle } from '../style'\nimport LatStyle from './lat-style.vue'\nimport LonStyle from './lon-style.vue'\nimport GStrokeStyle from './stroke-style.vue'\n\nexport default {\n  name: 'VlLayerGraticule',\n  components: {\n    LonStyle,\n    LatStyle,\n    GStrokeStyle,\n    TextStyle,\n    FillStyle,\n    StrokeStyle,\n  },\n  mixins: [\n    vectorLayer,\n  ],\n  props: {\n    // ol/layer/Graticule\n    maxLines: {\n      type: Number,\n      default: 100,\n    },\n    targetSize: {\n      type: Number,\n      default: 100,\n    },\n    showLabels: {\n      type: Boolean,\n      default: false,\n    },\n    lonLabelFormatter: Function,\n    latLabelFormatter: Function,\n    lonLabelPosition: {\n      type: Number,\n      default: 0,\n    },\n    latLabelPosition: {\n      type: Number,\n      default: 1,\n    },\n    intervals: {\n      type: Array,\n      default: () => [90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001],\n    },\n    wrapX: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  computed: {\n    inputIntervals () {\n      return this.intervals?.slice()\n    },\n    meridians () {\n      if (!this.rev) return []\n\n      return map(this.getMeridians(), geom => this.writeGeometryInDataProj(geom))\n    },\n    parallels () {\n      if (!this.rev) return []\n\n      return map(this.getParallels(), geom => this.writeGeometryInDataProj(geom))\n    },\n    lonLabelStyle () {\n      if (!(this.rev && this.$lonLabelStyle)) return\n\n      return dumpTextStyle(this.$lonLabelStyle)\n    },\n    latLabelStyle () {\n      if (!(this.rev && this.$latLabelStyle)) return\n\n      return dumpTextStyle(this.$latLabelStyle)\n    },\n    strokeStyle () {\n      if (!(this.rev && this.$strokeStyle)) return\n\n      return dumpStrokeStyle(this.$strokeStyle)\n    },\n  },\n  watch: {\n    meridians: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:meridians', clonePlainObject(value))\n      },\n    },\n    parallels: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:parallels', clonePlainObject(value))\n      },\n    },\n    lonLabelStyle: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:lonLabelStyle', value && clonePlainObject(value))\n      },\n    },\n    latLabelStyle: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:latLabelStyle', value && clonePlainObject(value))\n      },\n    },\n    strokeStyle: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:strokeStyle', value && clonePlainObject(value))\n      },\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'maxLines',\n      'targetSize',\n      'showLabels',\n      'lonLabelFormatter',\n      'latLabelFormatter',\n      'lonLabelPosition',\n      'latLabelPosition',\n      'inputIntervals',\n      'wrapX',\n    ], [\n      'inputIntervals',\n    ]),\n  },\n  created () {\n    this._lonLabelStyle = undefined\n    this._lonLabelStyleVm = undefined\n    this._latLabelStyle = undefined\n    this._latLabelStyleVm = undefined\n    this._strokeStyle = undefined\n    this._strokeStyleVm = undefined\n\n    Object.defineProperties(this, {\n      $lonLabelStyle: {\n        enumerable: true,\n        get: this.getLonLabelStyle,\n      },\n      $lonLabelStyleVm: {\n        enumerable: true,\n        get: this.getLonLabelStyleVm,\n      },\n      $latLabelStyle: {\n        enumerable: true,\n        get: this.getLatLabelStyle,\n      },\n      $latLabelStyleVm: {\n        enumerable: true,\n        get: this.getLatLabelStyleVm,\n      },\n      $strokeStyle: {\n        enumerable: true,\n        get: this.getStrokeStyle,\n      },\n      $strokeStyleVm: {\n        enumerable: true,\n        get: this.getStrokeStyleVm,\n      },\n    })\n  },\n  methods: {\n    createLayer () {\n      return new GraticuleLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Layer\n        render: this.render,\n        // ol/layer/Vector\n        renderOrder: this.renderOrder,\n        renderBuffer: this.renderBuffer,\n        declutter: this.declutter,\n        updateWhileAnimating: this.updateWhileAnimating,\n        updateWhileInteracting: this.updateWhileInteracting,\n        style: this.$style,\n        // ol/layer/Graticule\n        maxLines: this.maxLines,\n        strokeStyle: this.$strokeStyle,\n        targetSize: this.targetSize,\n        showLabels: this.showLabels,\n        lonLabelFormatter: this.lonLabelFormatter,\n        latLabelFormatter: this.latLabelFormatter,\n        lonLabelPosition: this.lonLabelPosition,\n        latLabelPosition: this.latLabelPosition,\n        lonLabelStyle: this.$lonLabelStyle,\n        latLabelStyle: this.$latLabelStyle,\n        intervals: this.inputIntervals,\n        wrapX: this.wrapX,\n      })\n    },\n    getServices () {\n      const vm = this\n\n      return mergeDescriptors(\n        this::vectorLayer.methods.getServices(),\n        {\n          get lonStyleContainer () { return vm },\n          get latStyleContainer () { return vm },\n          get strokeStyleContainer () { return vm },\n        },\n      )\n    },\n    getMeridians () {\n      return coalesce(this.$layer?.getMeridians(), [])\n    },\n    getParallels () {\n      return coalesce(this.$layer?.getParallels(), [])\n    },\n    getLonLabelStyle () {\n      return this._lonLabelStyle\n    },\n    getLonLabelStyleVm () {\n      return this._lonLabelStyleVm\n    },\n    setLonLabelStyle (style) {\n      style = style?.$style || style\n      style || (style = undefined)\n      assert(!style || style instanceof Text, 'Invalid lon label style')\n\n      if (style === this._lonLabelStyle) return\n\n      this._lonLabelStyle = style\n      this._lonLabelStyleVm = style?.vm && style?.vm[0]\n\n      if (process.env.VUELAYERS_DEBUG) {\n        this.$logger.log('lonLabelStyle changed, scheduling recreate...')\n      }\n\n      this.scheduleRecreate()\n    },\n    getLatLabelStyle () {\n      return this._latLabelStyle\n    },\n    getLatLabelStyleVm () {\n      return this._latLabelStyleVm\n    },\n    setLatLabelStyle (style) {\n      style = style?.$style || style\n      style || (style = undefined)\n      assert(!style || style instanceof Text, 'Invalid lat label style')\n\n      if (style === this._latLabelStyle) return\n\n      this._latLabelStyle = style\n      this._latLabelStyleVm = style?.vm && style?.vm[0]\n\n      if (process.env.VUELAYERS_DEBUG) {\n        this.$logger.log('latLabelStyle changed, scheduling recreate...')\n      }\n\n      this.scheduleRecreate()\n    },\n    getStrokeStyle () {\n      return this._strokeStyle\n    },\n    getStrokeStyleVm () {\n      return this._strokeStyleVm\n    },\n    setStrokeStyle (style) {\n      style = style?.$style\n      style || (style = undefined)\n      assert(!style || style instanceof Stroke, 'Invalid stroke style')\n\n      if (style === this._strokeStyle) return\n\n      this._strokeStyle = style\n      this._strokeStyleVm = style?.vm && style?.vm[0]\n\n      if (process.env.VUELAYERS_DEBUG) {\n        this.$logger.log('strokeStyle changed, scheduling recreate...')\n      }\n\n      this.scheduleRecreate()\n    },\n  },\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <LonStyle :id=\"'vl-' + currentId + '-lon-style'\">\n      <slot name=\"lon\">\n        <TextStyle\n          :id=\"'vl-' + currentId + '-default-text-style'\"\n          font=\"'12px sans-serif'\"\n          text-baseline=\"bottom\">\n          <FillStyle\n            :id=\"'vl-' + currentId + '-default-fill-style'\"\n            color=\"rgba(0,0,0,1)\" />\n          <StrokeStyle\n            :id=\"'vl-' + currentId + '-default-stroke-style'\"\n            color=\"rgba(255,255,255,1)\"\n            :width=\"3\" />\n        </TextStyle>\n      </slot>\n    </LonStyle>\n    <LatStyle :id=\"'vl-' + currentId + '-lat-style'\">\n      <slot name=\"lat\">\n        <TextStyle\n          :id=\"'vl-' + currentId + '-default-text-style'\"\n          font=\"'12px Calibri,sans-serif'\"\n          text-baseline=\"bottom\">\n          <FillStyle\n            :id=\"'vl-' + currentId + '-default-fill-style'\"\n            color=\"rgba(0,0,0,1)\" />\n          <StrokeStyle\n            :id=\"'vl-' + currentId + '-default-stroke-style'\"\n            color=\"rgba(255,255,255,1)\"\n            :width=\"3\" />\n        </TextStyle>\n      </slot>\n    </LatStyle>\n    <GStrokeStyle :id=\"'vl-' + currentId + '-graticule-style'\">\n      <slot name=\"stroke\">\n        <StrokeStyle\n          :id=\"'vl-' + currentId + '-default-graticule-stroke-style'\"\n          color=\"rgba(0,0,0,0.2)\" />\n      </slot>\n    </GStrokeStyle>\n  </i>\n</template>\n\n<script>\n  import GraticuleLayer from 'ol/layer/Graticule'\n  import { Stroke, Text } from 'ol/style'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { dumpStrokeStyle, dumpTextStyle } from '../../ol-ext'\n  import { assert, clonePlainObject, coalesce, isEqual, map, mergeDescriptors } from '../../utils'\n  import { FillStyle, StrokeStyle, TextStyle } from '../style'\n  import LatStyle from './lat-style.vue'\n  import LonStyle from './lon-style.vue'\n  import GStrokeStyle from './stroke-style.vue'\n\n  export default {\n    name: 'VlLayerGraticule',\n    components: {\n      LonStyle,\n      LatStyle,\n      GStrokeStyle,\n      TextStyle,\n      FillStyle,\n      StrokeStyle,\n    },\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      // ol/layer/Graticule\n      maxLines: {\n        type: Number,\n        default: 100,\n      },\n      targetSize: {\n        type: Number,\n        default: 100,\n      },\n      showLabels: {\n        type: Boolean,\n        default: false,\n      },\n      lonLabelFormatter: Function,\n      latLabelFormatter: Function,\n      lonLabelPosition: {\n        type: Number,\n        default: 0,\n      },\n      latLabelPosition: {\n        type: Number,\n        default: 1,\n      },\n      intervals: {\n        type: Array,\n        default: () => [90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001],\n      },\n      wrapX: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    computed: {\n      inputIntervals () {\n        return this.intervals?.slice()\n      },\n      meridians () {\n        if (!this.rev) return []\n\n        return map(this.getMeridians(), geom => this.writeGeometryInDataProj(geom))\n      },\n      parallels () {\n        if (!this.rev) return []\n\n        return map(this.getParallels(), geom => this.writeGeometryInDataProj(geom))\n      },\n      lonLabelStyle () {\n        if (!(this.rev && this.$lonLabelStyle)) return\n\n        return dumpTextStyle(this.$lonLabelStyle)\n      },\n      latLabelStyle () {\n        if (!(this.rev && this.$latLabelStyle)) return\n\n        return dumpTextStyle(this.$latLabelStyle)\n      },\n      strokeStyle () {\n        if (!(this.rev && this.$strokeStyle)) return\n\n        return dumpStrokeStyle(this.$strokeStyle)\n      },\n    },\n    watch: {\n      meridians: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:meridians', clonePlainObject(value))\n        },\n      },\n      parallels: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:parallels', clonePlainObject(value))\n        },\n      },\n      lonLabelStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:lonLabelStyle', value && clonePlainObject(value))\n        },\n      },\n      latLabelStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:latLabelStyle', value && clonePlainObject(value))\n        },\n      },\n      strokeStyle: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:strokeStyle', value && clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'maxLines',\n        'targetSize',\n        'showLabels',\n        'lonLabelFormatter',\n        'latLabelFormatter',\n        'lonLabelPosition',\n        'latLabelPosition',\n        'inputIntervals',\n        'wrapX',\n      ], [\n        'inputIntervals',\n      ]),\n    },\n    created () {\n      this._lonLabelStyle = undefined\n      this._lonLabelStyleVm = undefined\n      this._latLabelStyle = undefined\n      this._latLabelStyleVm = undefined\n      this._strokeStyle = undefined\n      this._strokeStyleVm = undefined\n\n      Object.defineProperties(this, {\n        $lonLabelStyle: {\n          enumerable: true,\n          get: this.getLonLabelStyle,\n        },\n        $lonLabelStyleVm: {\n          enumerable: true,\n          get: this.getLonLabelStyleVm,\n        },\n        $latLabelStyle: {\n          enumerable: true,\n          get: this.getLatLabelStyle,\n        },\n        $latLabelStyleVm: {\n          enumerable: true,\n          get: this.getLatLabelStyleVm,\n        },\n        $strokeStyle: {\n          enumerable: true,\n          get: this.getStrokeStyle,\n        },\n        $strokeStyleVm: {\n          enumerable: true,\n          get: this.getStrokeStyleVm,\n        },\n      })\n    },\n    methods: {\n      createLayer () {\n        return new GraticuleLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          // ol/layer/Vector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/Graticule\n          maxLines: this.maxLines,\n          strokeStyle: this.$strokeStyle,\n          targetSize: this.targetSize,\n          showLabels: this.showLabels,\n          lonLabelFormatter: this.lonLabelFormatter,\n          latLabelFormatter: this.latLabelFormatter,\n          lonLabelPosition: this.lonLabelPosition,\n          latLabelPosition: this.latLabelPosition,\n          lonLabelStyle: this.$lonLabelStyle,\n          latLabelStyle: this.$latLabelStyle,\n          intervals: this.inputIntervals,\n          wrapX: this.wrapX,\n        })\n      },\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::vectorLayer.methods.getServices(),\n          {\n            get lonStyleContainer () { return vm },\n            get latStyleContainer () { return vm },\n            get strokeStyleContainer () { return vm },\n          },\n        )\n      },\n      getMeridians () {\n        return coalesce(this.$layer?.getMeridians(), [])\n      },\n      getParallels () {\n        return coalesce(this.$layer?.getParallels(), [])\n      },\n      getLonLabelStyle () {\n        return this._lonLabelStyle\n      },\n      getLonLabelStyleVm () {\n        return this._lonLabelStyleVm\n      },\n      setLonLabelStyle (style) {\n        style = style?.$style || style\n        style || (style = undefined)\n        assert(!style || style instanceof Text, 'Invalid lon label style')\n\n        if (style === this._lonLabelStyle) return\n\n        this._lonLabelStyle = style\n        this._lonLabelStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('lonLabelStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n      getLatLabelStyle () {\n        return this._latLabelStyle\n      },\n      getLatLabelStyleVm () {\n        return this._latLabelStyleVm\n      },\n      setLatLabelStyle (style) {\n        style = style?.$style || style\n        style || (style = undefined)\n        assert(!style || style instanceof Text, 'Invalid lat label style')\n\n        if (style === this._latLabelStyle) return\n\n        this._latLabelStyle = style\n        this._latLabelStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('latLabelStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n      getStrokeStyle () {\n        return this._strokeStyle\n      },\n      getStrokeStyleVm () {\n        return this._strokeStyleVm\n      },\n      setStrokeStyle (style) {\n        style = style?.$style\n        style || (style = undefined)\n        assert(!style || style instanceof Stroke, 'Invalid stroke style')\n\n        if (style === this._strokeStyle) return\n\n        this._strokeStyle = style\n        this._strokeStyleVm = style?.vm && style?.vm[0]\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log('strokeStyle changed, scheduling recreate...')\n        }\n\n        this.scheduleRecreate()\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n\n  // todo remove in v0.13.x\n  Vue.component('VlGraticule', {\n    name: 'VlGraticule',\n    extends: Layer,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlGraticule component is deprecated. Use VlLayerGraticule component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { Group as GroupLayer } from 'ol/layer'\nimport { baseLayer, layersContainer } from '../../mixins'\nimport { getLayerId } from '../../ol-ext'\nimport { isEqual, map, mergeDescriptors } from '../../utils'\n\nexport default {\n  name: 'VlLayerGroup',\n  mixins: [\n    layersContainer,\n    baseLayer,\n  ],\n  computed: {\n    layers () {\n      if (!this.rev) return []\n\n      return map(this.getLayers(), layer => ({\n        id: getLayerId(layer),\n        type: layer.constructor.name,\n      }))\n    },\n  },\n  watch: {\n    layers: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:layers', value.slice())\n      },\n    },\n  },\n  methods: {\n    createLayer () {\n      return new GroupLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Group\n        layers: this.$layersCollection,\n      })\n    },\n    getServices () {\n      return mergeDescriptors(\n        this::baseLayer.methods.getServices(),\n        this::layersContainer.methods.getServices(),\n      )\n    },\n    subscribeAll () {\n      this::layersContainer.methods.subscribeAll()\n      this::baseLayer.methods.subscribeAll()\n    },\n  },\n}\n","<script>\n  import { Group as GroupLayer } from 'ol/layer'\n  import { baseLayer, layersContainer } from '../../mixins'\n  import { getLayerId } from '../../ol-ext'\n  import { isEqual, map, mergeDescriptors } from '../../utils'\n\n  export default {\n    name: 'VlLayerGroup',\n    mixins: [\n      layersContainer,\n      baseLayer,\n    ],\n    computed: {\n      layers () {\n        if (!this.rev) return []\n\n        return map(this.getLayers(), layer => ({\n          id: getLayerId(layer),\n          type: layer.constructor.name,\n        }))\n      },\n    },\n    watch: {\n      layers: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:layers', value.slice())\n        },\n      },\n    },\n    methods: {\n      createLayer () {\n        return new GroupLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Group\n          layers: this.$layersCollection,\n        })\n      },\n      getServices () {\n        return mergeDescriptors(\n          this::baseLayer.methods.getServices(),\n          this::layersContainer.methods.getServices(),\n        )\n      },\n      subscribeAll () {\n        this::layersContainer.methods.subscribeAll()\n        this::baseLayer.methods.subscribeAll()\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { Heatmap as HeatmapLayer } from 'ol/layer'\nimport { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\nimport { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\nimport { addPrefix, assert, coalesce, isArray, isEqual, isNumber } from '../../utils'\n\nexport default {\n  name: 'VlLayerHeatmap',\n  mixins: [\n    vectorLayer,\n  ],\n  props: {\n    /**\n     * @type {string[]}\n     */\n    gradient: {\n      type: Array,\n      default: () => ['#0000ff', '#00ffff', '#00ff00', '#ffff00', '#ff0000'],\n    },\n    /**\n     * @type {number}\n     */\n    radius: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * @type {number}\n     */\n    blur: {\n      type: Number,\n      default: 15,\n    },\n    /**\n     * @type {string}\n     */\n    weight: {\n      type: [String, Function],\n      default: 'weight',\n    },\n  },\n  data () {\n    return {\n      currentGradient: this.gradient.slice(),\n      currentRadius: this.radius,\n      currentBlur: this.blur,\n    }\n  },\n  computed: {\n    inputGradient () {\n      return this.gradient.slice()\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$layer) return\n\n      if (!isEqual(this.currentGradient, this.$layer.getGradient())) {\n        this.currentGradient = this.$layer.getGradient()\n      }\n      if (this.currentRadius !== this.$layer.getRadius()) {\n        this.currentRadius = this.$layer.getRadius()\n      }\n      if (this.currentBlur !== this.$layer.getBlur()) {\n        this.currentBlur = this.$layer.getBlur()\n      }\n    },\n    inputGradient (value) {\n      this.setGradient(value)\n    },\n    currentGradient: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.inputGradient)) return\n\n        this.$emit('update:gradient', value.slice())\n      },\n    },\n    radius (value) {\n      this.setRadius(value)\n    },\n    currentRadius (value) {\n      if (value === this.radius) return\n\n      this.$emit('update:radius', value)\n    },\n    blur (value) {\n      this.setBlur(value)\n    },\n    currentBlur (value) {\n      if (value === this.blur) return\n\n      this.$emit('update:blur', value)\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'weight',\n    ]),\n  },\n  methods: {\n    /**\n     * @returns {HeatmapLayer}\n     */\n    createLayer () {\n      return new HeatmapLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Layer\n        render: this.render,\n        source: this.$source,\n        // ol/layer/BaseVector\n        renderOrder: this.renderOrder,\n        renderBuffer: this.renderBuffer,\n        declutter: this.declutter,\n        updateWhileAnimating: this.updateWhileAnimating,\n        updateWhileInteracting: this.updateWhileInteracting,\n        style: this.$style,\n        // ol/layer/Heatmap\n        blur: this.currentBlur,\n        gradient: this.currentGradient,\n        radius: this.currentRadius,\n        weight: this.weight,\n      })\n    },\n    subscribeAll () {\n      this::vectorLayer.methods.subscribeAll()\n      this::subscribeToLayerEvents()\n    },\n    getBlur () {\n      return coalesce(this.$layer?.getBlur(), this.currentBlur)\n    },\n    setBlur (blur) {\n      blur = Number(blur)\n      assert(isNumber(blur), 'Invalid blur')\n\n      if (blur !== this.currentBlur) {\n        this.currentBlur = blur\n      }\n      if (this.$layer && blur !== this.$layer.getBlur()) {\n        this.$layer.setBlur(blur)\n      }\n    },\n    getGradient () {\n      return coalesce(this.$layer?.getGradient(), this.currentGradient)\n    },\n    setGradient (gradient) {\n      assert(isArray(gradient), 'Invalid gradient')\n      gradient = gradient.slice()\n\n      if (!isEqual(gradient, this.currentGradient)) {\n        this.currentGradient = gradient\n      }\n      if (this.$layer && !isEqual(gradient, this.$layer.getGradient())) {\n        this.$layer.setGradient(gradient)\n      }\n    },\n    getRadius () {\n      return coalesce(this.$layer?.getRadius(), this.currentRadius)\n    },\n    setRadius (radius) {\n      radius = Number(radius)\n      assert(isNumber(radius), 'Invalid radius')\n\n      if (radius !== this.currentRadius) {\n        this.currentRadius = radius\n      }\n      if (this.$layer && radius !== this.$layer.getRadius()) {\n        this.$layer.setRadius(radius)\n      }\n    },\n  },\n}\n\nfunction subscribeToLayerEvents () {\n  const setterKey = addPrefix('set')\n  const propChanges = obsFromOlChangeEvent(this.$layer, [\n    'blur',\n    'gradient',\n    'radius',\n  ], true, evt => ({\n    ...evt,\n    setter: this[setterKey(evt.prop)],\n  }))\n  this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n}\n","<script>\n  import { Heatmap as HeatmapLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, assert, coalesce, isArray, isEqual, isNumber } from '../../utils'\n\n  export default {\n    name: 'VlLayerHeatmap',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      /**\n       * @type {string[]}\n       */\n      gradient: {\n        type: Array,\n        default: () => ['#0000ff', '#00ffff', '#00ff00', '#ffff00', '#ff0000'],\n      },\n      /**\n       * @type {number}\n       */\n      radius: {\n        type: Number,\n        default: 8,\n      },\n      /**\n       * @type {number}\n       */\n      blur: {\n        type: Number,\n        default: 15,\n      },\n      /**\n       * @type {string}\n       */\n      weight: {\n        type: [String, Function],\n        default: 'weight',\n      },\n    },\n    data () {\n      return {\n        currentGradient: this.gradient.slice(),\n        currentRadius: this.radius,\n        currentBlur: this.blur,\n      }\n    },\n    computed: {\n      inputGradient () {\n        return this.gradient.slice()\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$layer) return\n\n        if (!isEqual(this.currentGradient, this.$layer.getGradient())) {\n          this.currentGradient = this.$layer.getGradient()\n        }\n        if (this.currentRadius !== this.$layer.getRadius()) {\n          this.currentRadius = this.$layer.getRadius()\n        }\n        if (this.currentBlur !== this.$layer.getBlur()) {\n          this.currentBlur = this.$layer.getBlur()\n        }\n      },\n      inputGradient (value) {\n        this.setGradient(value)\n      },\n      currentGradient: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputGradient)) return\n\n          this.$emit('update:gradient', value.slice())\n        },\n      },\n      radius (value) {\n        this.setRadius(value)\n      },\n      currentRadius (value) {\n        if (value === this.radius) return\n\n        this.$emit('update:radius', value)\n      },\n      blur (value) {\n        this.setBlur(value)\n      },\n      currentBlur (value) {\n        if (value === this.blur) return\n\n        this.$emit('update:blur', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'weight',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {HeatmapLayer}\n       */\n      createLayer () {\n        return new HeatmapLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/Heatmap\n          blur: this.currentBlur,\n          gradient: this.currentGradient,\n          radius: this.currentRadius,\n          weight: this.weight,\n        })\n      },\n      subscribeAll () {\n        this::vectorLayer.methods.subscribeAll()\n        this::subscribeToLayerEvents()\n      },\n      getBlur () {\n        return coalesce(this.$layer?.getBlur(), this.currentBlur)\n      },\n      setBlur (blur) {\n        blur = Number(blur)\n        assert(isNumber(blur), 'Invalid blur')\n\n        if (blur !== this.currentBlur) {\n          this.currentBlur = blur\n        }\n        if (this.$layer && blur !== this.$layer.getBlur()) {\n          this.$layer.setBlur(blur)\n        }\n      },\n      getGradient () {\n        return coalesce(this.$layer?.getGradient(), this.currentGradient)\n      },\n      setGradient (gradient) {\n        assert(isArray(gradient), 'Invalid gradient')\n        gradient = gradient.slice()\n\n        if (!isEqual(gradient, this.currentGradient)) {\n          this.currentGradient = gradient\n        }\n        if (this.$layer && !isEqual(gradient, this.$layer.getGradient())) {\n          this.$layer.setGradient(gradient)\n        }\n      },\n      getRadius () {\n        return coalesce(this.$layer?.getRadius(), this.currentRadius)\n      },\n      setRadius (radius) {\n        radius = Number(radius)\n        assert(isNumber(radius), 'Invalid radius')\n\n        if (radius !== this.currentRadius) {\n          this.currentRadius = radius\n        }\n        if (this.$layer && radius !== this.$layer.getRadius()) {\n          this.$layer.setRadius(radius)\n        }\n      },\n    },\n  }\n\n  function subscribeToLayerEvents () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$layer, [\n      'blur',\n      'gradient',\n      'radius',\n    ], true, evt => ({\n      ...evt,\n      setter: this[setterKey(evt.prop)],\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { ImageArcGISRest as ImageArcGISRestSource } from 'ol/source'\nimport { arcgisSource, imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\nimport { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\nconst validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\nexport default {\n  name: 'VlSourceImageArcgisRest',\n  mixins: [\n    arcgisSource,\n    imageSource,\n  ],\n  props: {\n    // ol/source/ImageArcGISRest\n    crossOrigin: String,\n    imageLoadFunction: Function,\n    /**\n     * @deprecated\n     * @todo remove later\n     */\n    imageLoadFunc: Function,\n    imageSmoothing: {\n      type: Boolean,\n      default: true,\n    },\n    ratio: {\n      type: Number,\n      default: 1.5,\n    },\n    url: {\n      type: String,\n      required: true,\n      validator: validateUrl,\n    },\n  },\n  data () {\n    return {\n      currentImageLoadFunction: this.imageLoadFunction,\n      currentUrl: this.url,\n    }\n  },\n  computed: {\n    inputImageLoadFunction () {\n      return this.imageLoadFunction || this.imageLoadFunc\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$source) return\n\n      if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n        this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n      }\n      if (this.currentUrl !== this.$source.getUrl()) {\n        this.currentUrl = this.$source.getUrl()\n      }\n    },\n    url (value) {\n      this.setUrl(value)\n    },\n    currentUrl (value) {\n      if (value === this.url) return\n\n      this.$emit('update:url', value)\n    },\n    inputImageLoadFunction (value) {\n      this.setImageLoadFunction(value)\n    },\n    currentImageLoadFunction (value) {\n      if (value === this.imageLoadFunction) return\n\n      this.$emit('update:imageLoadFunction', value)\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'crossOrigin',\n      'imageSmoothing',\n      'ratio',\n    ]),\n  },\n  created () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.imageLoadFunc) {\n        this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n      }\n    }\n\n    this.currentImageLoadFunction = this.inputImageLoadFunction\n  },\n  updated () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.imageLoadFunc) {\n        this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n      }\n    }\n  },\n  methods: {\n    createSource () {\n      return new ImageArcGISRestSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        projection: this.resolvedDataProjection,\n        // ol/source/Image\n        resolutions: this.inputResolutions,\n        // ol/source/ImageArcGISRest\n        crossOrigin: this.crossOrigin,\n        hidpi: this.hidpi,\n        imageLoadFunction: this.currentImageLoadFunction,\n        imageSmoothing: this.imageSmoothing,\n        params: this.currentParams,\n        ratio: this.ratio,\n        url: this.currentUrl,\n      })\n    },\n    getUrl () {\n      return coalesce(this.$source?.getUrl(), this.currentUrl)\n    },\n    setUrl (url) {\n      assert(validateUrl(url), 'Invalid url')\n\n      if (url !== this.currentUrl) {\n        this.currentUrl = url\n      }\n      if (this.$source && url !== this.$source.getUrl()) {\n        this.$source.setUrl(url)\n      }\n    },\n    getImageLoadFunction () {\n      return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n    },\n    setImageLoadFunction (func) {\n      assert(isFunction(func), 'Invalid image load function')\n\n      if (func !== this.currentImageLoadFunction) {\n        this.currentImageLoadFunction = func\n      }\n      if (this.$source && func !== this.$source.getImageLoadFunction()) {\n        this.$source.setImageLoadFunction(func)\n      }\n    },\n    stateChanged: noop,\n  },\n}\n","<script>\n  import { ImageArcGISRest as ImageArcGISRestSource } from 'ol/source'\n  import { arcgisSource, imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\n  const validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\n  export default {\n    name: 'VlSourceImageArcgisRest',\n    mixins: [\n      arcgisSource,\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageArcGISRest\n      crossOrigin: String,\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imageLoadFunc: Function,\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      ratio: {\n        type: Number,\n        default: 1.5,\n      },\n      url: {\n        type: String,\n        required: true,\n        validator: validateUrl,\n      },\n    },\n    data () {\n      return {\n        currentImageLoadFunction: this.imageLoadFunction,\n        currentUrl: this.url,\n      }\n    },\n    computed: {\n      inputImageLoadFunction () {\n        return this.imageLoadFunction || this.imageLoadFunc\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n          this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n        }\n        if (this.currentUrl !== this.$source.getUrl()) {\n          this.currentUrl = this.$source.getUrl()\n        }\n      },\n      url (value) {\n        this.setUrl(value)\n      },\n      currentUrl (value) {\n        if (value === this.url) return\n\n        this.$emit('update:url', value)\n      },\n      inputImageLoadFunction (value) {\n        this.setImageLoadFunction(value)\n      },\n      currentImageLoadFunction (value) {\n        if (value === this.imageLoadFunction) return\n\n        this.$emit('update:imageLoadFunction', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'imageSmoothing',\n        'ratio',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n\n      this.currentImageLoadFunction = this.inputImageLoadFunction\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ImageArcGISRestSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/Image\n          resolutions: this.inputResolutions,\n          // ol/source/ImageArcGISRest\n          crossOrigin: this.crossOrigin,\n          hidpi: this.hidpi,\n          imageLoadFunction: this.currentImageLoadFunction,\n          imageSmoothing: this.imageSmoothing,\n          params: this.currentParams,\n          ratio: this.ratio,\n          url: this.currentUrl,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.currentUrl)\n      },\n      setUrl (url) {\n        assert(validateUrl(url), 'Invalid url')\n\n        if (url !== this.currentUrl) {\n          this.currentUrl = url\n        }\n        if (this.$source && url !== this.$source.getUrl()) {\n          this.$source.setUrl(url)\n        }\n      },\n      getImageLoadFunction () {\n        return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n      },\n      setImageLoadFunction (func) {\n        assert(isFunction(func), 'Invalid image load function')\n\n        if (func !== this.currentImageLoadFunction) {\n          this.currentImageLoadFunction = func\n        }\n        if (this.$source && func !== this.$source.getImageLoadFunction()) {\n          this.$source.setImageLoadFunction(func)\n        }\n      },\n      stateChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { Image as ImageLayer } from 'ol/layer'\nimport { imageLayer } from '../../mixins'\n\n/**\n * Layer for server-rendered images that are available for arbitrary extents and resolutions.\n */\nexport default {\n  name: 'VlLayerImage',\n  mixins: [\n    imageLayer,\n  ],\n  methods: {\n    /**\n     * @return {Image}\n     * @protected\n     */\n    createLayer () {\n      return new ImageLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Layer\n        render: this.render,\n        source: this.$source,\n      })\n    },\n  },\n}\n","<script>\n  import { Image as ImageLayer } from 'ol/layer'\n  import { imageLayer } from '../../mixins'\n\n  /**\n   * Layer for server-rendered images that are available for arbitrary extents and resolutions.\n   */\n  export default {\n    name: 'VlLayerImage',\n    mixins: [\n      imageLayer,\n    ],\n    methods: {\n      /**\n       * @return {Image}\n       * @protected\n       */\n      createLayer () {\n        return new ImageLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { ImageStatic as ImageStaticSource } from 'ol/source'\nimport { imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\nimport { coalesce, isEmpty, negate, noop } from '../../utils'\n\n/**\n * A layer source for displaying a single, static image.\n */\nexport default {\n  name: 'VlSourceImageStatic',\n  mixins: [\n    imageSource,\n  ],\n  props: {\n    // ol/source/ImageStatic\n    crossOrigin: String,\n    /**\n     * Image extent in the source projection.\n     * @type {number[]}\n     */\n    imageExtent: {\n      type: Array,\n      // required: true,\n      validator: value => value.length === 4,\n    },\n    /**\n     * @deprecated\n     * @todo remove later\n     */\n    imgExtent: {\n      type: Array,\n      validator: value => value.length === 4,\n    },\n    /**\n     * @deprecated Use `imgExtent` instead.\n     * @todo remove in v0.13.x\n     */\n    extent: {\n      type: Array,\n      validator: value => value.length === 4,\n    },\n    /**\n     * Optional function to load an image given a URL.\n     * @type {function|undefined}\n     */\n    imageLoadFunction: Function,\n    /**\n     * @deprecated\n     * @todo remove later\n     */\n    imgLoadFunc: Function,\n    /**\n     * @deprecated Use `imgLoadFunc` instead.\n     * @todo remove in v0.13.x\n     */\n    loadFunc: Function,\n    /**\n     * Image size in pixels.\n     * @type {number[]}\n     */\n    imageSize: {\n      type: Array,\n      validator: value => value.length === 2,\n    },\n    /**\n     * @deprecated\n     * @todo remove later\n     */\n    imgSize: {\n      type: Array,\n      validator: value => value.length === 2,\n    },\n    /**\n     * @deprecated Use `imgSize` instead.\n     * @todo remove in v0.13.x\n     */\n    size: {\n      type: Array,\n      validator: value => value.length === 2,\n    },\n    /**\n     * @type {boolean}\n     */\n    imageSmoothing: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Image URL.\n     * @type {string}\n     */\n    url: {\n      type: String,\n      required: true,\n      validator: /*#__PURE__*/negate(isEmpty),\n    },\n  },\n  computed: {\n    inputImageExtent () {\n      return coalesce(this.imageExtent, this.imgExtent, this.extent)?.slice()\n    },\n    inputImageLoadFunction () {\n      return coalesce(this.imageLoadFunction, this.imgLoadFunc, this.loadFunc)\n    },\n    inputImageSize () {\n      return coalesce(this.imageSize, this.imgSize, this.size)?.slice()\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'crossOrigin',\n      'inputImageExtent',\n      'inputImageLoadFunction',\n      'inputImageSize',\n      'imageSmoothing',\n      'url',\n    ], [\n      'inputImageExtent',\n      'inputImageSize',\n    ]),\n  },\n  created () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.extent) {\n        this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n      }\n      if (this.imgExtent) {\n        this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n      }\n      if (this.loadFunc) {\n        this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n      }\n      if (this.imgLoadFunc) {\n        this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n      }\n      if (this.size) {\n        this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n      }\n      if (this.imgSize) {\n        this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n      }\n    }\n  },\n  updated () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.extent) {\n        this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n      }\n      if (this.imgExtent) {\n        this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n      }\n      if (this.loadFunc) {\n        this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n      }\n      if (this.imgLoadFunc) {\n        this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n      }\n      if (this.size) {\n        this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n      }\n      if (this.imgSize) {\n        this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n      }\n    }\n  },\n  methods: {\n    /**\n     * @return {ImageStatic}\n     * @protected\n     */\n    createSource () {\n      return new ImageStaticSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        projection: this.resolvedDataProjection,\n        // ol/source/ImageStatic\n        crossOrigin: this.crossOrigin,\n        imageExtent: this.inputImageExtent,\n        imageLoadFunction: this.inputImageLoadFunction,\n        imageSize: this.inputImageSize,\n        imageSmoothing: this.imageSmoothing,\n        url: this.url,\n      })\n    },\n    getUrl () {\n      return coalesce(this.$source?.getUrl(), this.url)\n    },\n    getImageExtent () {\n      return coalesce(this.$source?.getImageExtent(), this.inputImageExtent)\n    },\n    stateChanged: noop,\n  },\n}\n","<script>\n  import { ImageStatic as ImageStaticSource } from 'ol/source'\n  import { imageSource, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { coalesce, isEmpty, negate, noop } from '../../utils'\n\n  /**\n   * A layer source for displaying a single, static image.\n   */\n  export default {\n    name: 'VlSourceImageStatic',\n    mixins: [\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageStatic\n      crossOrigin: String,\n      /**\n       * Image extent in the source projection.\n       * @type {number[]}\n       */\n      imageExtent: {\n        type: Array,\n        // required: true,\n        validator: value => value.length === 4,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgExtent: {\n        type: Array,\n        validator: value => value.length === 4,\n      },\n      /**\n       * @deprecated Use `imgExtent` instead.\n       * @todo remove in v0.13.x\n       */\n      extent: {\n        type: Array,\n        validator: value => value.length === 4,\n      },\n      /**\n       * Optional function to load an image given a URL.\n       * @type {function|undefined}\n       */\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgLoadFunc: Function,\n      /**\n       * @deprecated Use `imgLoadFunc` instead.\n       * @todo remove in v0.13.x\n       */\n      loadFunc: Function,\n      /**\n       * Image size in pixels.\n       * @type {number[]}\n       */\n      imageSize: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imgSize: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @deprecated Use `imgSize` instead.\n       * @todo remove in v0.13.x\n       */\n      size: {\n        type: Array,\n        validator: value => value.length === 2,\n      },\n      /**\n       * @type {boolean}\n       */\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Image URL.\n       * @type {string}\n       */\n      url: {\n        type: String,\n        required: true,\n        validator: /*#__PURE__*/negate(isEmpty),\n      },\n    },\n    computed: {\n      inputImageExtent () {\n        return coalesce(this.imageExtent, this.imgExtent, this.extent)?.slice()\n      },\n      inputImageLoadFunction () {\n        return coalesce(this.imageLoadFunction, this.imgLoadFunc, this.loadFunc)\n      },\n      inputImageSize () {\n        return coalesce(this.imageSize, this.imgSize, this.size)?.slice()\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'inputImageExtent',\n        'inputImageLoadFunction',\n        'inputImageSize',\n        'imageSmoothing',\n        'url',\n      ], [\n        'inputImageExtent',\n        'inputImageSize',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.extent) {\n          this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.imgExtent) {\n          this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.loadFunc) {\n          this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.imgLoadFunc) {\n          this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.size) {\n          this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n        }\n        if (this.imgSize) {\n          this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n        }\n      }\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.extent) {\n          this.$logger.warn(\"'extent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.imgExtent) {\n          this.$logger.warn(\"'imgExtent' is deprecated. Use `imageExtent` prop instead.\")\n        }\n        if (this.loadFunc) {\n          this.$logger.warn(\"'loadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.imgLoadFunc) {\n          this.$logger.warn(\"'imgLoadFunc' is deprecated. Use `imageLoadFunction` prop instead.\")\n        }\n        if (this.size) {\n          this.$logger.warn(\"'size' is deprecated. Use `imageSize` prop instead.\")\n        }\n        if (this.imgSize) {\n          this.$logger.warn(\"'imgSize' is deprecated. Use `imageSize` prop instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {ImageStatic}\n       * @protected\n       */\n      createSource () {\n        return new ImageStaticSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/ImageStatic\n          crossOrigin: this.crossOrigin,\n          imageExtent: this.inputImageExtent,\n          imageLoadFunction: this.inputImageLoadFunction,\n          imageSize: this.inputImageSize,\n          imageSmoothing: this.imageSmoothing,\n          url: this.url,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.url)\n      },\n      getImageExtent () {\n        return coalesce(this.$source?.getImageExtent(), this.inputImageExtent)\n      },\n      stateChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { ImageWMS as ImageWMSSource } from 'ol/source'\nimport { imageSource, makeChangeOrRecreateWatchers, wmsSource } from '../../mixins'\nimport { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\nconst validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\nexport default {\n  name: 'VlSourceImageWms',\n  mixins: [\n    wmsSource,\n    imageSource,\n  ],\n  props: {\n    // ol/source/ImageArcGISRest\n    crossOrigin: String,\n    imageLoadFunction: Function,\n    /**\n     * @deprecated\n     * @todo remove later\n     */\n    imageLoadFunc: Function,\n    imageSmoothing: {\n      type: Boolean,\n      default: true,\n    },\n    ratio: {\n      type: Number,\n      default: 1.5,\n    },\n    url: {\n      type: String,\n      required: true,\n      validator: validateUrl,\n    },\n  },\n  data () {\n    return {\n      currentImageLoadFunction: this.imageLoadFunction,\n      currentUrl: this.url,\n    }\n  },\n  computed: {\n    inputImageLoadFunction () {\n      return this.imageLoadFunction || this.imageLoadFunc\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$source) return\n\n      if (this.currentUrl !== this.$source.getUrl()) {\n        this.currentUrl = this.$source.getUrl()\n      }\n      if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n        this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n      }\n    },\n    url (value) {\n      this.setUrl(value)\n    },\n    currentUrl (value) {\n      if (value === this.url) return\n\n      this.$emit('update:url', value)\n    },\n    inputImageLoadFunction (value) {\n      this.setImageLoadFunction(value)\n    },\n    currentImageLoadFunc (value) {\n      if (value === this.imageLoadFunction) return\n\n      this.$emit('update:imageLoadFunction', value)\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'crossOrigin',\n      'imageSmoothing',\n      'ratio',\n    ]),\n  },\n  created () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.imageLoadFunc) {\n        this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n      }\n    }\n\n    this.currentImageLoadFunction = this.inputImageLoadFunction\n  },\n  updated () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.imageLoadFunc) {\n        this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n      }\n    }\n  },\n  methods: {\n    createSource () {\n      return new ImageWMSSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        projection: this.resolvedDataProjection,\n        // ol/source/Image\n        resolutions: this.inputResolutions,\n        // ol/source/ImageWMS\n        crossOrigin: this.crossOrigin,\n        hidpi: this.hidpi,\n        serverType: this.serverType,\n        imageLoadFunction: this.currentImageLoadFunction,\n        imageSmoothing: this.imageSmoothing,\n        params: this.currentParams,\n        ratio: this.ratio,\n        url: this.currentUrl,\n      })\n    },\n    getUrl () {\n      return coalesce(this.$source?.getUrl(), this.currentUrl)\n    },\n    setUrl (url) {\n      assert(validateUrl(url), 'Invalid url')\n\n      if (url !== this.currentUrl) {\n        this.currentUrl = url\n      }\n      if (this.$source && url !== this.$source.getUrl()) {\n        this.$source.setUrls(url)\n      }\n    },\n    getImageLoadFunction () {\n      return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n    },\n    setImageLoadFunction (func) {\n      assert(isFunction(func), 'Invalid image load function')\n\n      if (func !== this.currentImageLoadFunction) {\n        this.currentImageLoadFunction = func\n      }\n      if (this.$source && func !== this.$source.getImageLoadFunction()) {\n        this.$source.setImageLoadFunction(func)\n      }\n    },\n    stateChanged: noop,\n  },\n}\n","<script>\n  import { ImageWMS as ImageWMSSource } from 'ol/source'\n  import { imageSource, makeChangeOrRecreateWatchers, wmsSource } from '../../mixins'\n  import { and, assert, coalesce, isEmpty, isFunction, isString, negate, noop } from '../../utils'\n\n  const validateUrl = /*#__PURE__*/and(isString, negate(isEmpty))\n\n  export default {\n    name: 'VlSourceImageWms',\n    mixins: [\n      wmsSource,\n      imageSource,\n    ],\n    props: {\n      // ol/source/ImageArcGISRest\n      crossOrigin: String,\n      imageLoadFunction: Function,\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      imageLoadFunc: Function,\n      imageSmoothing: {\n        type: Boolean,\n        default: true,\n      },\n      ratio: {\n        type: Number,\n        default: 1.5,\n      },\n      url: {\n        type: String,\n        required: true,\n        validator: validateUrl,\n      },\n    },\n    data () {\n      return {\n        currentImageLoadFunction: this.imageLoadFunction,\n        currentUrl: this.url,\n      }\n    },\n    computed: {\n      inputImageLoadFunction () {\n        return this.imageLoadFunction || this.imageLoadFunc\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$source) return\n\n        if (this.currentUrl !== this.$source.getUrl()) {\n          this.currentUrl = this.$source.getUrl()\n        }\n        if (this.currentImageLoadFunction !== this.$source.getImageLoadFunction()) {\n          this.currentImageLoadFunction = this.$source.getImageLoadFunction()\n        }\n      },\n      url (value) {\n        this.setUrl(value)\n      },\n      currentUrl (value) {\n        if (value === this.url) return\n\n        this.$emit('update:url', value)\n      },\n      inputImageLoadFunction (value) {\n        this.setImageLoadFunction(value)\n      },\n      currentImageLoadFunc (value) {\n        if (value === this.imageLoadFunction) return\n\n        this.$emit('update:imageLoadFunction', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'crossOrigin',\n        'imageSmoothing',\n        'ratio',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n\n      this.currentImageLoadFunction = this.inputImageLoadFunction\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.imageLoadFunc) {\n          this.$logger.warn(\"'imageLoadFunc' prop is deprecated. Use 'imageLoadFunction' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      createSource () {\n        return new ImageWMSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          // ol/source/Image\n          resolutions: this.inputResolutions,\n          // ol/source/ImageWMS\n          crossOrigin: this.crossOrigin,\n          hidpi: this.hidpi,\n          serverType: this.serverType,\n          imageLoadFunction: this.currentImageLoadFunction,\n          imageSmoothing: this.imageSmoothing,\n          params: this.currentParams,\n          ratio: this.ratio,\n          url: this.currentUrl,\n        })\n      },\n      getUrl () {\n        return coalesce(this.$source?.getUrl(), this.currentUrl)\n      },\n      setUrl (url) {\n        assert(validateUrl(url), 'Invalid url')\n\n        if (url !== this.currentUrl) {\n          this.currentUrl = url\n        }\n        if (this.$source && url !== this.$source.getUrl()) {\n          this.$source.setUrls(url)\n        }\n      },\n      getImageLoadFunction () {\n        return coalesce(this.$source?.getImageLoadFunction(), this.currentImageLoadFunction)\n      },\n      setImageLoadFunction (func) {\n        assert(isFunction(func), 'Invalid image load function')\n\n        if (func !== this.currentImageLoadFunction) {\n          this.currentImageLoadFunction = func\n        }\n        if (this.$source && func !== this.$source.getImageLoadFunction()) {\n          this.$source.setImageLoadFunction(func)\n        }\n      },\n      stateChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { Vector as VectorLayer } from 'ol/layer'\nimport { vectorLayer } from '../../mixins'\n\n/**\n * Layer for data that is rendered client-side.\n */\nexport default {\n  name: 'VlLayerVector',\n  mixins: [\n    vectorLayer,\n  ],\n  props: {\n    /**\n     * @deprecated Use `vl-layer-vector-image` to render vector layer as image\n     * @todo remove in v0.13.x\n     */\n    renderMode: String,\n  },\n  created () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.renderMode) {\n        this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n      }\n    }\n  },\n  updated () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.renderMode) {\n        this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n      }\n    }\n  },\n  methods: {\n    /**\n     * @return {module:ol/layer/Vector~VectorLayer}\n     * @protected\n     */\n    createLayer () {\n      return new VectorLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Layer\n        render: this.render,\n        source: this.$source,\n        // ol/layer/BaseVector\n        renderOrder: this.renderOrder,\n        renderBuffer: this.renderBuffer,\n        declutter: this.declutter,\n        updateWhileAnimating: this.updateWhileAnimating,\n        updateWhileInteracting: this.updateWhileInteracting,\n        style: this.$style,\n      })\n    },\n  },\n}\n","<script>\n  import { Vector as VectorLayer } from 'ol/layer'\n  import { vectorLayer } from '../../mixins'\n\n  /**\n   * Layer for data that is rendered client-side.\n   */\n  export default {\n    name: 'VlLayerVector',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      /**\n       * @deprecated Use `vl-layer-vector-image` to render vector layer as image\n       * @todo remove in v0.13.x\n       */\n      renderMode: String,\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.renderMode) {\n          this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n        }\n      }\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.renderMode) {\n          this.$logger.warn(\"'renderMode' is deprecated. Use vl-layer-vector-image to render vector layer as image\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {module:ol/layer/Vector~VectorLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { vectorSource } from '../../mixins'\n\nexport default {\n  name: 'VlSourceVector',\n  mixins: [\n    vectorSource,\n  ],\n}\n","<script>\n  import { vectorSource } from '../../mixins'\n\n  export default {\n    name: 'VlSourceVector',\n    mixins: [\n      vectorSource,\n    ],\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { View } from 'ol'\nimport { get as getProj } from 'ol/proj'\nimport { merge as mergeObs } from 'rxjs'\nimport { distinctUntilKeyChanged, map as mapObs } from 'rxjs/operators'\nimport { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\nimport {\n  EPSG_3857,\n  getViewId,\n  initializeView,\n  isGeoJSONGeometry,\n  roundExtent,\n  roundPointCoords,\n  setViewId,\n} from '../../ol-ext'\nimport { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\nimport { addPrefix, assert, coalesce, isArray, isEqual, isFunction, isNumber, noop } from '../../utils'\n\n/**\n * Represents a simple **2D view** of the map. This is the component to act upon to change the **center**,\n * **resolution**, and **rotation** of the map.\n */\nexport default {\n  name: 'VlView',\n  mixins: [\n    projTransforms,\n    olCmp,\n    waitForMap,\n  ],\n  stubVNode: {\n    empty () {\n      return this.vmId\n    },\n  },\n  props: {\n    /**\n     * @type {number[]}\n     */\n    center: {\n      type: Array,\n      default: () => [0, 0],\n      validator: value => value.length === 2 && value.every(isNumber),\n    },\n    /**\n     * @type {boolean}\n     */\n    constrainOnlyCenter: Boolean,\n    /**\n     * @type {number[]|undefined}\n     */\n    extent: {\n      type: Array,\n      validator: value => value.length === 4 && value.every(isNumber),\n    },\n    /**\n     * @type {boolean}\n     */\n    smoothExtentConstraint: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @type {number}\n     */\n    rotation: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * @type {boolean}\n     */\n    enableRotation: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @type {boolean|number}\n     */\n    constrainRotation: {\n      type: [Boolean, Number],\n      default: true,\n    },\n    /**\n     * @type {number|undefined}\n     */\n    resolution: Number,\n    /**\n     * @type {number[]|undefined}\n     */\n    resolutions: {\n      type: Array,\n      validator: value => value.every(isNumber),\n    },\n    /**\n     * @type {number|undefined}\n     */\n    maxResolution: Number,\n    /**\n     * @type {number|undefined}\n     */\n    minResolution: Number,\n    /**\n     * @type {boolean}\n     */\n    constrainResolution: Boolean,\n    /**\n     * @type {boolean}\n     */\n    smoothResolutionConstraint: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @type {number}\n     */\n    zoom: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * @type {number}\n     */\n    zoomFactor: {\n      type: Number,\n      default: 2,\n    },\n    /**\n     * @type {number}\n     */\n    maxZoom: {\n      type: Number,\n      default: 28,\n    },\n    /**\n     * @type {number}\n     */\n    minZoom: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * @type {boolean}\n     */\n    multiWorld: Boolean,\n    /**\n     * @type {string}\n     */\n    projection: {\n      type: String,\n      default: EPSG_3857,\n      validator: value => getProj(value) != null,\n    },\n    showFullExtent: Boolean,\n  },\n  data () {\n    return {\n      dataProjection: this.projection,\n      currentProjection: this.projection,\n      currentCenterViewProj: roundPointCoords(this.center),\n      currentZoom: this.zoom,\n      currentRotation: this.rotation,\n      currentResolution: this.resolution,\n      currentMinZoom: this.minZoom,\n      currentMaxZoom: this.maxZoom,\n      currentResolutions: this.resolutions?.slice(),\n      currentMaxResolution: this.maxResolution,\n      currentMinResolution: this.minResolution,\n    }\n  },\n  computed: {\n    centerDataProj () {\n      return roundPointCoords(this.center)\n    },\n    centerViewProj () {\n      return this.pointToViewProj(this.center)\n    },\n    currentCenterDataProj () {\n      return this.pointToDataProj(this.currentCenterViewProj)\n    },\n    extentDataProj () {\n      return roundExtent(this.extent)\n    },\n    extentViewProj () {\n      return this.extentToViewProj(this.extent)\n    },\n    inputResolutions () {\n      return this.resolutions?.slice()\n    },\n    visibleExtentDataProj () {\n      if (!this.rev) return\n\n      return this.getExtent()?.slice()\n    },\n    visibleExtentViewProj () {\n      if (!this.rev) return\n\n      return this.getExtent(true)?.slice()\n    },\n    animating () {\n      return !!(this.rev && this.getAnimating())\n    },\n    interacting () {\n      return !!(this.rev && this.getInteracting())\n    },\n    resolvedViewProjection () {\n      return this.currentProjection\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$view) return\n\n      if (this.currentProjection !== this.$view.getProjection().getCode()) {\n        this.currentProjection = this.$view.getProjection().getCode()\n      }\n      if (!isEqual(this.currentCenterViewProj, this.$view.getCenter())) {\n        this.currentCenterViewProj = this.$view.getCenter()\n      }\n      if (this.currentZoom !== this.$view.getZoom()) {\n        this.currentZoom = this.$view.getZoom()\n      }\n      if (this.currentRotation !== this.$view.getRotation()) {\n        this.currentRotation = this.$view.getRotation()\n      }\n      if (this.currentResolution !== this.$view.getResolution()) {\n        this.currentResolution = this.$view.getResolution()\n      }\n      if (this.currentMinZoom !== this.$view.getMinZoom()) {\n        this.currentMinZoom = this.$view.getMinZoom()\n      }\n      if (this.currentMaxZoom !== this.$view.getMaxZoom()) {\n        this.currentMaxZoom = this.$view.getMaxZoom()\n      }\n      if (!isEqual(this.currentResolutions, this.$view.getResolutions())) {\n        this.currentResolutions = this.$view.getResolutions()\n      }\n      if (this.currentMaxResolution !== this.$view.getMaxResolution()) {\n        this.currentMaxResolution = this.$view.getMaxResolution()\n      }\n      if (this.currentMinResolution !== this.$view.getMinResolution()) {\n        this.currentMinResolution = this.$view.getMinResolution()\n      }\n    },\n    centerViewProj: {\n      deep: true,\n      handler (value, prev) {\n        if (this.getAnimating()) return\n\n        this.setCenter(value, true)\n      },\n    },\n    currentCenterDataProj: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, this.centerDataProj)) return\n\n        this.$emit('update:center', value.slice())\n      },\n    },\n    rotation (value) {\n      if (this.getAnimating()) return\n\n      this.setRotation(value)\n    },\n    currentRotation (value) {\n      if (value === this.rotation) return\n\n      this.$emit('update:rotation', value)\n    },\n    resolution (value) {\n      if (this.getAnimating()) return\n\n      this.setResolution(value)\n    },\n    currentResolution (value) {\n      if (value === this.resolution) return\n\n      this.$emit('update:resolution', value)\n    },\n    constrainResolution (value) {\n      this.setConstrainResolution(value)\n    },\n    zoom (value) {\n      if (this.getAnimating()) return\n\n      this.setZoom(value)\n    },\n    currentZoom (value) {\n      if (value === this.zoom) return\n\n      this.$emit('update:zoom', value)\n    },\n    minZoom (value) {\n      this.setMinZoom(value)\n    },\n    currentMinZoom (value) {\n      if (value === this.minZoom) return\n\n      this.$emit('update:minZoom', value)\n    },\n    maxZoom (value) {\n      this.setMaxZoom(value)\n    },\n    currentMaxZoom (value) {\n      if (value === this.maxZoom) return\n\n      this.$emit('update:maxZoom', value)\n    },\n    inputResolutions: {\n      deep: true,\n      handler (value) {\n        if (value === this.currentResolutions) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'resolutions changed, scheduling recreate... %O ===> %O',\n            this.currentResolutions,\n            value,\n          )\n        }\n\n        this.currentResolutions = value?.slice()\n\n        return this.scheduleRecreate()\n      },\n    },\n    currentResolutions: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.inputResolutions)) return\n\n        this.$emit('update:resolutions', value?.slice())\n      },\n    },\n    maxResolution (value) {\n      if (value === this.currentMaxResolution) return\n\n      if (process.env.VUELAYERS_DEBUG) {\n        this.$logger.log(\n          'maxResolution changed, scheduling recreate... %O ===> %O',\n          this.currentMaxResolution,\n          value,\n        )\n      }\n\n      this.currentMaxResolution = value\n\n      return this.scheduleRecreate()\n    },\n    currentMaxResolution (value) {\n      if (value === this.maxResolution) return\n\n      this.$emit('update:maxResolution', value)\n    },\n    minResolution (value) {\n      if (value === this.currentMinResolution) return\n\n      if (process.env.VUELAYERS_DEBUG) {\n        this.$logger.log(\n          'minResolution changed, scheduling recreate... %O ===> %O',\n          this.currentMinResolution,\n          value,\n        )\n      }\n\n      this.currentMinResolution = value\n\n      return this.scheduleRecreate()\n    },\n    currentMinResolution (value) {\n      if (value === this.minResolution) return\n\n      this.$emit('update:minResolution', value)\n    },\n    projection (value) {\n      if (value === this.currentProjection) return\n\n      if (process.env.VUELAYERS_DEBUG) {\n        this.$logger.log(\n          'projection changed, scheduling recreate... %O ===> %O',\n          this.currentProjection,\n          value,\n        )\n      }\n\n      this.currentProjection = this.dataProjection = value\n      // reset current resolution fields to inputs\n      // so zoom fields will take precedence\n      this.currentResolution = this.resolution\n      this.currentResolutions = this.inputResolutions?.slice()\n      this.currentMaxResolution = this.maxResolution\n      this.currentMinResolution = this.minResolution\n\n      return this.scheduleRecreate()\n    },\n    currentProjection (value) {\n      if (value === this.projection) return\n\n      this.$emit('update:projection', value)\n    },\n    animating (value, prev) {\n      if (value === prev) return\n\n      this.$emit('update:animating', value)\n    },\n    interacting (value, prev) {\n      if (value === prev) return\n\n      this.$emit('update:interacting', value)\n    },\n    visibleExtentDataProj: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:visibleExtent', value?.slice())\n      },\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'constrainOnlyCenter',\n      'smoothExtentConstraint',\n      'enableRotation',\n      'constrainRotation',\n      'constrainResolution',\n      'smoothResolutionConstraint',\n      'zoomFactor',\n      'multiWorld',\n      'extentViewProj',\n    ], [\n      'extentViewProj',\n    ]),\n  },\n  created () {\n    this::defineServices()\n\n    this.currentCenterViewProj = this.centerViewProj.slice()\n  },\n  methods: {\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async beforeInit () {\n      await Promise.all([\n        this::olCmp.methods.beforeInit(),\n        this::waitForMap.methods.beforeInit(),\n      ])\n    },\n    /**\n     * @return {module:ol/View~View}\n     * @protected\n     */\n    createOlObject () {\n      const view = new View({\n        center: this.currentCenterViewProj,\n        constrainOnlyCenter: this.constrainOnlyCenter,\n        extent: this.extentViewProj,\n        smoothExtentConstraint: this.smoothExtentConstraint,\n        rotation: this.currentRotation,\n        enableRotation: this.enableRotation,\n        constrainRotation: this.constrainRotation,\n        resolution: this.currentResolution,\n        resolutions: this.currentResolutions,\n        maxResolution: this.currentMaxResolution,\n        minResolution: this.currentMinResolution,\n        constrainResolution: this.constrainResolution,\n        smoothResolutionConstraint: this.smoothResolutionConstraint,\n        zoom: this.currentZoom,\n        zoomFactor: this.zoomFactor,\n        maxZoom: this.currentMaxZoom,\n        minZoom: this.currentMinZoom,\n        multiWorld: this.multiWorld,\n        projection: this.currentProjection,\n        showFullExtent: this.showFullExtent,\n      })\n      initializeView(view, this.currentId)\n\n      return view\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.$viewContainer?.setView(this)\n\n      return this::olCmp.methods.mount()\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    async unmount () {\n      if (this.$viewContainer?.getViewVm() === this) {\n        this.$viewContainer.setView(null)\n      }\n\n      return this::olCmp.methods.unmount()\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::olCmp.methods.subscribeAll()\n      this::subscribeToEvents()\n    },\n    /**\n     * @return {*}\n     * @protected\n     */\n    getIdInternal () {\n      return getViewId(this.$view)\n    },\n    /**\n     * @param {*} id\n     * @protected\n     */\n    setIdInternal (id) {\n      if (id === this.getIdInternal()) return\n\n      setViewId(this.$view, id)\n    },\n    /**\n     * @return {Promise<module:ol/View~View>}\n     */\n    resolveView: olCmp.methods.resolveOlObject,\n    /**\n     * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#animate}\n     * @param {...(module:ol/View~AnimationOptions|function(boolean))} args\n     * @return {Promise<boolean>} Resolves when animation completes\n     */\n    async animate (...args) {\n      let cb = noop\n      if (isFunction(args[args.length - 1])) {\n        cb = args[args.length - 1]\n        args = args.slice(0, args.length - 1)\n      }\n      args.forEach(opts => {\n        if (!isArray(opts.center)) return\n        if (!opts.viewProj) {\n          opts.center = this.pointToViewProj(opts.center)\n        }\n      })\n\n      const view = await this.resolveView()\n\n      return new Promise(resolve => {\n        view.animate(...args, complete => {\n          cb(complete)\n          resolve(complete)\n        })\n      })\n    },\n    /**\n     * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#fit}\n     * @param {Object|module:ol/geom/SimpleGeometry~SimpleGeometry|module:ol/extent~Extent} geometryOrExtent\n     * @param {module:ol/View~FitOptions} [options]\n     * @return {Promise<boolean>} Resolves when view changes\n     */\n    async fit (geometryOrExtent, options = {}) {\n      // transform from GeoJSON, vl-feature to ol.Feature\n      if (isGeoJSONGeometry(geometryOrExtent)) {\n        if (options.viewProj) {\n          geometryOrExtent = this.readGeometryInViewProj(geometryOrExtent)\n        } else {\n          geometryOrExtent = this.readGeometryInDataProj(geometryOrExtent)\n        }\n      } else if (isFunction(geometryOrExtent.resolveOlObject)) {\n        geometryOrExtent = await geometryOrExtent.resolveOlObject()\n      }\n\n      const cb = options.callback || noop\n      const view = await this.resolveView()\n\n      return new Promise(resolve => {\n        view.fit(geometryOrExtent, {\n          ...options,\n          callback: complete => {\n            cb(complete)\n            resolve(complete)\n          },\n        })\n      })\n    },\n    /**\n     * @return {Promise<void>}\n     */\n    async cancelAnimations () {\n      (await this.resolveView()).cancelAnimations()\n    },\n    /**\n     * @return {boolean}\n     */\n    getAnimating () {\n      return coalesce(this.$view?.getAnimating(), false)\n    },\n    /**\n     * @return {Promise<void>}\n     */\n    async beginInteraction () {\n      (await this.resolveView()).beginInteraction()\n    },\n    /**\n     * @param {number} [duration]\n     * @param {number} [resolutionDirection]\n     * @param {number[]} [anchor]\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<void>}\n     */\n    async endInteraction (duration, resolutionDirection, anchor, viewProj = false) {\n      if (!viewProj) {\n        anchor = this.pointToViewProj(anchor)\n      }\n\n      (await this.resolveView()).endInteraction(duration, resolutionDirection, anchor)\n    },\n    /**\n     * @return {boolean}\n     */\n    getInteracting () {\n      return coalesce(this.$view?.getInteracting(), false)\n    },\n    /**\n     * @param {number[]|undefined} [size]\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<number[]>}\n     */\n    async calculateExtent (size, viewProj = false) {\n      const extent = (await this.resolveView()).calculateExtent(size)\n      if (viewProj) {\n        return roundExtent(extent)\n      }\n\n      return this.extentToDataProj(extent)\n    },\n    /**\n     * @param {boolean} [viewProj=false]\n     * @return {number[]|undefined}\n     */\n    getExtent (viewProj = false) {\n      if (!this.$view) return\n\n      const extent = this.$view.calculateExtent()\n      if (viewProj) return roundExtent(extent)\n\n      return this.extentToDataProj(extent)\n    },\n    /**\n     * @param {number[]} coordinate\n     * @param {number[]} size\n     * @param {number[]} position\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<void>}\n     */\n    async centerOn (coordinate, size, position, viewProj = false) {\n      if (!viewProj) {\n        coordinate = this.pointToViewProj(coordinate)\n      }\n\n      (await this.resolveView()).centerOn(coordinate, size, position)\n    },\n    /**\n     * @param {boolean} [viewProj=false]\n     * @return {number[]}\n     */\n    getCenter (viewProj = false) {\n      if (!this.$view) {\n        return viewProj ? this.currentCenterViewProj : this.currentCenterDataProj\n      }\n\n      const center = this.$view.getCenter()\n      if (viewProj) return center\n\n      return this.pointToDataProj(center)\n    },\n    /**\n     * @param {number[]} center\n     * @param {boolean} [viewProj=false]\n     */\n    setCenter (center, viewProj = false) {\n      assert(isArray(center) && center.length === 2, 'Invalid center')\n\n      if (viewProj) {\n        center = roundPointCoords(center)\n      } else {\n        center = this.pointToViewProj(center)\n      }\n\n      if (!isEqual(center, this.currentCenterViewProj)) {\n        this.currentCenterViewProj = center\n      }\n      if (this.$view && !isEqual(center, this.$view.getCenter())) {\n        this.$view.setCenter(center)\n      }\n    },\n    /**\n     * @return {number}\n     */\n    getResolution () {\n      return coalesce(this.$view?.getResolution(), this.currentResolution)\n    },\n    /**\n     * @param {number} resolution\n     */\n    setResolution (resolution) {\n      resolution = Number(resolution)\n      assert(isNumber(resolution), 'Invalid resolution')\n\n      if (resolution !== this.currentResolution) {\n        this.currentResolution = resolution\n      }\n      if (this.$view && resolution !== this.$view.getResolution()) {\n        this.$view.setResolution(resolution)\n      }\n    },\n    /**\n     * @param {number[]} extent\n     * @param {number[]} size\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<number>}\n     */\n    async getResolutionForExtent (extent, size, viewProj = false) {\n      if (!viewProj) {\n        extent = this.extentToViewProj(extent)\n      }\n\n      return (await this.resolveView()).getResolutionForExtent(extent, size)\n    },\n    /**\n     * @param {number} zoom\n     * @return {Promise<number>}\n     */\n    async getResolutionForZoom (zoom) {\n      return (await this.resolveView()).getResolutionForZoom(zoom)\n    },\n    /**\n     * @return {number[]|undefined}\n     */\n    getResolutions () {\n      return coalesce(this.$view?.getResolutions(), this.currentResolutions)\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getMaxResolution () {\n      return coalesce(this.$view?.getMaxResolution(), this.currentMaxResolution)\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getMinResolution () {\n      return coalesce(this.$view?.getMinResolution(), this.currentMinResolution)\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getZoom () {\n      return coalesce(this.$view?.getZoom(), this.currentZoom)\n    },\n    /**\n     * @param {number} zoom\n     */\n    setZoom (zoom) {\n      zoom = Number(zoom)\n      assert(isNumber(zoom), 'Invalid zoom')\n\n      if (zoom !== this.currentZoom) {\n        this.currentZoom = zoom\n      }\n      if (this.$view && zoom !== this.$view.getZoom()) {\n        this.$view.setZoom(zoom)\n      }\n    },\n    /**\n     * @param {number} resolution\n     * @return {Promise<number|undefined>}\n     */\n    async getZoomForResolution (resolution) {\n      return (await this.resolveView()).getZoomForResolution(resolution)\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getMaxZoom () {\n      return coalesce(this.$view?.getMaxZoom(), this.currentMaxZoom)\n    },\n    /**\n     * @param {number} zoom\n     */\n    setMaxZoom (zoom) {\n      zoom = Number(zoom)\n      assert(isNumber(zoom), 'Invalid maxZoom')\n\n      if (zoom !== this.currentMaxZoom) {\n        this.currentMaxZoom = zoom\n      }\n      if (this.$view && zoom !== this.$view.getMaxZoom()) {\n        this.$view.setMaxZoom(zoom)\n      }\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getMinZoom () {\n      return coalesce(this.$view?.getMinZoom(), this.currentMinZoom)\n    },\n    /**\n     * @param {number} zoom\n     */\n    setMinZoom (zoom) {\n      zoom = Number(zoom)\n      assert(isNumber(zoom), 'Invalid minZoom')\n\n      if (zoom !== this.currentMinZoom) {\n        this.currentMinZoom = zoom\n      }\n      if (this.$view && zoom !== this.$view.getMinZoom()) {\n        this.$view.setMinZoom(zoom)\n      }\n    },\n    /**\n     * @return {module:ol/proj/ProjectionLike}\n     */\n    getProjection () {\n      return coalesce(this.$view?.getProjection(), getProj(this.currentProjection))\n    },\n    /**\n     * @return {number|undefined}\n     */\n    getRotation () {\n      return coalesce(this.$view?.getRotation(), this.currentRotation)\n    },\n    /**\n     * @param {number} rotation\n     */\n    setRotation (rotation) {\n      rotation = Number(rotation)\n      assert(isNumber(rotation), 'Invalid rotation')\n\n      if (rotation !== this.currentRotation) {\n        this.currentRotation = rotation\n      }\n      if (this.$view && rotation !== this.$view.getRotation()) {\n        this.$view.setRotation(rotation)\n      }\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    /**\n     * @type {module:ol/View~View|undefined}\n     */\n    $view: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $viewContainer: {\n      enumerable: true,\n      get: () => this.$services?.viewContainer,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $mapVm: {\n      enumerable: true,\n      get: () => this.$services?.mapVm,\n    },\n  })\n}\n\n/**\n * Subscribe to OpenLayers significant events\n * @return {void}\n * @private\n */\nasync function subscribeToEvents () {\n  const setterKey = addPrefix('set')\n  const resolutionChanges = obsFromOlChangeEvent(this.$view, 'resolution', true)\n  const zoomChanges = resolutionChanges.pipe(\n    mapObs(() => ({\n      prop: 'zoom',\n      value: this.getZoom(),\n    })),\n    distinctUntilKeyChanged('value'),\n  )\n  const propChanges = mergeObs(\n    obsFromOlChangeEvent(this.$view, [\n      'id',\n      'rotation',\n      'center',\n    ], true),\n    resolutionChanges,\n    zoomChanges,\n  ).pipe(\n    mapObs(evt => ({\n      ...evt,\n      setter: val => {\n        const args = [val]\n        if (evt.prop === 'center') {\n          args.push(true)\n        }\n        this[setterKey(evt.prop)](...args)\n      },\n    })),\n  )\n  this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot\n      :center=\"currentCenterDataProj\"\n      :zoom=\"currentZoom\"\n      :resolution=\"currentResolution\"\n      :rotation=\"currentRotation\"\n      :extent=\"visibleExtentDataProj\" />\n  </i>\n</template>\n\n<script>\n  import { View } from 'ol'\n  import { get as getProj } from 'ol/proj'\n  import { merge as mergeObs } from 'rxjs'\n  import { distinctUntilKeyChanged, map as mapObs } from 'rxjs/operators'\n  import { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\n  import {\n    EPSG_3857,\n    getViewId,\n    initializeView,\n    isGeoJSONGeometry,\n    roundExtent,\n    roundPointCoords,\n    setViewId,\n  } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import { addPrefix, assert, coalesce, isArray, isEqual, isFunction, isNumber, noop } from '../../utils'\n\n  /**\n   * Represents a simple **2D view** of the map. This is the component to act upon to change the **center**,\n   * **resolution**, and **rotation** of the map.\n   */\n  export default {\n    name: 'VlView',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty () {\n        return this.vmId\n      },\n    },\n    props: {\n      /**\n       * @type {number[]}\n       */\n      center: {\n        type: Array,\n        default: () => [0, 0],\n        validator: value => value.length === 2 && value.every(isNumber),\n      },\n      /**\n       * @type {boolean}\n       */\n      constrainOnlyCenter: Boolean,\n      /**\n       * @type {number[]|undefined}\n       */\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      /**\n       * @type {boolean}\n       */\n      smoothExtentConstraint: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {number}\n       */\n      rotation: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {boolean}\n       */\n      enableRotation: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {boolean|number}\n       */\n      constrainRotation: {\n        type: [Boolean, Number],\n        default: true,\n      },\n      /**\n       * @type {number|undefined}\n       */\n      resolution: Number,\n      /**\n       * @type {number[]|undefined}\n       */\n      resolutions: {\n        type: Array,\n        validator: value => value.every(isNumber),\n      },\n      /**\n       * @type {number|undefined}\n       */\n      maxResolution: Number,\n      /**\n       * @type {number|undefined}\n       */\n      minResolution: Number,\n      /**\n       * @type {boolean}\n       */\n      constrainResolution: Boolean,\n      /**\n       * @type {boolean}\n       */\n      smoothResolutionConstraint: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {number}\n       */\n      zoom: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {number}\n       */\n      zoomFactor: {\n        type: Number,\n        default: 2,\n      },\n      /**\n       * @type {number}\n       */\n      maxZoom: {\n        type: Number,\n        default: 28,\n      },\n      /**\n       * @type {number}\n       */\n      minZoom: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * @type {boolean}\n       */\n      multiWorld: Boolean,\n      /**\n       * @type {string}\n       */\n      projection: {\n        type: String,\n        default: EPSG_3857,\n        validator: value => getProj(value) != null,\n      },\n      showFullExtent: Boolean,\n    },\n    data () {\n      return {\n        dataProjection: this.projection,\n        currentProjection: this.projection,\n        currentCenterViewProj: roundPointCoords(this.center),\n        currentZoom: this.zoom,\n        currentRotation: this.rotation,\n        currentResolution: this.resolution,\n        currentMinZoom: this.minZoom,\n        currentMaxZoom: this.maxZoom,\n        currentResolutions: this.resolutions?.slice(),\n        currentMaxResolution: this.maxResolution,\n        currentMinResolution: this.minResolution,\n      }\n    },\n    computed: {\n      centerDataProj () {\n        return roundPointCoords(this.center)\n      },\n      centerViewProj () {\n        return this.pointToViewProj(this.center)\n      },\n      currentCenterDataProj () {\n        return this.pointToDataProj(this.currentCenterViewProj)\n      },\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      inputResolutions () {\n        return this.resolutions?.slice()\n      },\n      visibleExtentDataProj () {\n        if (!this.rev) return\n\n        return this.getExtent()?.slice()\n      },\n      visibleExtentViewProj () {\n        if (!this.rev) return\n\n        return this.getExtent(true)?.slice()\n      },\n      animating () {\n        return !!(this.rev && this.getAnimating())\n      },\n      interacting () {\n        return !!(this.rev && this.getInteracting())\n      },\n      resolvedViewProjection () {\n        return this.currentProjection\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$view) return\n\n        if (this.currentProjection !== this.$view.getProjection().getCode()) {\n          this.currentProjection = this.$view.getProjection().getCode()\n        }\n        if (!isEqual(this.currentCenterViewProj, this.$view.getCenter())) {\n          this.currentCenterViewProj = this.$view.getCenter()\n        }\n        if (this.currentZoom !== this.$view.getZoom()) {\n          this.currentZoom = this.$view.getZoom()\n        }\n        if (this.currentRotation !== this.$view.getRotation()) {\n          this.currentRotation = this.$view.getRotation()\n        }\n        if (this.currentResolution !== this.$view.getResolution()) {\n          this.currentResolution = this.$view.getResolution()\n        }\n        if (this.currentMinZoom !== this.$view.getMinZoom()) {\n          this.currentMinZoom = this.$view.getMinZoom()\n        }\n        if (this.currentMaxZoom !== this.$view.getMaxZoom()) {\n          this.currentMaxZoom = this.$view.getMaxZoom()\n        }\n        if (!isEqual(this.currentResolutions, this.$view.getResolutions())) {\n          this.currentResolutions = this.$view.getResolutions()\n        }\n        if (this.currentMaxResolution !== this.$view.getMaxResolution()) {\n          this.currentMaxResolution = this.$view.getMaxResolution()\n        }\n        if (this.currentMinResolution !== this.$view.getMinResolution()) {\n          this.currentMinResolution = this.$view.getMinResolution()\n        }\n      },\n      centerViewProj: {\n        deep: true,\n        handler (value, prev) {\n          if (this.getAnimating()) return\n\n          this.setCenter(value, true)\n        },\n      },\n      currentCenterDataProj: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, this.centerDataProj)) return\n\n          this.$emit('update:center', value.slice())\n        },\n      },\n      rotation (value) {\n        if (this.getAnimating()) return\n\n        this.setRotation(value)\n      },\n      currentRotation (value) {\n        if (value === this.rotation) return\n\n        this.$emit('update:rotation', value)\n      },\n      resolution (value) {\n        if (this.getAnimating()) return\n\n        this.setResolution(value)\n      },\n      currentResolution (value) {\n        if (value === this.resolution) return\n\n        this.$emit('update:resolution', value)\n      },\n      constrainResolution (value) {\n        this.setConstrainResolution(value)\n      },\n      zoom (value) {\n        if (this.getAnimating()) return\n\n        this.setZoom(value)\n      },\n      currentZoom (value) {\n        if (value === this.zoom) return\n\n        this.$emit('update:zoom', value)\n      },\n      minZoom (value) {\n        this.setMinZoom(value)\n      },\n      currentMinZoom (value) {\n        if (value === this.minZoom) return\n\n        this.$emit('update:minZoom', value)\n      },\n      maxZoom (value) {\n        this.setMaxZoom(value)\n      },\n      currentMaxZoom (value) {\n        if (value === this.maxZoom) return\n\n        this.$emit('update:maxZoom', value)\n      },\n      inputResolutions: {\n        deep: true,\n        handler (value) {\n          if (value === this.currentResolutions) return\n\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log(\n              'resolutions changed, scheduling recreate... %O ===> %O',\n              this.currentResolutions,\n              value,\n            )\n          }\n\n          this.currentResolutions = value?.slice()\n\n          return this.scheduleRecreate()\n        },\n      },\n      currentResolutions: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputResolutions)) return\n\n          this.$emit('update:resolutions', value?.slice())\n        },\n      },\n      maxResolution (value) {\n        if (value === this.currentMaxResolution) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'maxResolution changed, scheduling recreate... %O ===> %O',\n            this.currentMaxResolution,\n            value,\n          )\n        }\n\n        this.currentMaxResolution = value\n\n        return this.scheduleRecreate()\n      },\n      currentMaxResolution (value) {\n        if (value === this.maxResolution) return\n\n        this.$emit('update:maxResolution', value)\n      },\n      minResolution (value) {\n        if (value === this.currentMinResolution) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'minResolution changed, scheduling recreate... %O ===> %O',\n            this.currentMinResolution,\n            value,\n          )\n        }\n\n        this.currentMinResolution = value\n\n        return this.scheduleRecreate()\n      },\n      currentMinResolution (value) {\n        if (value === this.minResolution) return\n\n        this.$emit('update:minResolution', value)\n      },\n      projection (value) {\n        if (value === this.currentProjection) return\n\n        if (process.env.VUELAYERS_DEBUG) {\n          this.$logger.log(\n            'projection changed, scheduling recreate... %O ===> %O',\n            this.currentProjection,\n            value,\n          )\n        }\n\n        this.currentProjection = this.dataProjection = value\n        // reset current resolution fields to inputs\n        // so zoom fields will take precedence\n        this.currentResolution = this.resolution\n        this.currentResolutions = this.inputResolutions?.slice()\n        this.currentMaxResolution = this.maxResolution\n        this.currentMinResolution = this.minResolution\n\n        return this.scheduleRecreate()\n      },\n      currentProjection (value) {\n        if (value === this.projection) return\n\n        this.$emit('update:projection', value)\n      },\n      animating (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:animating', value)\n      },\n      interacting (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:interacting', value)\n      },\n      visibleExtentDataProj: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:visibleExtent', value?.slice())\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'constrainOnlyCenter',\n        'smoothExtentConstraint',\n        'enableRotation',\n        'constrainRotation',\n        'constrainResolution',\n        'smoothResolutionConstraint',\n        'zoomFactor',\n        'multiWorld',\n        'extentViewProj',\n      ], [\n        'extentViewProj',\n      ]),\n    },\n    created () {\n      this::defineServices()\n\n      this.currentCenterViewProj = this.centerViewProj.slice()\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/View~View}\n       * @protected\n       */\n      createOlObject () {\n        const view = new View({\n          center: this.currentCenterViewProj,\n          constrainOnlyCenter: this.constrainOnlyCenter,\n          extent: this.extentViewProj,\n          smoothExtentConstraint: this.smoothExtentConstraint,\n          rotation: this.currentRotation,\n          enableRotation: this.enableRotation,\n          constrainRotation: this.constrainRotation,\n          resolution: this.currentResolution,\n          resolutions: this.currentResolutions,\n          maxResolution: this.currentMaxResolution,\n          minResolution: this.currentMinResolution,\n          constrainResolution: this.constrainResolution,\n          smoothResolutionConstraint: this.smoothResolutionConstraint,\n          zoom: this.currentZoom,\n          zoomFactor: this.zoomFactor,\n          maxZoom: this.currentMaxZoom,\n          minZoom: this.currentMinZoom,\n          multiWorld: this.multiWorld,\n          projection: this.currentProjection,\n          showFullExtent: this.showFullExtent,\n        })\n        initializeView(view, this.currentId)\n\n        return view\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$viewContainer?.setView(this)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      async unmount () {\n        if (this.$viewContainer?.getViewVm() === this) {\n          this.$viewContainer.setView(null)\n        }\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToEvents()\n      },\n      /**\n       * @return {*}\n       * @protected\n       */\n      getIdInternal () {\n        return getViewId(this.$view)\n      },\n      /**\n       * @param {*} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setViewId(this.$view, id)\n      },\n      /**\n       * @return {Promise<module:ol/View~View>}\n       */\n      resolveView: olCmp.methods.resolveOlObject,\n      /**\n       * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#animate}\n       * @param {...(module:ol/View~AnimationOptions|function(boolean))} args\n       * @return {Promise<boolean>} Resolves when animation completes\n       */\n      async animate (...args) {\n        let cb = noop\n        if (isFunction(args[args.length - 1])) {\n          cb = args[args.length - 1]\n          args = args.slice(0, args.length - 1)\n        }\n        args.forEach(opts => {\n          if (!isArray(opts.center)) return\n          if (!opts.viewProj) {\n            opts.center = this.pointToViewProj(opts.center)\n          }\n        })\n\n        const view = await this.resolveView()\n\n        return new Promise(resolve => {\n          view.animate(...args, complete => {\n            cb(complete)\n            resolve(complete)\n          })\n        })\n      },\n      /**\n       * @see {@link https://openlayers.org/en/latest/apidoc/module-ol_View-View.html#fit}\n       * @param {Object|module:ol/geom/SimpleGeometry~SimpleGeometry|module:ol/extent~Extent} geometryOrExtent\n       * @param {module:ol/View~FitOptions} [options]\n       * @return {Promise<boolean>} Resolves when view changes\n       */\n      async fit (geometryOrExtent, options = {}) {\n        // transform from GeoJSON, vl-feature to ol.Feature\n        if (isGeoJSONGeometry(geometryOrExtent)) {\n          if (options.viewProj) {\n            geometryOrExtent = this.readGeometryInViewProj(geometryOrExtent)\n          } else {\n            geometryOrExtent = this.readGeometryInDataProj(geometryOrExtent)\n          }\n        } else if (isFunction(geometryOrExtent.resolveOlObject)) {\n          geometryOrExtent = await geometryOrExtent.resolveOlObject()\n        }\n\n        const cb = options.callback || noop\n        const view = await this.resolveView()\n\n        return new Promise(resolve => {\n          view.fit(geometryOrExtent, {\n            ...options,\n            callback: complete => {\n              cb(complete)\n              resolve(complete)\n            },\n          })\n        })\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async cancelAnimations () {\n        (await this.resolveView()).cancelAnimations()\n      },\n      /**\n       * @return {boolean}\n       */\n      getAnimating () {\n        return coalesce(this.$view?.getAnimating(), false)\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async beginInteraction () {\n        (await this.resolveView()).beginInteraction()\n      },\n      /**\n       * @param {number} [duration]\n       * @param {number} [resolutionDirection]\n       * @param {number[]} [anchor]\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      async endInteraction (duration, resolutionDirection, anchor, viewProj = false) {\n        if (!viewProj) {\n          anchor = this.pointToViewProj(anchor)\n        }\n\n        (await this.resolveView()).endInteraction(duration, resolutionDirection, anchor)\n      },\n      /**\n       * @return {boolean}\n       */\n      getInteracting () {\n        return coalesce(this.$view?.getInteracting(), false)\n      },\n      /**\n       * @param {number[]|undefined} [size]\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async calculateExtent (size, viewProj = false) {\n        const extent = (await this.resolveView()).calculateExtent(size)\n        if (viewProj) {\n          return roundExtent(extent)\n        }\n\n        return this.extentToDataProj(extent)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]|undefined}\n       */\n      getExtent (viewProj = false) {\n        if (!this.$view) return\n\n        const extent = this.$view.calculateExtent()\n        if (viewProj) return roundExtent(extent)\n\n        return this.extentToDataProj(extent)\n      },\n      /**\n       * @param {number[]} coordinate\n       * @param {number[]} size\n       * @param {number[]} position\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<void>}\n       */\n      async centerOn (coordinate, size, position, viewProj = false) {\n        if (!viewProj) {\n          coordinate = this.pointToViewProj(coordinate)\n        }\n\n        (await this.resolveView()).centerOn(coordinate, size, position)\n      },\n      /**\n       * @param {boolean} [viewProj=false]\n       * @return {number[]}\n       */\n      getCenter (viewProj = false) {\n        if (!this.$view) {\n          return viewProj ? this.currentCenterViewProj : this.currentCenterDataProj\n        }\n\n        const center = this.$view.getCenter()\n        if (viewProj) return center\n\n        return this.pointToDataProj(center)\n      },\n      /**\n       * @param {number[]} center\n       * @param {boolean} [viewProj=false]\n       */\n      setCenter (center, viewProj = false) {\n        assert(isArray(center) && center.length === 2, 'Invalid center')\n\n        if (viewProj) {\n          center = roundPointCoords(center)\n        } else {\n          center = this.pointToViewProj(center)\n        }\n\n        if (!isEqual(center, this.currentCenterViewProj)) {\n          this.currentCenterViewProj = center\n        }\n        if (this.$view && !isEqual(center, this.$view.getCenter())) {\n          this.$view.setCenter(center)\n        }\n      },\n      /**\n       * @return {number}\n       */\n      getResolution () {\n        return coalesce(this.$view?.getResolution(), this.currentResolution)\n      },\n      /**\n       * @param {number} resolution\n       */\n      setResolution (resolution) {\n        resolution = Number(resolution)\n        assert(isNumber(resolution), 'Invalid resolution')\n\n        if (resolution !== this.currentResolution) {\n          this.currentResolution = resolution\n        }\n        if (this.$view && resolution !== this.$view.getResolution()) {\n          this.$view.setResolution(resolution)\n        }\n      },\n      /**\n       * @param {number[]} extent\n       * @param {number[]} size\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number>}\n       */\n      async getResolutionForExtent (extent, size, viewProj = false) {\n        if (!viewProj) {\n          extent = this.extentToViewProj(extent)\n        }\n\n        return (await this.resolveView()).getResolutionForExtent(extent, size)\n      },\n      /**\n       * @param {number} zoom\n       * @return {Promise<number>}\n       */\n      async getResolutionForZoom (zoom) {\n        return (await this.resolveView()).getResolutionForZoom(zoom)\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getResolutions () {\n        return coalesce(this.$view?.getResolutions(), this.currentResolutions)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMaxResolution () {\n        return coalesce(this.$view?.getMaxResolution(), this.currentMaxResolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMinResolution () {\n        return coalesce(this.$view?.getMinResolution(), this.currentMinResolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getZoom () {\n        return coalesce(this.$view?.getZoom(), this.currentZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid zoom')\n\n        if (zoom !== this.currentZoom) {\n          this.currentZoom = zoom\n        }\n        if (this.$view && zoom !== this.$view.getZoom()) {\n          this.$view.setZoom(zoom)\n        }\n      },\n      /**\n       * @param {number} resolution\n       * @return {Promise<number|undefined>}\n       */\n      async getZoomForResolution (resolution) {\n        return (await this.resolveView()).getZoomForResolution(resolution)\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMaxZoom () {\n        return coalesce(this.$view?.getMaxZoom(), this.currentMaxZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setMaxZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid maxZoom')\n\n        if (zoom !== this.currentMaxZoom) {\n          this.currentMaxZoom = zoom\n        }\n        if (this.$view && zoom !== this.$view.getMaxZoom()) {\n          this.$view.setMaxZoom(zoom)\n        }\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getMinZoom () {\n        return coalesce(this.$view?.getMinZoom(), this.currentMinZoom)\n      },\n      /**\n       * @param {number} zoom\n       */\n      setMinZoom (zoom) {\n        zoom = Number(zoom)\n        assert(isNumber(zoom), 'Invalid minZoom')\n\n        if (zoom !== this.currentMinZoom) {\n          this.currentMinZoom = zoom\n        }\n        if (this.$view && zoom !== this.$view.getMinZoom()) {\n          this.$view.setMinZoom(zoom)\n        }\n      },\n      /**\n       * @return {module:ol/proj/ProjectionLike}\n       */\n      getProjection () {\n        return coalesce(this.$view?.getProjection(), getProj(this.currentProjection))\n      },\n      /**\n       * @return {number|undefined}\n       */\n      getRotation () {\n        return coalesce(this.$view?.getRotation(), this.currentRotation)\n      },\n      /**\n       * @param {number} rotation\n       */\n      setRotation (rotation) {\n        rotation = Number(rotation)\n        assert(isNumber(rotation), 'Invalid rotation')\n\n        if (rotation !== this.currentRotation) {\n          this.currentRotation = rotation\n        }\n        if (this.$view && rotation !== this.$view.getRotation()) {\n          this.$view.setRotation(rotation)\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * @type {module:ol/View~View|undefined}\n       */\n      $view: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewContainer: {\n        enumerable: true,\n        get: () => this.$services?.viewContainer,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n    })\n  }\n\n  /**\n   * Subscribe to OpenLayers significant events\n   * @return {void}\n   * @private\n   */\n  async function subscribeToEvents () {\n    const setterKey = addPrefix('set')\n    const resolutionChanges = obsFromOlChangeEvent(this.$view, 'resolution', true)\n    const zoomChanges = resolutionChanges.pipe(\n      mapObs(() => ({\n        prop: 'zoom',\n        value: this.getZoom(),\n      })),\n      distinctUntilKeyChanged('value'),\n    )\n    const propChanges = mergeObs(\n      obsFromOlChangeEvent(this.$view, [\n        'id',\n        'rotation',\n        'center',\n      ], true),\n      resolutionChanges,\n      zoomChanges,\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: val => {\n          const args = [val]\n          if (evt.prop === 'center') {\n            args.push(true)\n          }\n          this[setterKey(evt.prop)](...args)\n        },\n      })),\n    )\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n</script>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Map, View } from 'ol'\nimport MapBrowserEventType from 'ol/MapBrowserEventType'\nimport MapEventType from 'ol/MapEventType'\nimport { get as getProj } from 'ol/proj'\nimport RenderEventType from 'ol/render/EventType'\nimport { merge as mergeObs } from 'rxjs'\nimport { distinctUntilChanged, map as mapObs, tap } from 'rxjs/operators'\nimport {\n  controlsContainer,\n  featuresContainer,\n  FRAME_TIME,\n  interactionsContainer,\n  layersContainer,\n  makeChangeOrRecreateWatchers,\n  olCmp,\n  overlaysContainer,\n  projTransforms,\n} from '../../mixins'\nimport {\n  EPSG_3857,\n  getControlId,\n  getInteractionId,\n  getLayerId,\n  getMapDataProjection,\n  getMapId,\n  getOverlayId,\n  getViewId,\n  roundPointCoords,\n  setMapDataProjection,\n  setMapId,\n} from '../../ol-ext'\nimport {\n  bufferDebounceTime,\n  fromOlChangeEvent as obsFromOlChangeEvent,\n  fromOlEvent as obsFromOlEvent,\n  fromVueEvent as obsFromVueEvent,\n  fromVueWatcher as obsFromVueWatcher,\n} from '../../rx-ext'\nimport {\n  addPrefix,\n  assert,\n  clonePlainObject,\n  coalesce,\n  isArray,\n  isEqual,\n  map,\n  mergeDescriptors,\n  omit,\n} from '../../utils'\nimport { Layer as VectorLayerCmp } from '../vector-layer'\nimport { Source as VectorSourceCmp } from '../vector-source'\nimport ViewCmp from './view.vue'\n\n/**\n * Container for **layers**, **interactions**, **controls** and **overlays**. It responsible for viewport\n * rendering and low level interaction events.\n *\n * todo make render function that injects VlView if it is not provided by the user,\n *      then it can be provided to lower components\n */\nexport default {\n  name: 'VlMap',\n  components: {\n    ViewCmp,\n    VectorLayerCmp,\n    VectorSourceCmp,\n  },\n  mixins: [\n    projTransforms,\n    layersContainer,\n    controlsContainer,\n    interactionsContainer,\n    overlaysContainer,\n    featuresContainer,\n    olCmp,\n  ],\n  props: {\n    /**\n     * Options for default controls added to the map by default. Set to `false` to disable all map controls. Object\n     * value is used to configure controls.\n     * @type {Object|boolean}\n     * @todo remove when vl-control-* components will be ready\n     */\n    defaultControls: {\n      type: [Object, Boolean],\n      default: true,\n    },\n    /**\n     * Options for default interactions added to the map by default. Object\n     * value is used to configure default interactions.\n     * @type {Object|boolean}\n     */\n    defaultInteractions: {\n      type: [Object, Boolean],\n      default: true,\n    },\n    /**\n     * The element to listen to keyboard events on. For example, if this option is set to `document` the keyboard\n     * interactions will always trigger. If this option is not specified, the element the library listens to keyboard\n     * events on is the component root element.\n     * @type {string|Element|Document|undefined}\n     */\n    keyboardEventTarget: [String, Element, Document],\n    /**\n     * The minimum distance in pixels the cursor must move to be detected as a map move event instead of a click.\n     * Increasing this value can make it easier to click on the map.\n     * @type {number}\n     */\n    moveTolerance: {\n      type: Number,\n      default: 1,\n    },\n    /**\n     * The ratio between physical pixels and device-independent pixels (dips) on the device.\n     * @type {number}\n     */\n    pixelRatio: {\n      type: Number,\n      default: () => window.devicePixelRatio || 1,\n    },\n    /**\n     * Maximum number tiles to load simultaneously.\n     * @type {number}\n     */\n    maxTilesLoading: {\n      type: Number,\n      default: 16,\n    },\n    /**\n     * Root element `tabindex` attribute value. Value should be provided to allow keyboard events on map.\n     * @type {number|string}\n     */\n    tabindex: [String, Number],\n    /**\n     * Projection for input/output coordinates in plain data.\n     * @type {string|undefined}\n     */\n    dataProjection: {\n      type: String,\n      validator: value => getProj(value) != null,\n    },\n    /**\n     * @type {boolean}\n     */\n    wrapX: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @type {boolean}\n     */\n    updateWhileAnimating: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * @type {boolean}\n     */\n    updateWhileInteracting: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data () {\n    return {\n      viewProjection: EPSG_3857,\n      withCustomView: false,\n      size: undefined,\n      currentDataProjection: this.dataProjection,\n    }\n  },\n  computed: {\n    resolvedDataProjection () {\n      return coalesce(\n        this.currentDataProjection,\n        this.dataProjection,\n        this.$options?.dataProjection,\n        this.viewProjection,\n      )\n    },\n    view () {\n      if (!(this.rev && this.$view)) return\n\n      return {\n        id: getViewId(this.$view),\n        type: this.$view.constructor.name,\n      }\n    },\n    /**\n     * @returns {string[]}\n     */\n    layers () {\n      if (!this.rev) return []\n\n      return map(this.getLayers(), layer => ({\n        id: getLayerId(layer),\n        type: layer.constructor.name,\n      }))\n    },\n    /**\n     * @returns {string[]}\n     */\n    controls () {\n      if (!this.rev) return []\n\n      return map(this.getControls(), control => ({\n        id: getControlId(control),\n        type: control.constructor.name,\n      }))\n    },\n    /**\n     * @returns {string[]}\n     */\n    interactions () {\n      if (!this.rev) return []\n\n      return map(this.getInteractions(), interaction => ({\n        id: getInteractionId(interaction),\n        type: interaction.constructor.name,\n      }))\n    },\n    /**\n     * @returns {string[]}\n     */\n    overlays () {\n      if (!this.rev) return []\n\n      return map(this.getOverlays(), overlay => ({\n        id: getOverlayId(overlay),\n        type: overlay.constructor.name,\n      }))\n    },\n    /**\n     * @type {Object[]}\n     */\n    featuresDataProj () {\n      if (!this.rev) return []\n\n      return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n    },\n    /**\n     * @type {Object[]}\n     */\n    featuresViewProj () {\n      if (!this.rev) return []\n\n      return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$map) return\n\n      if (!isEqual(this.size, this.$map.getSize())) {\n        this.size = this.$map.getSize()\n      }\n    },\n    size: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:size', value?.slice())\n      },\n    },\n    defaultControls: {\n      deep: true,\n      handler (value) {\n        this.initDefaultControls(value)\n      },\n    },\n    defaultInteractions: {\n      deep: true,\n      handler (value) {\n        this.initDefaultInteractions(value)\n      },\n    },\n    dataProjection (value) {\n      this.setDataProjection(value)\n    },\n    view: {\n      deep: true,\n      handler (value, prev) {\n        if (value === prev) return\n\n        this.$emit('update:view', value)\n      },\n    },\n    layers: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:layers', value.slice())\n      },\n    },\n    controls: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:controls', value.slice())\n      },\n    },\n    interactions: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:interactions', value.slice())\n      },\n    },\n    overlays: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:overlays', value.slice())\n      },\n    },\n    featuresDataProj: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        this.$emit('update:features', clonePlainObject(value))\n      },\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'keyboardEventTarget',\n      'moveTolerance',\n      'pixelRatio',\n      'maxTilesLoading',\n    ]),\n  },\n  created () {\n    /**\n     * @type {module:ol/View~View}\n     * @private\n     */\n    this._view = new View({\n      center: [0, 0],\n      zoom: 2,\n    })\n    /**\n     * @type {Object|undefined}\n     */\n    this._viewVm = undefined\n\n    this::defineServices()\n    // todo wrap controls into components and provide vl-control-default\n    this.initDefaultControls(this.defaultControls)\n    // todo initialize without interactions and provide vl-interaction-default component\n    this.initDefaultInteractions(this.defaultInteractions)\n  },\n  methods: {\n    /**\n     * @return {module:ol/Map~Map}\n     * @protected\n     */\n    async createOlObject () {\n      const map = new Map({\n        pixelRatio: this.pixelRatio,\n        moveTolerance: this.moveTolerance,\n        keyboardEventTarget: this.keyboardEventTarget,\n        maxTilesLoading: this.maxTilesLoading,\n        controls: this.$controlsCollection,\n        interactions: this.$interactionsCollection,\n        layers: this.$layersCollection,\n        overlays: this.$overlaysCollection,\n        view: this.$view,\n      })\n      setMapId(map, this.currentId)\n      setMapDataProjection(map, this.resolvedDataProjection)\n      this.size && map.setSize(this.size)\n\n      return map\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.setTarget(this.$el)\n\n      return this::olCmp.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async unmount () {\n      this.setTarget(null)\n\n      return this::olCmp.methods.unmount()\n    },\n    /**\n     * @protected\n     */\n    subscribeAll () {\n      this::olCmp.methods.subscribeAll()\n      this::layersContainer.methods.subscribeAll()\n      this::controlsContainer.methods.subscribeAll()\n      this::interactionsContainer.methods.subscribeAll()\n      this::overlaysContainer.methods.subscribeAll()\n      this::featuresContainer.methods.subscribeAll()\n      this::subscribeToEvents()\n\n      // view projection can be changed in runtime only through vl-view vm\n      this.subscribeTo(\n        obsFromVueWatcher(this, () => this.$viewVm?.resolvedViewProjection),\n        ({ value }) => { this.viewProjection = value || EPSG_3857 },\n      )\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      const vm = this\n\n      return mergeDescriptors(\n        this::olCmp.methods.getServices(),\n        this::layersContainer.methods.getServices(),\n        this::controlsContainer.methods.getServices(),\n        this::interactionsContainer.methods.getServices(),\n        this::overlaysContainer.methods.getServices(),\n        this::featuresContainer.methods.getServices(),\n        {\n          get mapVm () { return vm },\n          get viewVm () { return vm.$viewVm },\n          get viewContainer () { return vm },\n        },\n      )\n    },\n    /**\n     * @return {string|number}\n     * @protected\n     */\n    getIdInternal () {\n      return getMapId(this.$map)\n    },\n    /**\n     * @param {string|number} id\n     * @protected\n     */\n    setIdInternal (id) {\n      if (id === this.getIdInternal()) return\n\n      setMapId(this.$map, id)\n    },\n    /**\n     * @return {Promise<module:ol/Map~Map>}\n     */\n    resolveMap: olCmp.methods.resolveOlObject,\n    /**\n     * @param {number[]} pixel\n     * @param {function} callback\n     * @param {Object} [opts]\n     * @return {Promise}\n     */\n    async forEachFeatureAtPixel (pixel, callback, opts = {}) {\n      return (await this.resolveMap()).forEachFeatureAtPixel(pixel, callback, opts)\n    },\n    /**\n     * @param {number[]} pixel\n     * @param {function} callback\n     * @param {Object} [opts]\n     * @return {Promise}\n     */\n    async forEachLayerAtPixel (pixel, callback, opts = {}) {\n      return (await this.resolveMap()).forEachLayerAtPixel(pixel, callback, opts)\n    },\n    /**\n     * @param {number[]} pixel\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<number[]>} Coordinates in the map view projection.\n     */\n    async getCoordinateFromPixel (pixel, viewProj = false) {\n      const coordinate = (await this.resolveMap()).getCoordinateFromPixel(pixel)\n      if (viewProj) {\n        return roundPointCoords(coordinate)\n      }\n\n      return this.pointToDataProj(coordinate)\n    },\n    /**\n     * @param {Event} event\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<number[]>}\n     */\n    async getEventCoordinate (event, viewProj = false) {\n      const coordinate = (await this.resolveMap()).getEventCoordinate(event)\n      if (viewProj) {\n        return roundPointCoords(coordinate)\n      }\n\n      return this.pointToDataProj(coordinate)\n    },\n    /**\n     * @param {Event} event\n     * @return {Promise<number[]>}\n     */\n    async getEventPixel (event) {\n      return (await this.resolveMap()).getEventPixel(event)\n    },\n    /**\n     * @param {number[]} pixel\n     * @param {Object} [opts]\n     * @return {Promise}\n     */\n    async getFeaturesAtPixel (pixel, opts = {}) {\n      return (await this.resolveMap()).getFeaturesAtPixel(pixel, opts)\n    },\n    /**\n     * @param {number[]} pixel\n     * @param {Object} [options]\n     * @return {Promise<boolean>}\n     */\n    async hasFeatureAtPixel (pixel, options = {}) {\n      return (await this.resolveMap()).hasFeatureAtPixel(pixel, options)\n    },\n    /**\n     * @param {number[]} coordinate Coordinates in map view projection\n     * @param {boolean} [viewProj=false]\n     * @return {Promise<number[]>}\n     */\n    async getPixelFromCoordinate (coordinate, viewProj = false) {\n      if (!viewProj) {\n        coordinate = this.pointToViewProj(coordinate)\n      }\n\n      return (await this.resolveMap()).getPixelFromCoordinate(coordinate)\n    },\n    /**\n     * @return {number[]|undefined}\n     */\n    getSize () {\n      return coalesce(this.$map?.getSize(), this.size)\n    },\n    /**\n     * @param {number[]} size\n     */\n    setSize (size) {\n      assert(isArray(size) && size.length === 2, 'Invalid size')\n      size = size.slice()\n\n      if (!isEqual(size, this.size)) {\n        this.size = size\n      }\n      if (this.$map && !isEqual(size, this.$map.getSize())) {\n        this.$map.setSize(size)\n      }\n    },\n    /**\n     * Updates map size.\n     * @return {Promise<void>}\n     */\n    async updateSize () {\n      (await this.resolveMap()).updateSize()\n    },\n    /**\n     * @return {Promise<void>}\n     */\n    async render () {\n      const map = await this.resolveMap()\n\n      return new Promise(resolve => {\n        map.once('postrender', () => resolve())\n        map.render()\n      })\n    },\n    /**\n     * @return {HTMLElement|undefined}\n     */\n    getTarget () {\n      return coalesce(this.$map?.getTarget(), this.$el)\n    },\n    /**\n     * @param {HTMLElement} target\n     */\n    setTarget (target) {\n      if (this.$map && target !== this.$map.getTarget()) {\n        this.$map.setTarget(target)\n        this.$emit('update:target', target)\n      }\n    },\n    /**\n     * @return {HTMLElement|undefined}\n     */\n    getViewport () {\n      return this.$map?.getViewport()\n    },\n    /**\n     * @return {module:ol/View~View|undefined}\n     */\n    getView () {\n      return coalesce(this.$map?.getView(), this._view)\n    },\n    /**\n     * @return {Object}\n     */\n    getViewVm () {\n      return this._viewVm\n    },\n    /**\n     * @param {module:ol/View~View|Vue|undefined} view\n     */\n    setView (view) {\n      view = view?.$view || view\n      assert(!view || view instanceof View, 'Invalid view')\n\n      if (view !== this._view) {\n        this._view = view\n        this._viewVm = view?.vm && view?.vm[0]\n      }\n      if (this.$map && view !== this.$map.getView()) {\n        this.$map.setView(view)\n      }\n\n      this.scheduleRefresh()\n    },\n    /**\n     * @return {module:ol/proj~ProjectionLike|undefined}\n     */\n    getDataProjection () {\n      return coalesce(this.$map && getMapDataProjection(this.$map), this.resolvedDataProjection)\n    },\n    /**\n     * @param {module:ol/proj~ProjectionLike} projection\n     */\n    setDataProjection (projection) {\n      projection = getProj(projection)\n      assert(projection != null, 'Invalid projection')\n\n      if (projection.getCode() !== this.currentDataProjection) {\n        this.currentDataProjection = projection.getCode()\n      }\n      if (this.$map && projection.getCode() !== getMapDataProjection(this.$map)) {\n        setMapDataProjection(this.$map, projection.getCode())\n      }\n    },\n    /**\n     * Triggers focus on map container.\n     */\n    focus () {\n      this.$el.focus()\n    },\n    /**\n     * Updates map size and re-renders map.\n     * @return {Promise}\n     */\n    async refresh () {\n      await this.updateSize()\n      await this.render()\n\n      return this::olCmp.methods.refresh()\n    },\n    isInteracting () {\n      if (!this.$map) return false\n\n      return this.getInteractions().some(interaction => !!interaction.get('interacting'))\n    },\n    /**\n     * @param {Object} sourceVm\n     * @protected\n     */\n    featuresOverlaySourceCreated (sourceVm) {\n      sourceVm.addFeatures(this.getFeatures())\n\n      const adds = obsFromVueEvent(this, 'addfeature').pipe(\n        mapObs(({ feature }) => feature),\n        bufferDebounceTime(FRAME_TIME),\n      )\n      this.subscribeTo(adds, features => sourceVm.addFeatures(features))\n\n      const removes = obsFromVueEvent(this, 'removefeature').pipe(\n        mapObs(({ feature }) => feature),\n        bufferDebounceTime(FRAME_TIME),\n      )\n      this.subscribeTo(removes, features => sourceVm.removeFeatures(features))\n    },\n    /**\n     * @protected {string} value\n     * @protected\n     */\n    resolvedDataProjectionChanged (value) {\n      if (value === this.dataProjection) return\n\n      this.$emit('update:dataProjection', value)\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    /**\n     * OpenLayers map instance.\n     * @type {module:ol/Map~Map|undefined}\n     */\n    $map: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    /**\n     * @type {module:ol/View~View|undefined}\n     */\n    $view: {\n      enumerable: true,\n      get: this.getView,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $viewVm: {\n      enumerable: true,\n      get: this.getViewVm,\n    },\n    $featuresOverlayVm: {\n      enumerable: true,\n      get: () => this.$refs?.featuresOverlay,\n    },\n    $featuresOverlaySourceVm: {\n      enumerable: true,\n      get: () => this.$refs?.featuresOverlaySource,\n    },\n  })\n}\n\n/**\n * Subscribe to OL map events.\n *\n * @return {void}\n * @private\n */\nasync function subscribeToEvents () {\n  const setterKey = addPrefix('set')\n  const viewChanges = obsFromOlChangeEvent(this.$map, 'view', true).pipe(\n    tap(({ value: view }) => {\n      if (this._viewSubs) {\n        this.unsubscribe(this._viewSubs)\n      }\n      if (view) {\n        this._viewSubs = this.subscribeTo(\n          obsFromOlChangeEvent(view, 'id', true),\n          ::this.scheduleRefresh,\n        )\n      }\n      this.viewProjection = view?.getProjection().getCode() || EPSG_3857\n      this.withCustomView = view && (!view.vm || view.vm.some(vm => vm !== this.$refs.view))\n    }),\n  )\n  const propChanges = mergeObs(\n    viewChanges,\n    obsFromOlChangeEvent(this.$map, [\n      'dataProjection',\n      'size',\n      'target',\n      // 'layerGroup', FIXME not ready\n    ], true),\n  ).pipe(\n    mapObs(evt => ({\n      ...evt,\n      setter: this[setterKey(evt.prop)],\n    })),\n  )\n  this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n  // pointer\n  const pointerEvents = mergeObs(\n    obsFromOlEvent(this.$map, [\n      MapBrowserEventType.CLICK,\n      MapBrowserEventType.DBLCLICK,\n      MapBrowserEventType.SINGLECLICK,\n    ]),\n    obsFromOlEvent(this.$map, [\n      MapBrowserEventType.POINTERDRAG,\n      MapBrowserEventType.POINTERMOVE,\n    ], null, [\n      distinctUntilChanged((a, b) => isEqual({\n        t: a.type,\n        c: a.coordinate,\n      }, {\n        t: b.type,\n        c: b.coordinate,\n      })),\n    ]),\n  ).pipe(\n    mapObs(evt => omit({\n      ...evt,\n      pixel: evt.pixel,\n      coordinate: this.pointToDataProj(evt.coordinate),\n    }, [\n      'pixel_',\n      'coordinate_',\n    ])),\n  )\n  // other\n  const otherEvents = obsFromOlEvent(this.$map, [\n    MapEventType.MOVESTART,\n    MapEventType.MOVEEND,\n    MapEventType.POSTRENDER,\n    RenderEventType.PRECOMPOSE,\n    RenderEventType.POSTCOMPOSE,\n    RenderEventType.RENDERCOMPLETE,\n  ])\n  this.subscribeTo(mergeObs(pointerEvents, otherEvents), evt => this.$emit(evt.type, evt))\n}\n","<template>\n  <div\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    :tabindex=\"tabindex\">\n    <slot />\n    <ViewCmp\n      v-if=\"!withCustomView\"\n      :id=\"'vl-' + currentId + '-default-view'\"\n      ref=\"view\" />\n    <VectorLayerCmp\n      :id=\"'vl-' + currentId + '-default-layer'\"\n      ref=\"featuresOverlay\"\n      :overlay=\"true\"\n      :update-while-animating=\"updateWhileAnimating\"\n      :update-while-interacting=\"updateWhileInteracting\">\n      <VectorSourceCmp\n        :id=\"'vl-' + currentId + '-default-source'\"\n        ref=\"featuresOverlaySource\"\n        :wrap-x=\"wrapX\"\n        :projection=\"currentDataProjection\"\n        @created=\"featuresOverlaySourceCreated\">\n        <slot name=\"overlay\" />\n      </VectorSourceCmp>\n    </VectorLayerCmp>\n  </div>\n</template>\n\n<script>\n  import { Map, View } from 'ol'\n  import MapBrowserEventType from 'ol/MapBrowserEventType'\n  import MapEventType from 'ol/MapEventType'\n  import { get as getProj } from 'ol/proj'\n  import RenderEventType from 'ol/render/EventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { distinctUntilChanged, map as mapObs, tap } from 'rxjs/operators'\n  import {\n    controlsContainer,\n    featuresContainer,\n    FRAME_TIME,\n    interactionsContainer,\n    layersContainer,\n    makeChangeOrRecreateWatchers,\n    olCmp,\n    overlaysContainer,\n    projTransforms,\n  } from '../../mixins'\n  import {\n    EPSG_3857,\n    getControlId,\n    getInteractionId,\n    getLayerId,\n    getMapDataProjection,\n    getMapId,\n    getOverlayId,\n    getViewId,\n    roundPointCoords,\n    setMapDataProjection,\n    setMapId,\n  } from '../../ol-ext'\n  import {\n    bufferDebounceTime,\n    fromOlChangeEvent as obsFromOlChangeEvent,\n    fromOlEvent as obsFromOlEvent,\n    fromVueEvent as obsFromVueEvent,\n    fromVueWatcher as obsFromVueWatcher,\n  } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    clonePlainObject,\n    coalesce,\n    isArray,\n    isEqual,\n    map,\n    mergeDescriptors,\n    omit,\n  } from '../../utils'\n  import { Layer as VectorLayerCmp } from '../vector-layer'\n  import { Source as VectorSourceCmp } from '../vector-source'\n  import ViewCmp from './view.vue'\n\n  /**\n   * Container for **layers**, **interactions**, **controls** and **overlays**. It responsible for viewport\n   * rendering and low level interaction events.\n   *\n   * todo make render function that injects VlView if it is not provided by the user,\n   *      then it can be provided to lower components\n   */\n  export default {\n    name: 'VlMap',\n    components: {\n      ViewCmp,\n      VectorLayerCmp,\n      VectorSourceCmp,\n    },\n    mixins: [\n      projTransforms,\n      layersContainer,\n      controlsContainer,\n      interactionsContainer,\n      overlaysContainer,\n      featuresContainer,\n      olCmp,\n    ],\n    props: {\n      /**\n       * Options for default controls added to the map by default. Set to `false` to disable all map controls. Object\n       * value is used to configure controls.\n       * @type {Object|boolean}\n       * @todo remove when vl-control-* components will be ready\n       */\n      defaultControls: {\n        type: [Object, Boolean],\n        default: true,\n      },\n      /**\n       * Options for default interactions added to the map by default. Object\n       * value is used to configure default interactions.\n       * @type {Object|boolean}\n       */\n      defaultInteractions: {\n        type: [Object, Boolean],\n        default: true,\n      },\n      /**\n       * The element to listen to keyboard events on. For example, if this option is set to `document` the keyboard\n       * interactions will always trigger. If this option is not specified, the element the library listens to keyboard\n       * events on is the component root element.\n       * @type {string|Element|Document|undefined}\n       */\n      keyboardEventTarget: [String, Element, Document],\n      /**\n       * The minimum distance in pixels the cursor must move to be detected as a map move event instead of a click.\n       * Increasing this value can make it easier to click on the map.\n       * @type {number}\n       */\n      moveTolerance: {\n        type: Number,\n        default: 1,\n      },\n      /**\n       * The ratio between physical pixels and device-independent pixels (dips) on the device.\n       * @type {number}\n       */\n      pixelRatio: {\n        type: Number,\n        default: () => window.devicePixelRatio || 1,\n      },\n      /**\n       * Maximum number tiles to load simultaneously.\n       * @type {number}\n       */\n      maxTilesLoading: {\n        type: Number,\n        default: 16,\n      },\n      /**\n       * Root element `tabindex` attribute value. Value should be provided to allow keyboard events on map.\n       * @type {number|string}\n       */\n      tabindex: [String, Number],\n      /**\n       * Projection for input/output coordinates in plain data.\n       * @type {string|undefined}\n       */\n      dataProjection: {\n        type: String,\n        validator: value => getProj(value) != null,\n      },\n      /**\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * @type {boolean}\n       */\n      updateWhileAnimating: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * @type {boolean}\n       */\n      updateWhileInteracting: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        withCustomView: false,\n        size: undefined,\n        currentDataProjection: this.dataProjection,\n      }\n    },\n    computed: {\n      resolvedDataProjection () {\n        return coalesce(\n          this.currentDataProjection,\n          this.dataProjection,\n          this.$options?.dataProjection,\n          this.viewProjection,\n        )\n      },\n      view () {\n        if (!(this.rev && this.$view)) return\n\n        return {\n          id: getViewId(this.$view),\n          type: this.$view.constructor.name,\n        }\n      },\n      /**\n       * @returns {string[]}\n       */\n      layers () {\n        if (!this.rev) return []\n\n        return map(this.getLayers(), layer => ({\n          id: getLayerId(layer),\n          type: layer.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      controls () {\n        if (!this.rev) return []\n\n        return map(this.getControls(), control => ({\n          id: getControlId(control),\n          type: control.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      interactions () {\n        if (!this.rev) return []\n\n        return map(this.getInteractions(), interaction => ({\n          id: getInteractionId(interaction),\n          type: interaction.constructor.name,\n        }))\n      },\n      /**\n       * @returns {string[]}\n       */\n      overlays () {\n        if (!this.rev) return []\n\n        return map(this.getOverlays(), overlay => ({\n          id: getOverlayId(overlay),\n          type: overlay.constructor.name,\n        }))\n      },\n      /**\n       * @type {Object[]}\n       */\n      featuresDataProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n      },\n      /**\n       * @type {Object[]}\n       */\n      featuresViewProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$map) return\n\n        if (!isEqual(this.size, this.$map.getSize())) {\n          this.size = this.$map.getSize()\n        }\n      },\n      size: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:size', value?.slice())\n        },\n      },\n      defaultControls: {\n        deep: true,\n        handler (value) {\n          this.initDefaultControls(value)\n        },\n      },\n      defaultInteractions: {\n        deep: true,\n        handler (value) {\n          this.initDefaultInteractions(value)\n        },\n      },\n      dataProjection (value) {\n        this.setDataProjection(value)\n      },\n      view: {\n        deep: true,\n        handler (value, prev) {\n          if (value === prev) return\n\n          this.$emit('update:view', value)\n        },\n      },\n      layers: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:layers', value.slice())\n        },\n      },\n      controls: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:controls', value.slice())\n        },\n      },\n      interactions: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:interactions', value.slice())\n        },\n      },\n      overlays: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:overlays', value.slice())\n        },\n      },\n      featuresDataProj: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          this.$emit('update:features', clonePlainObject(value))\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'keyboardEventTarget',\n        'moveTolerance',\n        'pixelRatio',\n        'maxTilesLoading',\n      ]),\n    },\n    created () {\n      /**\n       * @type {module:ol/View~View}\n       * @private\n       */\n      this._view = new View({\n        center: [0, 0],\n        zoom: 2,\n      })\n      /**\n       * @type {Object|undefined}\n       */\n      this._viewVm = undefined\n\n      this::defineServices()\n      // todo wrap controls into components and provide vl-control-default\n      this.initDefaultControls(this.defaultControls)\n      // todo initialize without interactions and provide vl-interaction-default component\n      this.initDefaultInteractions(this.defaultInteractions)\n    },\n    methods: {\n      /**\n       * @return {module:ol/Map~Map}\n       * @protected\n       */\n      async createOlObject () {\n        const map = new Map({\n          pixelRatio: this.pixelRatio,\n          moveTolerance: this.moveTolerance,\n          keyboardEventTarget: this.keyboardEventTarget,\n          maxTilesLoading: this.maxTilesLoading,\n          controls: this.$controlsCollection,\n          interactions: this.$interactionsCollection,\n          layers: this.$layersCollection,\n          overlays: this.$overlaysCollection,\n          view: this.$view,\n        })\n        setMapId(map, this.currentId)\n        setMapDataProjection(map, this.resolvedDataProjection)\n        this.size && map.setSize(this.size)\n\n        return map\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.setTarget(this.$el)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.setTarget(null)\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::layersContainer.methods.subscribeAll()\n        this::controlsContainer.methods.subscribeAll()\n        this::interactionsContainer.methods.subscribeAll()\n        this::overlaysContainer.methods.subscribeAll()\n        this::featuresContainer.methods.subscribeAll()\n        this::subscribeToEvents()\n\n        // view projection can be changed in runtime only through vl-view vm\n        this.subscribeTo(\n          obsFromVueWatcher(this, () => this.$viewVm?.resolvedViewProjection),\n          ({ value }) => { this.viewProjection = value || EPSG_3857 },\n        )\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        const vm = this\n\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::layersContainer.methods.getServices(),\n          this::controlsContainer.methods.getServices(),\n          this::interactionsContainer.methods.getServices(),\n          this::overlaysContainer.methods.getServices(),\n          this::featuresContainer.methods.getServices(),\n          {\n            get mapVm () { return vm },\n            get viewVm () { return vm.$viewVm },\n            get viewContainer () { return vm },\n          },\n        )\n      },\n      /**\n       * @return {string|number}\n       * @protected\n       */\n      getIdInternal () {\n        return getMapId(this.$map)\n      },\n      /**\n       * @param {string|number} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setMapId(this.$map, id)\n      },\n      /**\n       * @return {Promise<module:ol/Map~Map>}\n       */\n      resolveMap: olCmp.methods.resolveOlObject,\n      /**\n       * @param {number[]} pixel\n       * @param {function} callback\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async forEachFeatureAtPixel (pixel, callback, opts = {}) {\n        return (await this.resolveMap()).forEachFeatureAtPixel(pixel, callback, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {function} callback\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async forEachLayerAtPixel (pixel, callback, opts = {}) {\n        return (await this.resolveMap()).forEachLayerAtPixel(pixel, callback, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>} Coordinates in the map view projection.\n       */\n      async getCoordinateFromPixel (pixel, viewProj = false) {\n        const coordinate = (await this.resolveMap()).getCoordinateFromPixel(pixel)\n        if (viewProj) {\n          return roundPointCoords(coordinate)\n        }\n\n        return this.pointToDataProj(coordinate)\n      },\n      /**\n       * @param {Event} event\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async getEventCoordinate (event, viewProj = false) {\n        const coordinate = (await this.resolveMap()).getEventCoordinate(event)\n        if (viewProj) {\n          return roundPointCoords(coordinate)\n        }\n\n        return this.pointToDataProj(coordinate)\n      },\n      /**\n       * @param {Event} event\n       * @return {Promise<number[]>}\n       */\n      async getEventPixel (event) {\n        return (await this.resolveMap()).getEventPixel(event)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {Object} [opts]\n       * @return {Promise}\n       */\n      async getFeaturesAtPixel (pixel, opts = {}) {\n        return (await this.resolveMap()).getFeaturesAtPixel(pixel, opts)\n      },\n      /**\n       * @param {number[]} pixel\n       * @param {Object} [options]\n       * @return {Promise<boolean>}\n       */\n      async hasFeatureAtPixel (pixel, options = {}) {\n        return (await this.resolveMap()).hasFeatureAtPixel(pixel, options)\n      },\n      /**\n       * @param {number[]} coordinate Coordinates in map view projection\n       * @param {boolean} [viewProj=false]\n       * @return {Promise<number[]>}\n       */\n      async getPixelFromCoordinate (coordinate, viewProj = false) {\n        if (!viewProj) {\n          coordinate = this.pointToViewProj(coordinate)\n        }\n\n        return (await this.resolveMap()).getPixelFromCoordinate(coordinate)\n      },\n      /**\n       * @return {number[]|undefined}\n       */\n      getSize () {\n        return coalesce(this.$map?.getSize(), this.size)\n      },\n      /**\n       * @param {number[]} size\n       */\n      setSize (size) {\n        assert(isArray(size) && size.length === 2, 'Invalid size')\n        size = size.slice()\n\n        if (!isEqual(size, this.size)) {\n          this.size = size\n        }\n        if (this.$map && !isEqual(size, this.$map.getSize())) {\n          this.$map.setSize(size)\n        }\n      },\n      /**\n       * Updates map size.\n       * @return {Promise<void>}\n       */\n      async updateSize () {\n        (await this.resolveMap()).updateSize()\n      },\n      /**\n       * @return {Promise<void>}\n       */\n      async render () {\n        const map = await this.resolveMap()\n\n        return new Promise(resolve => {\n          map.once('postrender', () => resolve())\n          map.render()\n        })\n      },\n      /**\n       * @return {HTMLElement|undefined}\n       */\n      getTarget () {\n        return coalesce(this.$map?.getTarget(), this.$el)\n      },\n      /**\n       * @param {HTMLElement} target\n       */\n      setTarget (target) {\n        if (this.$map && target !== this.$map.getTarget()) {\n          this.$map.setTarget(target)\n          this.$emit('update:target', target)\n        }\n      },\n      /**\n       * @return {HTMLElement|undefined}\n       */\n      getViewport () {\n        return this.$map?.getViewport()\n      },\n      /**\n       * @return {module:ol/View~View|undefined}\n       */\n      getView () {\n        return coalesce(this.$map?.getView(), this._view)\n      },\n      /**\n       * @return {Object}\n       */\n      getViewVm () {\n        return this._viewVm\n      },\n      /**\n       * @param {module:ol/View~View|Vue|undefined} view\n       */\n      setView (view) {\n        view = view?.$view || view\n        assert(!view || view instanceof View, 'Invalid view')\n\n        if (view !== this._view) {\n          this._view = view\n          this._viewVm = view?.vm && view?.vm[0]\n        }\n        if (this.$map && view !== this.$map.getView()) {\n          this.$map.setView(view)\n        }\n\n        this.scheduleRefresh()\n      },\n      /**\n       * @return {module:ol/proj~ProjectionLike|undefined}\n       */\n      getDataProjection () {\n        return coalesce(this.$map && getMapDataProjection(this.$map), this.resolvedDataProjection)\n      },\n      /**\n       * @param {module:ol/proj~ProjectionLike} projection\n       */\n      setDataProjection (projection) {\n        projection = getProj(projection)\n        assert(projection != null, 'Invalid projection')\n\n        if (projection.getCode() !== this.currentDataProjection) {\n          this.currentDataProjection = projection.getCode()\n        }\n        if (this.$map && projection.getCode() !== getMapDataProjection(this.$map)) {\n          setMapDataProjection(this.$map, projection.getCode())\n        }\n      },\n      /**\n       * Triggers focus on map container.\n       */\n      focus () {\n        this.$el.focus()\n      },\n      /**\n       * Updates map size and re-renders map.\n       * @return {Promise}\n       */\n      async refresh () {\n        await this.updateSize()\n        await this.render()\n\n        return this::olCmp.methods.refresh()\n      },\n      isInteracting () {\n        if (!this.$map) return false\n\n        return this.getInteractions().some(interaction => !!interaction.get('interacting'))\n      },\n      /**\n       * @param {Object} sourceVm\n       * @protected\n       */\n      featuresOverlaySourceCreated (sourceVm) {\n        sourceVm.addFeatures(this.getFeatures())\n\n        const adds = obsFromVueEvent(this, 'addfeature').pipe(\n          mapObs(({ feature }) => feature),\n          bufferDebounceTime(FRAME_TIME),\n        )\n        this.subscribeTo(adds, features => sourceVm.addFeatures(features))\n\n        const removes = obsFromVueEvent(this, 'removefeature').pipe(\n          mapObs(({ feature }) => feature),\n          bufferDebounceTime(FRAME_TIME),\n        )\n        this.subscribeTo(removes, features => sourceVm.removeFeatures(features))\n      },\n      /**\n       * @protected {string} value\n       * @protected\n       */\n      resolvedDataProjectionChanged (value) {\n        if (value === this.dataProjection) return\n\n        this.$emit('update:dataProjection', value)\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      /**\n       * OpenLayers map instance.\n       * @type {module:ol/Map~Map|undefined}\n       */\n      $map: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {module:ol/View~View|undefined}\n       */\n      $view: {\n        enumerable: true,\n        get: this.getView,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: this.getViewVm,\n      },\n      $featuresOverlayVm: {\n        enumerable: true,\n        get: () => this.$refs?.featuresOverlay,\n      },\n      $featuresOverlaySourceVm: {\n        enumerable: true,\n        get: () => this.$refs?.featuresOverlaySource,\n      },\n    })\n  }\n\n  /**\n   * Subscribe to OL map events.\n   *\n   * @return {void}\n   * @private\n   */\n  async function subscribeToEvents () {\n    const setterKey = addPrefix('set')\n    const viewChanges = obsFromOlChangeEvent(this.$map, 'view', true).pipe(\n      tap(({ value: view }) => {\n        if (this._viewSubs) {\n          this.unsubscribe(this._viewSubs)\n        }\n        if (view) {\n          this._viewSubs = this.subscribeTo(\n            obsFromOlChangeEvent(view, 'id', true),\n            ::this.scheduleRefresh,\n          )\n        }\n        this.viewProjection = view?.getProjection().getCode() || EPSG_3857\n        this.withCustomView = view && (!view.vm || view.vm.some(vm => vm !== this.$refs.view))\n      }),\n    )\n    const propChanges = mergeObs(\n      viewChanges,\n      obsFromOlChangeEvent(this.$map, [\n        'dataProjection',\n        'size',\n        'target',\n        // 'layerGroup', FIXME not ready\n      ], true),\n    ).pipe(\n      mapObs(evt => ({\n        ...evt,\n        setter: this[setterKey(evt.prop)],\n      })),\n    )\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n    // pointer\n    const pointerEvents = mergeObs(\n      obsFromOlEvent(this.$map, [\n        MapBrowserEventType.CLICK,\n        MapBrowserEventType.DBLCLICK,\n        MapBrowserEventType.SINGLECLICK,\n      ]),\n      obsFromOlEvent(this.$map, [\n        MapBrowserEventType.POINTERDRAG,\n        MapBrowserEventType.POINTERMOVE,\n      ], null, [\n        distinctUntilChanged((a, b) => isEqual({\n          t: a.type,\n          c: a.coordinate,\n        }, {\n          t: b.type,\n          c: b.coordinate,\n        })),\n      ]),\n    ).pipe(\n      mapObs(evt => omit({\n        ...evt,\n        pixel: evt.pixel,\n        coordinate: this.pointToDataProj(evt.coordinate),\n      }, [\n        'pixel_',\n        'coordinate_',\n      ])),\n    )\n    // other\n    const otherEvents = obsFromOlEvent(this.$map, [\n      MapEventType.MOVESTART,\n      MapEventType.MOVEEND,\n      MapEventType.POSTRENDER,\n      RenderEventType.PRECOMPOSE,\n      RenderEventType.POSTCOMPOSE,\n      RenderEventType.RENDERCOMPLETE,\n    ])\n    this.subscribeTo(mergeObs(pointerEvents, otherEvents), evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Map from './map.vue'\nimport View from './view.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Map, options)\n  Object.assign(View, options)\n\n  Vue.component(Map.name, Map)\n  Vue.component(View.name, View)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Map,\n  View,\n}\n","\nimport { source, urlTileSource, xyzSource } from '../../mixins'\nimport { coalesce } from '../../utils'\n\nconst MAPBOX_URL_TEMPLATE = 'https://{a-c}.tiles.mapbox.com/v4/{mapId}/{z}/{x}/{y}{tileNameSuffix}.{tileFormat}?access_token={accessToken}'\nconst MAPBOX_ATTRIBUTIONS = '&copy; <a href=\"https://www.mapbox.com/\" target=\"_blank\">MapBox</a>.'\n\nexport default {\n  name: 'VlSourceMapbox',\n  mixins: [\n    xyzSource,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    // ol/source/Source\n    attributions: {\n      ...source.props.attributions,\n      default: MAPBOX_ATTRIBUTIONS,\n    },\n    // ol/source/UrlTile\n    url: {\n      ...urlTileSource.props.url,\n      default: MAPBOX_URL_TEMPLATE,\n    },\n    /* eslint-enable vue/require-prop-types */\n    // custom\n    accessToken: {\n      type: String,\n      required: true,\n    },\n    mapId: {\n      type: String,\n      required: true,\n    },\n    tileFormat: {\n      type: String,\n      default: 'png',\n    },\n  },\n  computed: {\n    /**\n     * @type {string}\n     */\n    tileNameSuffix () {\n      return tileNameSuffix(this.tilePixelRatio)\n    },\n    /**\n     * @type {string[]}\n     */\n    urlTokens () {\n      return ['mapId', 'accessToken', 'tileNameSuffix', 'tileFormat']\n    },\n  },\n}\n\n/**\n * @param {number} [ratio]\n * @returns {number}\n * @private\n */\nfunction tileRatio (ratio) {\n  ratio = coalesce(ratio, 1)\n\n  return ratio > 1 ? 2 : 1\n}\n\n/**\n * @param {number} [ratio]\n * @returns {string}\n * @private\n */\nfunction tileNameSuffix (ratio) {\n  ratio = tileRatio(ratio)\n\n  return ratio > 1 ? ['@', ratio, 'x'].join('') : ''\n}\n","<script>\n  import { source, urlTileSource, xyzSource } from '../../mixins'\n  import { coalesce } from '../../utils'\n\n  const MAPBOX_URL_TEMPLATE = 'https://{a-c}.tiles.mapbox.com/v4/{mapId}/{z}/{x}/{y}{tileNameSuffix}.{tileFormat}?access_token={accessToken}'\n  const MAPBOX_ATTRIBUTIONS = '&copy; <a href=\"https://www.mapbox.com/\" target=\"_blank\">MapBox</a>.'\n\n  export default {\n    name: 'VlSourceMapbox',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: MAPBOX_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: MAPBOX_URL_TEMPLATE,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // custom\n      accessToken: {\n        type: String,\n        required: true,\n      },\n      mapId: {\n        type: String,\n        required: true,\n      },\n      tileFormat: {\n        type: String,\n        default: 'png',\n      },\n    },\n    computed: {\n      /**\n       * @type {string}\n       */\n      tileNameSuffix () {\n        return tileNameSuffix(this.tilePixelRatio)\n      },\n      /**\n       * @type {string[]}\n       */\n      urlTokens () {\n        return ['mapId', 'accessToken', 'tileNameSuffix', 'tileFormat']\n      },\n    },\n  }\n\n  /**\n   * @param {number} [ratio]\n   * @returns {number}\n   * @private\n   */\n  function tileRatio (ratio) {\n    ratio = coalesce(ratio, 1)\n\n    return ratio > 1 ? 2 : 1\n  }\n\n  /**\n   * @param {number} [ratio]\n   * @returns {string}\n   * @private\n   */\n  function tileNameSuffix (ratio) {\n    ratio = tileRatio(ratio)\n\n    return ratio > 1 ? ['@', ratio, 'x'].join('') : ''\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { VectorTile as VectorTileLayer } from 'ol/layer'\nimport RenderType from 'ol/layer/VectorTileRenderType'\nimport { makeChangeOrRecreateWatchers, tileLayer, vectorLayer } from '../../mixins'\n\nexport default {\n  name: 'VlLayerVectorTile',\n  mixins: [\n    tileLayer,\n    vectorLayer,\n  ],\n  props: {\n    renderMode: {\n      type: String,\n      default: RenderType.HYBRID,\n      validator: val => Object.values(RenderType).includes(val),\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'renderMode',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {VectorTileLayer}\n     * @protected\n     */\n    createLayer () {\n      return new VectorTileLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Layer\n        render: this.render,\n        source: this.$source,\n        // ol/layer/BaseVector\n        renderOrder: this.renderOrder,\n        renderBuffer: this.renderBuffer,\n        declutter: this.declutter,\n        updateWhileAnimating: this.updateWhileAnimating,\n        updateWhileInteracting: this.updateWhileInteracting,\n        style: this.$style,\n        // ol/layer/VectorTile\n        // tile layer props\n        preload: this.currentPreload,\n        useInterimTilesOnError: this.currentUseInterimTilesOnError,\n        // vector tile props\n        renderMode: this.renderMode,\n      })\n    },\n  },\n}\n","<script>\n  import { VectorTile as VectorTileLayer } from 'ol/layer'\n  import RenderType from 'ol/layer/VectorTileRenderType'\n  import { makeChangeOrRecreateWatchers, tileLayer, vectorLayer } from '../../mixins'\n\n  export default {\n    name: 'VlLayerVectorTile',\n    mixins: [\n      tileLayer,\n      vectorLayer,\n    ],\n    props: {\n      renderMode: {\n        type: String,\n        default: RenderType.HYBRID,\n        validator: val => Object.values(RenderType).includes(val),\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'renderMode',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {VectorTileLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorTileLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/VectorTile\n          // tile layer props\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n          // vector tile props\n          renderMode: this.renderMode,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { MapboxVector as MapboxVectorLayer } from 'ol/layer'\nimport { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\nimport { isArray, isString } from '../../utils'\nimport { Layer } from '../vector-tile-layer'\n\nexport default {\n  name: 'VlLayerMapboxVector',\n  extends: Layer,\n  props: {\n    styleUrl: {\n      type: String,\n      required: true,\n    },\n    accessToken: {\n      type: String,\n      required: true,\n    },\n    sourceId: String,\n    layerIds: {\n      type: Array,\n      validate: val => isArray(val) && val.every(isString),\n    },\n    // eslint-disable-next-line vue/require-prop-types\n    declutter: {\n      ...vectorLayer.props.declutter,\n      default: true,\n    },\n  },\n  watch: {\n    /*#__PURE__*/...makeChangeOrRecreateWatchers([\n      'styleUrl',\n      'accessToken',\n      'sourceId',\n      'layerIds',\n    ], [\n      'layerIds',\n    ]),\n  },\n  methods: {\n    /**\n     * @returns {HeatmapLayer}\n     */\n    createLayer () {\n      return new MapboxVectorLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/BaseVector\n        renderOrder: this.renderOrder,\n        renderBuffer: this.renderBuffer,\n        declutter: this.declutter,\n        updateWhileAnimating: this.updateWhileAnimating,\n        updateWhileInteracting: this.updateWhileInteracting,\n        // ol/layer/Tile\n        preload: this.currentPreload,\n        useInterimTilesOnError: this.currentUseInterimTilesOnError,\n        // ol/layer/MapboxVector\n        styleUrl: this.styleUrl,\n        accessToken: this.accessToken,\n        source: this.sourceId,\n        layers: this.layerIds,\n      })\n    },\n  },\n}\n","<script>\n  import { MapboxVector as MapboxVectorLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n  import { isArray, isString } from '../../utils'\n  import { Layer } from '../vector-tile-layer'\n\n  export default {\n    name: 'VlLayerMapboxVector',\n    extends: Layer,\n    props: {\n      styleUrl: {\n        type: String,\n        required: true,\n      },\n      accessToken: {\n        type: String,\n        required: true,\n      },\n      sourceId: String,\n      layerIds: {\n        type: Array,\n        validate: val => isArray(val) && val.every(isString),\n      },\n      // eslint-disable-next-line vue/require-prop-types\n      declutter: {\n        ...vectorLayer.props.declutter,\n        default: true,\n      },\n    },\n    watch: {\n      /*#__PURE__*/...makeChangeOrRecreateWatchers([\n        'styleUrl',\n        'accessToken',\n        'sourceId',\n        'layerIds',\n      ], [\n        'layerIds',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {HeatmapLayer}\n       */\n      createLayer () {\n        return new MapboxVectorLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          // ol/layer/Tile\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n          // ol/layer/MapboxVector\n          styleUrl: this.styleUrl,\n          accessToken: this.accessToken,\n          source: this.sourceId,\n          layers: this.layerIds,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { Collection } from 'ol'\nimport { altKeyOnly, always, primaryAction } from 'ol/events/condition'\nimport { Modify as ModifyInteraction } from 'ol/interaction'\nimport { Vector as VectorSource } from 'ol/source'\nimport { merge as mergeObs } from 'rxjs'\nimport { map as mapObs, tap } from 'rxjs/operators'\nimport { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\nimport { COORD_PRECISION, writeGeoJsonFeature } from '../../ol-ext'\nimport { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\nimport { assert, instanceOf, isFunction, map, mergeDescriptors } from '../../utils'\n\nexport default {\n  name: 'VlInteractionModify',\n  mixins: [\n    interaction,\n    styleContainer,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  props: {\n    /**\n     * Source or collection identifier from IdentityMap.\n     * @type {String}\n     */\n    source: {\n      type: String,\n      required: true,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event will be\n     * considered to add or move a vertex to the sketch. Default is `ol.events.condition.primaryAction`.\n     * @type {function|undefined}\n     */\n    condition: {\n      type: Function,\n      default: primaryAction,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n     * By default, `ol.events.condition.singleClick` with `ol.events.condition.altKeyOnly` results in a vertex deletion.\n     * @type {function|undefined}\n     */\n    deleteCondition: {\n      type: Function,\n      default: altKeyOnly,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether a new vertex can be added\n     * to the sketch features. Default is `ol.events.condition.always`.\n     * @type {function|undefined}\n     */\n    insertVertexCondition: {\n      type: Function,\n      default: always,\n    },\n    /**\n     * Pixel tolerance for considering the pointer close enough to a segment or vertex for editing.\n     * @type {number}\n     */\n    pixelTolerance: {\n      type: Number,\n      default: 10,\n    },\n    /**\n     * Wrap the world horizontally on the sketch overlay.\n     * @type {boolean}\n     */\n    wrapX: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'source',\n      'condition',\n      'deleteCondition',\n      'insertVertexCondition',\n      'pixelTolerance',\n      'wrapX',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {Promise<Modify>}\n     * @protected\n     */\n    async createInteraction () {\n      let source = this._source = await this.getInstance(this.source)\n      assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n      let features\n      if (source instanceof VectorSource) {\n        features = source.getFeaturesCollection()\n        if (features) {\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n      } else {\n        if (isFunction(source.getFeaturesCollection)) {\n          features = source.getFeaturesCollection()\n        } else if (isFunction(source.getFeatures)) {\n          features = source.getFeatures()\n        }\n        instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        source = null\n      }\n\n      return new ModifyInteraction({\n        source,\n        features,\n        condition: this.condition,\n        deleteCondition: this.deleteCondition,\n        insertVertexCondition: this.insertVertexCondition,\n        pixelTolerance: this.pixelTolerance,\n        wrapX: this.wrapX,\n        style: this.$style,\n      })\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      return mergeDescriptors(\n        this::interaction.methods.getServices(),\n        this::styleContainer.methods.getServices(),\n      )\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::interaction.methods.subscribeAll()\n      this::subscribeToInteractionChanges()\n    },\n    /**\n     * @return {StyleTarget}\n     * @protected\n     */\n    getStyleTarget () {\n      return {\n        getStyle: () => this._style,\n        setStyle: () => {\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log('style changed, scheduling recreate...')\n          }\n\n          this.scheduleRecreate()\n        },\n      }\n    },\n    async getOverlay () {\n      return (await this.resolveInteraction()).getOverlay()\n    },\n    async getPointerCount () {\n      return (await this.resolveInteraction()).getPointerCount()\n    },\n    async removePoint () {\n      return (await this.resolveInteraction()).removePoint()\n    },\n  },\n}\n\n/**\n * @private\n */\nfunction subscribeToInteractionChanges () {\n  let modifying\n  const start = obsFromOlEvent(this.$interaction, 'modifystart').pipe(\n    tap(evt => {\n      this.setInteracting(true)\n      modifying = []\n      evt.features.forEach(feature => {\n        modifying[feature.getId()] = feature.getRevision()\n      })\n    }),\n  )\n  const end = obsFromOlEvent(this.$interaction, 'modifyend').pipe(\n    mapObs(evt => ({\n      ...evt,\n      modified: evt.features.getArray().reduce((modified, feature, idx) => {\n        if (modifying[feature.getId()] !== feature.getRevision()) {\n          modified[idx] = feature.getId()\n        }\n        return modified\n      }, {}),\n    })),\n    tap(() => this.setInteracting(false)),\n  )\n  const events = mergeObs(start, end).pipe(\n    mapObs(({ type, features, modified }) => {\n      const viewProj = this.resolvedViewProjection\n      const dataProj = this.resolvedDataProjection\n      return {\n        type,\n        features: features instanceof Collection ? features.getArray() : features,\n        modified: modified || {},\n        get json () {\n          if (!this._json) {\n            this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n          }\n          return this._json\n        },\n      }\n    }),\n  )\n  this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n}\n","<script>\n  import { Collection } from 'ol'\n  import { altKeyOnly, always, primaryAction } from 'ol/events/condition'\n  import { Modify as ModifyInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { assert, instanceOf, isFunction, map, mergeDescriptors } from '../../utils'\n\n  export default {\n    name: 'VlInteractionModify',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event will be\n       * considered to add or move a vertex to the sketch. Default is `ol.events.condition.primaryAction`.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: primaryAction,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default, `ol.events.condition.singleClick` with `ol.events.condition.altKeyOnly` results in a vertex deletion.\n       * @type {function|undefined}\n       */\n      deleteCondition: {\n        type: Function,\n        default: altKeyOnly,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether a new vertex can be added\n       * to the sketch features. Default is `ol.events.condition.always`.\n       * @type {function|undefined}\n       */\n      insertVertexCondition: {\n        type: Function,\n        default: always,\n      },\n      /**\n       * Pixel tolerance for considering the pointer close enough to a segment or vertex for editing.\n       * @type {number}\n       */\n      pixelTolerance: {\n        type: Number,\n        default: 10,\n      },\n      /**\n       * Wrap the world horizontally on the sketch overlay.\n       * @type {boolean}\n       */\n      wrapX: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'condition',\n        'deleteCondition',\n        'insertVertexCondition',\n        'pixelTolerance',\n        'wrapX',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (features) {\n            instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n            source = null\n          }\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new ModifyInteraction({\n          source,\n          features,\n          condition: this.condition,\n          deleteCondition: this.deleteCondition,\n          insertVertexCondition: this.insertVertexCondition,\n          pixelTolerance: this.pixelTolerance,\n          wrapX: this.wrapX,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      async getOverlay () {\n        return (await this.resolveInteraction()).getOverlay()\n      },\n      async getPointerCount () {\n        return (await this.resolveInteraction()).getPointerCount()\n      },\n      async removePoint () {\n        return (await this.resolveInteraction()).removePoint()\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    let modifying\n    const start = obsFromOlEvent(this.$interaction, 'modifystart').pipe(\n      tap(evt => {\n        this.setInteracting(true)\n        modifying = []\n        evt.features.forEach(feature => {\n          modifying[feature.getId()] = feature.getRevision()\n        })\n      }),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'modifyend').pipe(\n      mapObs(evt => ({\n        ...evt,\n        modified: evt.features.getArray().reduce((modified, feature, idx) => {\n          if (modifying[feature.getId()] !== feature.getRevision()) {\n            modified[idx] = feature.getId()\n          }\n          return modified\n        }, {}),\n      })),\n      tap(() => this.setInteracting(false)),\n    )\n    const events = mergeObs(start, end).pipe(\n      mapObs(({ type, features, modified }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          modified: modified || {},\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\nimport { OSM as OSMSource } from 'ol/source'\nimport { makeChangeOrRecreateWatchers, source, urlTileSource, xyzSource } from '../../mixins'\nimport { noop } from '../../utils'\n\nconst OSM_ATTRIBUTIONS = '&copy; <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> contributors.'\nconst OSM_URL_TEMPLATE = 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\nconst OSM_MAX_ZOOM = 19\n\nexport default {\n  name: 'VlSourceOsm',\n  mixins: [\n    xyzSource,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    // ol/source/Source\n    attributions: {\n      ...source.props.attributions,\n      default: OSM_ATTRIBUTIONS,\n    },\n    // ol/source/UrlTile\n    url: {\n      ...urlTileSource.props.url,\n      default: OSM_URL_TEMPLATE,\n    },\n    // ol/source/XYZ\n    maxZoom: {\n      ...xyzSource.props.maxZoom,\n      default: OSM_MAX_ZOOM,\n    },\n    /* eslint-enable vue/require-prop-types */\n  },\n  computed: {\n    tileGridIdent: noop,\n    inputTileGridFactory: noop,\n    inputTileUrlFunction: noop,\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'inputUrl',\n      'maxZoom',\n    ]),\n  },\n  methods: {\n    createSource () {\n      // always EPSG:3857, size: 256x256, format png\n      return new OSMSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        wrapX: this.wrapX,\n        // ol/source/Tile\n        cacheSize: this.cacheSize,\n        opaque: this.opaque,\n        // ol/source/UrlTile\n        tileLoadFunction: this.currentTileLoadFunction,\n        url: this.currentUrls[0],\n        // ol/source/TileImage\n        crossOrigin: this.crossOrigin,\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        imageSmoothing: this.imageSmoothing,\n        // ol/source/XYZ\n        maxZoom: this.maxZoom,\n      })\n    },\n    inputUrlChanged (value) {\n      this.setUrl(value)\n    },\n    // skip all other handlers\n    tileClassChanged: noop,\n    inputTileUrlFunctionChanged: noop,\n    inputTileGridFactoryChanged: noop,\n    tileGridChanged: noop,\n    tilePixelRatioChanged: noop,\n    transitionChanged: noop,\n    zDirectionChanged: noop,\n    attributionsCollapsibleChanged: noop,\n    projectionChanged: noop,\n  },\n}\n","<script>\n  import { OSM as OSMSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, source, urlTileSource, xyzSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  const OSM_ATTRIBUTIONS = '&copy; <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> contributors.'\n  const OSM_URL_TEMPLATE = 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n  const OSM_MAX_ZOOM = 19\n\n  export default {\n    name: 'VlSourceOsm',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: OSM_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: OSM_URL_TEMPLATE,\n      },\n      // ol/source/XYZ\n      maxZoom: {\n        ...xyzSource.props.maxZoom,\n        default: OSM_MAX_ZOOM,\n      },\n      /* eslint-enable vue/require-prop-types */\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputUrl',\n        'maxZoom',\n      ]),\n    },\n    methods: {\n      createSource () {\n        // always EPSG:3857, size: 256x256, format png\n        return new OSMSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          url: this.currentUrls[0],\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/XYZ\n          maxZoom: this.maxZoom,\n        })\n      },\n      inputUrlChanged (value) {\n        this.setUrl(value)\n      },\n      // skip all other handlers\n      tileClassChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      tilePixelRatioChanged: noop,\n      transitionChanged: noop,\n      zDirectionChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Overlay } from 'ol'\nimport OverlayPositioning from 'ol/OverlayPositioning'\nimport { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\nimport { EPSG_3857, getOverlayId, initializeOverlay, roundPointCoords, setOverlayId } from '../../ol-ext'\nimport { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\nimport {\n  addPrefix,\n  assert,\n  clonePlainObject,\n  coalesce,\n  identity,\n  isArray,\n  isEqual,\n  isPlainObject,\n} from '../../utils'\n\nexport default {\n  name: 'VlOverlay',\n  mixins: [\n    projTransforms,\n    olCmp,\n    waitForMap,\n  ],\n  props: {\n    offset: {\n      type: Array,\n      default: () => [0, 0],\n      validator: value => value.length === 2,\n    },\n    position: {\n      type: Array,\n      validator: value => value.length === 2,\n      // required: true,\n    },\n    positioning: {\n      type: String,\n      default: OverlayPositioning.TOP_LEFT,\n      validator: value => Object.values(OverlayPositioning).includes(value),\n    },\n    stopEvent: {\n      type: Boolean,\n      default: true,\n    },\n    insertFirst: {\n      type: Boolean,\n      default: true,\n    },\n    autoPan: [Boolean, Object],\n    autoPanMargin: Number,\n    autoPanAnimation: Object,\n    autoPanOptions: Object,\n    className: String,\n  },\n  data () {\n    return {\n      visible: false,\n      viewProjection: EPSG_3857,\n      dataProjection: EPSG_3857,\n      currentOffset: this.offset.slice(),\n      currentPositionViewProj: roundPointCoords(this.position),\n      currentPositioning: this.positioning,\n    }\n  },\n  computed: {\n    positionDataProj () {\n      return roundPointCoords(this.position)\n    },\n    positionViewProj () {\n      return this.pointToViewProj(this.position)\n    },\n    currentPositionDataProj () {\n      return this.pointToDataProj(this.currentPositionViewProj)\n    },\n    inputOffset () {\n      return this.offset.slice()\n    },\n    inputAutoPan () {\n      return isPlainObject(this.autoPan)\n        ? clonePlainObject(this.autoPan)\n        : this.autoPan\n    },\n    inputAutoPanAnimation () {\n      return isPlainObject(this.autoPanAnimation)\n        ? clonePlainObject(this.autoPanAnimation)\n        : this.autoPanAnimation\n    },\n    inputAutoPanOptions () {\n      return isPlainObject(this.autoPanOptions)\n        ? clonePlainObject(this.autoPanOptions)\n        : this.autoPanOptions\n    },\n    classes () {\n      return [\n        this.vmClass,\n        this.visible ? 'visible' : undefined,\n      ].filter(identity)\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$overlay) return\n\n      if (!isEqual(this.currentOffset, this.$overlay.getOffset())) {\n        this.currentOffset = this.$overlay.getOffset()\n      }\n      if (!isEqual(this.currentPositionViewProj, this.$overlay.getPosition())) {\n        this.currentPositionViewProj = this.$overlay.getPosition()\n      }\n      if (this.currentPositioning !== this.$overlay.getPositioning()) {\n        this.currentPositioning = this.$overlay.getPositioning()\n      }\n    },\n    inputOffset: {\n      deep: true,\n      handler (value) {\n        this.setOffset(value)\n      },\n    },\n    currentOffset: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.inputOffset)) return\n\n        this.$emit('update:offset', value.slice())\n      },\n    },\n    positionViewProj: {\n      deep: true,\n      handler (value) {\n        this.setPosition(value, true)\n      },\n    },\n    currentPositionDataProj: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.positionDataProj)) return\n\n        this.$emit('update:position', value?.slice())\n      },\n    },\n    positioning (value) {\n      this.setPositioning(value)\n    },\n    currentPositioning (value) {\n      if (value === this.positioning) return\n\n      this.$emit('update:positioning', value)\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'stopEvent',\n      'insertFirst',\n      'autoPanMargin',\n      'className',\n      'inputAutoPan',\n      'inputAutoPanAnimation',\n      'inputAutoPanOptions',\n    ], [\n      'inputAutoPan',\n      'inputAutoPanAnimation',\n      'inputAutoPanOptions',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async beforeInit () {\n      this::defineServices()\n\n      await Promise.all([\n        this::olCmp.methods.beforeInit(),\n        this::waitForMap.methods.beforeInit(),\n      ])\n    },\n    /**\n     * @return {module:ol/Overlay~Overlay}\n     * @protected\n     */\n    createOlObject () {\n      const overlay = new Overlay({\n        id: this.currentId,\n        element: this.$el,\n        offset: this.currentOffset,\n        position: this.currentPositionViewProj,\n        positioning: this.currentPositioning,\n        stopEvent: this.stopEvent,\n        insertFirst: this.insertFirst,\n        autoPan: this.inputAutoPan,\n        autoPanMargin: this.autoPanMargin,\n        autoPanAnimation: this.inputAutoPanAnimation,\n        autoPanOptions: this.inputAutoPanOptions,\n        className: this.className,\n      })\n      initializeOverlay(overlay, this.currentId)\n\n      return overlay\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.visible = true\n      this.$overlaysContainer?.addOverlay(this.$overlay)\n\n      return this::olCmp.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async unmount () {\n      this.$overlaysContainer?.removeOverlay(this.$overlay)\n      this.visible = false\n\n      return this::olCmp.methods.unmount()\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::olCmp.methods.subscribeAll()\n      this::subscribeToOverlayChanges()\n    },\n    /**\n     * @return {*}\n     * @protected\n     */\n    getIdInternal () {\n      return getOverlayId(this.$overlay)\n    },\n    /**\n     * @param {*} id\n     * @protected\n     */\n    setIdInternal (id) {\n      if (id === this.getIdInternal()) return\n\n      setOverlayId(this.$overlay, id)\n    },\n    /**\n     * @return {Promise<module:ol/Overlay~Overlay>}\n     */\n    resolveOverlay: olCmp.methods.resolveOlObject,\n    getOffset () {\n      return coalesce(this.$overlay?.getOffset(), this.currentOffset)\n    },\n    setOffset (offset) {\n      assert(isArray(offset) && offset.length === 2, 'Invalid offset')\n      offset = offset.slice()\n\n      if (!isEqual(offset, this.currentOffset)) {\n        this.currentOffset = offset\n      }\n      if (this.$overlay && !isEqual(offset, this.$overlay.getOffset())) {\n        this.$overlay.setOffset(offset)\n      }\n    },\n    getPosition (viewProj = false) {\n      if (!this.$overlay) {\n        return viewProj ? this.currentPositionViewProj : this.currentPositionDataProj\n      }\n\n      const position = this.$overlay.getPosition()\n      if (viewProj) return roundPointCoords(position)\n\n      return this.pointToDataProj(position)\n    },\n    setPosition (position, viewProj = false) {\n      assert(position == null || (isArray(position) && position.length === 2), 'Invalid position')\n      position = position?.slice()\n\n      if (!viewProj) {\n        position = this.pointToViewProj(position)\n      }\n\n      if (!isEqual(position, this.currentPositionViewProj)) {\n        this.currentPositionViewProj = position\n      }\n      if (this.$overlay && !isEqual(position, this.$overlay.getPosition())) {\n        this.$overlay.setPosition(position)\n      }\n    },\n    getPositioning () {\n      return this.$overlay?.getPositioning() || this.currentPositioning\n    },\n    setPositioning (positioning) {\n      if (positioning !== this.currentPositioning) {\n        this.currentPositioning = positioning\n      }\n      if (this.$overlay && positioning !== this.$overlay.getPositioning()) {\n        this.$overlay.setPositioning(positioning)\n      }\n    },\n    async panIntoView (options = {}) {\n      (await this.resolveOverlay()).panIntoView(options)\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $overlay: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    $mapVm: {\n      enumerable: true,\n      get: () => this.$services?.mapVm,\n    },\n    $viewVm: {\n      enumerable: true,\n      get: () => this.$services?.viewVm,\n    },\n    $overlaysContainer: {\n      enumerable: true,\n      get: () => this.$services?.overlaysContainer,\n    },\n  })\n}\n\n/**\n * @return {void}\n * @private\n */\nfunction subscribeToOverlayChanges () {\n  const setterKey = addPrefix('set')\n  const propChanges = obsFromOlChangeEvent(this.$overlay, [\n    'offset',\n    'position',\n    'positioning',\n  ], true, evt => ({\n    ...evt,\n    setter: val => {\n      const args = [val]\n      if (evt.prop === 'position') {\n        args.push(true)\n      }\n      this[setterKey(evt.prop)](...args)\n    },\n  }))\n  this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n}\n","<template>\n  <div\n    :id=\"vmId\"\n    :class=\"classes\">\n    <slot\n      :id=\"currentId\"\n      :position=\"currentPositionDataProj\"\n      :offset=\"currentOffset\"\n      :positioning=\"currentPositioning\" />\n  </div>\n</template>\n\n<script>\n  import { Overlay } from 'ol'\n  import OverlayPositioning from 'ol/OverlayPositioning'\n  import { makeChangeOrRecreateWatchers, olCmp, projTransforms, waitForMap } from '../../mixins'\n  import { EPSG_3857, getOverlayId, initializeOverlay, roundPointCoords, setOverlayId } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    clonePlainObject,\n    coalesce,\n    identity,\n    isArray,\n    isEqual,\n    isPlainObject,\n  } from '../../utils'\n\n  export default {\n    name: 'VlOverlay',\n    mixins: [\n      projTransforms,\n      olCmp,\n      waitForMap,\n    ],\n    props: {\n      offset: {\n        type: Array,\n        default: () => [0, 0],\n        validator: value => value.length === 2,\n      },\n      position: {\n        type: Array,\n        validator: value => value.length === 2,\n        // required: true,\n      },\n      positioning: {\n        type: String,\n        default: OverlayPositioning.TOP_LEFT,\n        validator: value => Object.values(OverlayPositioning).includes(value),\n      },\n      stopEvent: {\n        type: Boolean,\n        default: true,\n      },\n      insertFirst: {\n        type: Boolean,\n        default: true,\n      },\n      autoPan: [Boolean, Object],\n      autoPanMargin: Number,\n      autoPanAnimation: Object,\n      autoPanOptions: Object,\n      className: String,\n    },\n    data () {\n      return {\n        visible: false,\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n        currentOffset: this.offset.slice(),\n        currentPositionViewProj: roundPointCoords(this.position),\n        currentPositioning: this.positioning,\n      }\n    },\n    computed: {\n      positionDataProj () {\n        return roundPointCoords(this.position)\n      },\n      positionViewProj () {\n        return this.pointToViewProj(this.position)\n      },\n      currentPositionDataProj () {\n        return this.pointToDataProj(this.currentPositionViewProj)\n      },\n      inputOffset () {\n        return this.offset.slice()\n      },\n      inputAutoPan () {\n        return isPlainObject(this.autoPan)\n          ? clonePlainObject(this.autoPan)\n          : this.autoPan\n      },\n      inputAutoPanAnimation () {\n        return isPlainObject(this.autoPanAnimation)\n          ? clonePlainObject(this.autoPanAnimation)\n          : this.autoPanAnimation\n      },\n      inputAutoPanOptions () {\n        return isPlainObject(this.autoPanOptions)\n          ? clonePlainObject(this.autoPanOptions)\n          : this.autoPanOptions\n      },\n      classes () {\n        return [\n          this.vmClass,\n          this.visible ? 'visible' : undefined,\n        ].filter(identity)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$overlay) return\n\n        if (!isEqual(this.currentOffset, this.$overlay.getOffset())) {\n          this.currentOffset = this.$overlay.getOffset()\n        }\n        if (!isEqual(this.currentPositionViewProj, this.$overlay.getPosition())) {\n          this.currentPositionViewProj = this.$overlay.getPosition()\n        }\n        if (this.currentPositioning !== this.$overlay.getPositioning()) {\n          this.currentPositioning = this.$overlay.getPositioning()\n        }\n      },\n      inputOffset: {\n        deep: true,\n        handler (value) {\n          this.setOffset(value)\n        },\n      },\n      currentOffset: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.inputOffset)) return\n\n          this.$emit('update:offset', value.slice())\n        },\n      },\n      positionViewProj: {\n        deep: true,\n        handler (value) {\n          this.setPosition(value, true)\n        },\n      },\n      currentPositionDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.positionDataProj)) return\n\n          this.$emit('update:position', value?.slice())\n        },\n      },\n      positioning (value) {\n        this.setPositioning(value)\n      },\n      currentPositioning (value) {\n        if (value === this.positioning) return\n\n        this.$emit('update:positioning', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'stopEvent',\n        'insertFirst',\n        'autoPanMargin',\n        'className',\n        'inputAutoPan',\n        'inputAutoPanAnimation',\n        'inputAutoPanOptions',\n      ], [\n        'inputAutoPan',\n        'inputAutoPanAnimation',\n        'inputAutoPanOptions',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        this::defineServices()\n\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {module:ol/Overlay~Overlay}\n       * @protected\n       */\n      createOlObject () {\n        const overlay = new Overlay({\n          id: this.currentId,\n          element: this.$el,\n          offset: this.currentOffset,\n          position: this.currentPositionViewProj,\n          positioning: this.currentPositioning,\n          stopEvent: this.stopEvent,\n          insertFirst: this.insertFirst,\n          autoPan: this.inputAutoPan,\n          autoPanMargin: this.autoPanMargin,\n          autoPanAnimation: this.inputAutoPanAnimation,\n          autoPanOptions: this.inputAutoPanOptions,\n          className: this.className,\n        })\n        initializeOverlay(overlay, this.currentId)\n\n        return overlay\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.visible = true\n        this.$overlaysContainer?.addOverlay(this.$overlay)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        this.$overlaysContainer?.removeOverlay(this.$overlay)\n        this.visible = false\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::olCmp.methods.subscribeAll()\n        this::subscribeToOverlayChanges()\n      },\n      /**\n       * @return {*}\n       * @protected\n       */\n      getIdInternal () {\n        return getOverlayId(this.$overlay)\n      },\n      /**\n       * @param {*} id\n       * @protected\n       */\n      setIdInternal (id) {\n        if (id === this.getIdInternal()) return\n\n        setOverlayId(this.$overlay, id)\n      },\n      /**\n       * @return {Promise<module:ol/Overlay~Overlay>}\n       */\n      resolveOverlay: olCmp.methods.resolveOlObject,\n      getOffset () {\n        return coalesce(this.$overlay?.getOffset(), this.currentOffset)\n      },\n      setOffset (offset) {\n        assert(isArray(offset) && offset.length === 2, 'Invalid offset')\n        offset = offset.slice()\n\n        if (!isEqual(offset, this.currentOffset)) {\n          this.currentOffset = offset\n        }\n        if (this.$overlay && !isEqual(offset, this.$overlay.getOffset())) {\n          this.$overlay.setOffset(offset)\n        }\n      },\n      getPosition (viewProj = false) {\n        if (!this.$overlay) {\n          return viewProj ? this.currentPositionViewProj : this.currentPositionDataProj\n        }\n\n        const position = this.$overlay.getPosition()\n        if (viewProj) return roundPointCoords(position)\n\n        return this.pointToDataProj(position)\n      },\n      setPosition (position, viewProj = false) {\n        assert(position == null || (isArray(position) && position.length === 2), 'Invalid position')\n        position = position?.slice()\n\n        if (!viewProj) {\n          position = this.pointToViewProj(position)\n        }\n\n        if (!isEqual(position, this.currentPositionViewProj)) {\n          this.currentPositionViewProj = position\n        }\n        if (this.$overlay && !isEqual(position, this.$overlay.getPosition())) {\n          this.$overlay.setPosition(position)\n        }\n      },\n      getPositioning () {\n        return this.$overlay?.getPositioning() || this.currentPositioning\n      },\n      setPositioning (positioning) {\n        if (positioning !== this.currentPositioning) {\n          this.currentPositioning = positioning\n        }\n        if (this.$overlay && positioning !== this.$overlay.getPositioning()) {\n          this.$overlay.setPositioning(positioning)\n        }\n      },\n      async panIntoView (options = {}) {\n        (await this.resolveOverlay()).panIntoView(options)\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $overlay: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n      $overlaysContainer: {\n        enumerable: true,\n        get: () => this.$services?.overlaysContainer,\n      },\n    })\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToOverlayChanges () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$overlay, [\n      'offset',\n      'position',\n      'positioning',\n    ], true, evt => ({\n      ...evt,\n      setter: val => {\n        const args = [val]\n        if (evt.prop === 'position') {\n          args.push(true)\n        }\n        this[setterKey(evt.prop)](...args)\n      },\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Overlay from './overlay.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Overlay, options)\n\n  Vue.component(Overlay.name, Overlay)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Overlay,\n}\n","\nimport { Collection } from 'ol'\nimport RotateInteraction from 'ol-rotate-feature'\nimport { always } from 'ol/events/condition'\nimport { Vector as VectorSource } from 'ol/source'\nimport VectorEventType from 'ol/source/VectorEventType'\nimport { merge as mergeObs } from 'rxjs'\nimport { map as mapObs, tap } from 'rxjs/operators'\nimport { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\nimport { COORD_PRECISION, isPointCoords, roundPointCoords, writeGeoJsonFeature } from '../../ol-ext'\nimport { fromOlChangeEvent as obsFromOlChangeEvent, fromOlEvent as obsFromOlEvent } from '../../rx-ext'\nimport {\n  addPrefix,\n  assert,\n  coalesce,\n  instanceOf,\n  isEqual,\n  isFunction,\n  isNumber,\n  map,\n  mergeDescriptors,\n} from '../../utils'\n\nexport default {\n  name: 'VlInteractionRotate',\n  mixins: [\n    interaction,\n    styleContainer,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  props: {\n    /**\n     * Source or collection identifier from IdentityMap.\n     * @type {String}\n     */\n    source: {\n      type: String,\n      required: true,\n    },\n    angle: {\n      type: Number,\n      default: 0,\n    },\n    anchor: {\n      type: Array,\n      validator: val => val.length >= 2,\n    },\n    condition: {\n      type: Function,\n      default: always,\n    },\n    allowAnchorMovement: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data () {\n    return {\n      currentAnchorViewProj: roundPointCoords(this.anchor),\n      currentAngle: this.angle,\n    }\n  },\n  computed: {\n    anchorDataProj () {\n      return roundPointCoords(this.anchor)\n    },\n    anchorViewProj () {\n      return this.pointToViewProj(this.anchor)\n    },\n    currentAnchorDataProj () {\n      return this.pointToDataProj(this.currentAnchorViewProj)\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$interaction) return\n\n      if (!isEqual(this.currentAnchorViewProj, this.$interaction.getAnchor())) {\n        this.currentAnchorViewProj = this.$interaction.getAnchor()\n      }\n      if (this.currentAngle !== this.$interaction.getAngle()) {\n        this.currentAngle = this.$interaction.getAngle()\n      }\n    },\n    anchorViewProj: {\n      deep: true,\n      handler (value) {\n        if (!value) return\n\n        this.setAnchor(value, true)\n      },\n    },\n    currentAnchorDataProj: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.anchorDataProj)) return\n\n        this.$emit('update:anchor', value?.slice())\n      },\n    },\n    angle (value) {\n      this.setAngle(value)\n    },\n    currentAngle (value) {\n      if (value === this.angle) return\n\n      this.$emit('update:angle', value)\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'source',\n      'condition',\n      'allowAnchorMovement',\n    ]),\n  },\n  created () {\n    this.currentAnchorViewProj = this.anchorViewProj?.slice()\n  },\n  methods: {\n    /**\n     * @return {Promise<Modify>}\n     * @protected\n     */\n    async createInteraction () {\n      const source = this._source = await this.getInstance(this.source)\n      assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n      let features\n      if (source instanceof VectorSource) {\n        features = source.getFeaturesCollection()\n        if (!features) {\n          features = new Collection(source.getFeatures())\n          this.subscribeTo(\n            obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n            ({ feature }) => feature && features.push(feature),\n          )\n          this.subscribeTo(\n            obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n            ({ feature }) => feature && features.remove(feature),\n          )\n        }\n        instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n      } else {\n        if (isFunction(source.getFeaturesCollection)) {\n          features = source.getFeaturesCollection()\n        } else if (isFunction(source.getFeatures)) {\n          features = source.getFeatures()\n        }\n        instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n      }\n\n      return new RotateInteraction({\n        features,\n        angle: this.currentAngle,\n        anchor: this.currentAnchorViewProj,\n        allowAnchorMovement: this.allowAnchorMovement,\n        condition: this.condition,\n        style: this.$style,\n      })\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      return mergeDescriptors(\n        this::interaction.methods.getServices(),\n        this::styleContainer.methods.getServices(),\n      )\n    },\n    /**\n     * @protected\n     */\n    subscribeAll () {\n      this::interaction.methods.subscribeAll()\n      this::subscribeToInteractionChanges()\n    },\n    /**\n     * @return {StyleTarget}\n     * @protected\n     */\n    getStyleTarget () {\n      return {\n        getStyle: () => this._style,\n        setStyle: () => {\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log('style changed, scheduling recreate...')\n          }\n\n          this.scheduleRecreate()\n        },\n      }\n    },\n    getAngle () {\n      return coalesce(this.$interaction?.getAngle(), this.currentAngle)\n    },\n    setAngle (angle) {\n      assert(isNumber(angle), 'Invalid angle')\n\n      if (angle !== this.currentAngle) {\n        this.currentAngle = angle\n      }\n      if (this.$interaction && angle !== this.$interaction.getAngle()) {\n        this.$interaction.setAngle(angle)\n      }\n    },\n    getAnchor (viewProj = false) {\n      const anchor = coalesce(this.$interaction?.getAnchor(), this.currentAnchorViewProj)\n\n      return viewProj ? roundPointCoords(anchor) : this.pointToDataProj(anchor)\n    },\n    setAnchor (anchor, viewProj = false) {\n      assert(isPointCoords(anchor), 'Invalid anchor')\n      anchor = viewProj ? roundPointCoords(anchor) : this.pointToViewProj(anchor)\n\n      if (!isEqual(anchor, this.currentAnchorViewProj)) {\n        this.currentAnchorViewProj = anchor\n      }\n      if (this.$interaction && !isEqual(anchor, this.$interaction.getAnchor())) {\n        this.$interaction.setAnchor(anchor)\n      }\n    },\n  },\n}\n\n/**\n * @private\n */\nfunction subscribeToInteractionChanges () {\n  const setterKey = addPrefix('set')\n  const propChanges = obsFromOlChangeEvent(this.$interaction, [\n    'angle',\n    'anchor',\n  ], true, evt => ({\n    ...evt,\n    setter: val => {\n      const args = [val]\n      if (evt.prop === 'anchor') {\n        args.push(true)\n      }\n      this[setterKey(evt.prop)](...args)\n    },\n  }))\n  this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n  const start = obsFromOlEvent(this.$interaction, 'rotatestart').pipe(\n    tap(() => this.setInteracting(true)),\n  )\n  const end = obsFromOlEvent(this.$interaction, 'rotateend').pipe(\n    tap(() => this.setInteracting(false)),\n  )\n  const progress = obsFromOlEvent(this.$interaction, 'rotating')\n  const events = mergeObs(start, end, progress).pipe(\n    mapObs(({ type, features, angle, anchor }) => {\n      const viewProj = this.resolvedViewProjection\n      const dataProj = this.resolvedDataProjection\n      return {\n        type,\n        features: features instanceof Collection ? features.getArray() : features,\n        angle,\n        anchor: this.pointToDataProj(anchor),\n        get json () {\n          if (!this._json) {\n            this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n          }\n          return this._json\n        },\n      }\n    }),\n  )\n  this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n}\n","<script>\n  import { Collection } from 'ol'\n  import RotateInteraction from 'ol-rotate-feature'\n  import { always } from 'ol/events/condition'\n  import { Vector as VectorSource } from 'ol/source'\n  import VectorEventType from 'ol/source/VectorEventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { COORD_PRECISION, isPointCoords, roundPointCoords, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlChangeEvent as obsFromOlChangeEvent, fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import {\n    addPrefix,\n    assert,\n    coalesce,\n    instanceOf,\n    isEqual,\n    isFunction,\n    isNumber,\n    map,\n    mergeDescriptors,\n  } from '../../utils'\n\n  export default {\n    name: 'VlInteractionRotate',\n    mixins: [\n      interaction,\n      styleContainer,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * Source or collection identifier from IdentityMap.\n       * @type {String}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      angle: {\n        type: Number,\n        default: 0,\n      },\n      anchor: {\n        type: Array,\n        validator: val => val.length >= 2,\n      },\n      condition: {\n        type: Function,\n        default: always,\n      },\n      allowAnchorMovement: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    data () {\n      return {\n        currentAnchorViewProj: roundPointCoords(this.anchor),\n        currentAngle: this.angle,\n      }\n    },\n    computed: {\n      anchorDataProj () {\n        return roundPointCoords(this.anchor)\n      },\n      anchorViewProj () {\n        return this.pointToViewProj(this.anchor)\n      },\n      currentAnchorDataProj () {\n        return this.pointToDataProj(this.currentAnchorViewProj)\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (!isEqual(this.currentAnchorViewProj, this.$interaction.getAnchor())) {\n          this.currentAnchorViewProj = this.$interaction.getAnchor()\n        }\n        if (this.currentAngle !== this.$interaction.getAngle()) {\n          this.currentAngle = this.$interaction.getAngle()\n        }\n      },\n      anchorViewProj: {\n        deep: true,\n        handler (value) {\n          if (!value) return\n\n          this.setAnchor(value, true)\n        },\n      },\n      currentAnchorDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.anchorDataProj)) return\n\n          this.$emit('update:anchor', value?.slice())\n        },\n      },\n      angle (value) {\n        this.setAngle(value)\n      },\n      currentAngle (value) {\n        if (value === this.angle) return\n\n        this.$emit('update:angle', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'condition',\n        'allowAnchorMovement',\n      ]),\n    },\n    created () {\n      this.currentAnchorViewProj = this.anchorViewProj?.slice()\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        const source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (!features) {\n            features = new Collection(source.getFeatures())\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n              ({ feature }) => feature && features.push(feature),\n            )\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n              ({ feature }) => feature && features.remove(feature),\n            )\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        }\n\n        return new RotateInteraction({\n          features,\n          angle: this.currentAngle,\n          anchor: this.currentAnchorViewProj,\n          allowAnchorMovement: this.allowAnchorMovement,\n          condition: this.condition,\n          style: this.$style,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      getAngle () {\n        return coalesce(this.$interaction?.getAngle(), this.currentAngle)\n      },\n      setAngle (angle) {\n        assert(isNumber(angle), 'Invalid angle')\n\n        if (angle !== this.currentAngle) {\n          this.currentAngle = angle\n        }\n        if (this.$interaction && angle !== this.$interaction.getAngle()) {\n          this.$interaction.setAngle(angle)\n        }\n      },\n      getAnchor (viewProj = false) {\n        const anchor = coalesce(this.$interaction?.getAnchor(), this.currentAnchorViewProj)\n\n        return viewProj ? roundPointCoords(anchor) : this.pointToDataProj(anchor)\n      },\n      setAnchor (anchor, viewProj = false) {\n        assert(isPointCoords(anchor), 'Invalid anchor')\n        anchor = viewProj ? roundPointCoords(anchor) : this.pointToViewProj(anchor)\n\n        if (!isEqual(anchor, this.currentAnchorViewProj)) {\n          this.currentAnchorViewProj = anchor\n        }\n        if (this.$interaction && !isEqual(anchor, this.$interaction.getAnchor())) {\n          this.$interaction.setAnchor(anchor)\n        }\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const setterKey = addPrefix('set')\n    const propChanges = obsFromOlChangeEvent(this.$interaction, [\n      'angle',\n      'anchor',\n    ], true, evt => ({\n      ...evt,\n      setter: val => {\n        const args = [val]\n        if (evt.prop === 'anchor') {\n          args.push(true)\n        }\n        this[setterKey(evt.prop)](...args)\n      },\n    }))\n    this.subscribeTo(propChanges, ({ setter, value }) => setter(value))\n\n    const start = obsFromOlEvent(this.$interaction, 'rotatestart').pipe(\n      tap(() => this.setInteracting(true)),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'rotateend').pipe(\n      tap(() => this.setInteracting(false)),\n    )\n    const progress = obsFromOlEvent(this.$interaction, 'rotating')\n    const events = mergeObs(start, end, progress).pipe(\n      mapObs(({ type, features, angle, anchor }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          angle,\n          anchor: this.pointToDataProj(anchor),\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Feature } from 'ol'\nimport { never, shiftKeyOnly, singleClick } from 'ol/events/condition'\nimport { Select as SelectInteraction } from 'ol/interaction'\nimport { merge as mergeObs } from 'rxjs'\nimport { featuresContainer, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\nimport { dumpStyle, getFeatureId, getLayerId, initializeFeature, isGeoJSONFeature } from '../../ol-ext'\nimport { fromVueEvent as obsFromVueEvent } from '../../rx-ext'\nimport {\n  assert,\n  clonePlainObject,\n  coalesce,\n  constant,\n  forEach, isArray,\n  isEqual,\n  isFunction,\n  isNumber,\n  isObjectLike, isPlainObject,\n  isString,\n  map,\n  mergeDescriptors,\n  or,\n  stubArray,\n} from '../../utils'\n\nexport default {\n  name: 'VlInteractionSelect',\n  mixins: [\n    featuresContainer,\n    styleContainer,\n    interaction,\n  ],\n  props: {\n    /**\n     * A function that takes an `ol.Feature` and an `ol.layer.Layer` and returns `true` if the feature may be selected or `false` otherwise.\n     * @type {function|undefined}\n     */\n    filter: {\n      type: Function,\n      default: /*#__PURE__*/constant(true),\n    },\n    /**\n     * A list of layers from which features should be selected. Alternatively, a filter function can be provided.\n     * @type {string[]|function|undefined}\n     */\n    layers: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position will be checked for features.\n     * This only works for the canvas renderer and not for WebGL.\n     * @type {number}\n     */\n    hitTolerance: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * A boolean that determines if the default behaviour should select only single features or all (overlapping)\n     * features at the clicked map position.\n     * @type {boolean}\n     */\n    multi: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Selected features as array of GeoJSON features with coordinates in the map view projection.\n     * @type {string[]|number[]|Object[]}\n     */\n    features: {\n      type: Array,\n      default: stubArray,\n      validator: value => value.every(or(isString, isNumber, isGeoJSONFeature)),\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should\n     * be handled. By default, this is `ol.events.condition.never`. Use this if you want to use different events\n     * for `add` and `remove` instead of `toggle`.\n     * @type {function|undefined}\n     */\n    addCondition: {\n      type: Function,\n      default: never,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n     * This is the event for the selected features as a whole. By default, this is `ol.events.condition.singleClick`.\n     * Clicking on a feature selects that feature and removes any that were in the selection. Clicking outside any feature\n     * removes all from the selection.\n     * @type {function|undefined}\n     */\n    condition: {\n      type: Function,\n      default: singleClick,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n     * By default, this is `ol.events.condition.never`. Use this if you want to use different events for `add` and `remove`\n     * instead of `toggle`.\n     * @type {function|undefined}\n     */\n    removeCondition: {\n      type: Function,\n      default: never,\n    },\n    /**\n     * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n     * This is in addition to the `condition` event. By default, `ol.events.condition.shiftKeyOnly`, i.e. pressing `shift`\n     * as well as the `condition` event, adds that feature to the current selection if it is not currently selected,\n     * and removes it if it is.\n     * @type {function|undefined}\n     */\n    toggleCondition: {\n      type: Function,\n      default: shiftKeyOnly,\n    },\n  },\n  data () {\n    return {\n      currentHitTolerance: this.hitTolerance,\n    }\n  },\n  computed: {\n    featuresDataProj () {\n      return map(this.features, feature => {\n        if (isGeoJSONFeature(feature)) {\n          feature = initializeFeature(clonePlainObject(feature))\n        }\n        return feature\n      })\n    },\n    featuresViewProj () {\n      return map(this.features, feature => {\n        if (isGeoJSONFeature(feature)) {\n          feature = this.writeFeatureInViewProj(this.readFeatureInDataProj(feature))\n        }\n        return feature\n      })\n    },\n    currentFeaturesDataProj () {\n      if (!this.rev) return []\n\n      return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n    },\n    currentFeaturesViewProj () {\n      if (!this.rev) return []\n\n      return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n    },\n    currentFeatureIds () {\n      return map(this.currentFeaturesDataProj, feature => getFeatureId(feature))\n    },\n    layerFilter () {\n      return Array.isArray(this.layers)\n        ? layer => this.layers.includes(getLayerId(layer))\n        : this.layers\n    },\n    style () {\n      if (!(this.rev && this.$style)) return\n\n      let style = this.$style\n      if (isFunction(style)) return style\n      if (!style) return\n\n      isArray(style) || (style = [style])\n\n      return style.map(style => dumpStyle(style, geom => this.writeGeometryInDataProj(geom)))\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$interaction) return\n\n      if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n        this.currentHitTolerance = this.$interaction.getHitTolerance()\n      }\n    },\n    featuresViewProj: {\n      deep: true,\n      handler (features) {\n        const ids = map(features, feature => isObjectLike(feature) ? getFeatureId(feature) : feature)\n        if (isEqual(ids, this.currentFeatureIds)) return\n\n        this.unselectAll()\n        forEach(features, ::this.select)\n      },\n    },\n    currentFeaturesDataProj: {\n      deep: true,\n      handler (value) {\n        if (isEqual(value, this.featuresDataProj)) return\n\n        this.$emit('update:features', value && clonePlainObject(value))\n      },\n    },\n    hitTolerance (value) {\n      this.setHitTolerance(value)\n    },\n    currentHitTolerance (value) {\n      if (value === this.hitTolerance) return\n\n      this.$emit('update:hitTolerance', value)\n    },\n    style: {\n      deep: true,\n      handler (value, prev) {\n        if (isEqual(value, prev)) return\n\n        if (isPlainObject(value) || isArray(value)) {\n          value = clonePlainObject(value)\n        }\n        this.$emit('update:style', value)\n      },\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'filter',\n      'multi',\n      'wrapX',\n      'addCondition',\n      'condition',\n      'removeCondition',\n      'toggleCondition',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {Select}\n     * @protected\n     */\n    createInteraction () {\n      return new SelectInteraction({\n        multi: this.multi,\n        filter: this.filter,\n        layers: this.layerFilter,\n        hitTolerance: this.currentHitTolerance,\n        addCondition: this.addCondition,\n        condition: this.condition,\n        removeCondition: this.removeCondition,\n        toggleCondition: this.toggleCondition,\n        style: this.$style,\n        features: this.$featuresCollection,\n      })\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      return mergeDescriptors(\n        this::interaction.methods.getServices(),\n        this::featuresContainer.methods.getServices(),\n        this::styleContainer.methods.getServices(),\n      )\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::interaction.methods.subscribeAll()\n      this::featuresContainer.methods.subscribeAll()\n      this::subscribeToInteractionChanges()\n    },\n    /**\n     * @return {StyleTarget}\n     * @protected\n     */\n    getStyleTarget () {\n      return {\n        getStyle: () => this._style,\n        setStyle: () => {\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log('style changed, scheduling recreate...')\n          }\n\n          this.scheduleRecreate()\n        },\n      }\n    },\n    /**\n     * @param {FeatureLike} feature\n     */\n    select (feature) {\n      feature = this.resolveFeature(feature)\n      if (!feature) return\n\n      this.addFeature(feature)\n    },\n    /**\n     * @param {FeatureLike} feature\n     */\n    unselect (feature) {\n      feature = this.resolveFeature(feature)\n      if (!feature) return\n\n      this.removeFeature(feature)\n    },\n    /**\n     * @return {void}\n     */\n    unselectAll () {\n      this.clearFeatures()\n    },\n    /**\n     * @param {Object|Vue|Feature|string|number} feature\n     * @return {Feature|undefined}\n     * @protected\n     */\n    resolveFeature (feature) {\n      if (!feature) return\n      feature = feature?.$feature || feature\n      if (feature instanceof Feature) return feature\n\n      const featureId = isString(feature) || isNumber(feature) ? feature : getFeatureId(feature)\n      if (!featureId) {\n        throw new Error(`${this.vmName} undefined feature id`)\n      }\n\n      feature = null\n      forEach(this.$mapVm.getLayers(), layer => {\n        if (this.layerFilter && !this.layerFilter(layer)) {\n          return\n        }\n\n        const source = layer.getSource()\n        if (isFunction(source?.getFeatureById)) {\n          feature = source.getFeatureById(featureId)\n        }\n\n        return !feature\n      })\n\n      return feature\n    },\n    updateFeature (feature) { /* disable update here, because wil always work with origin feature */ },\n    getHitTolerance () {\n      return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n    },\n    setHitTolerance (tolerance) {\n      assert(isNumber(tolerance), 'Invalid tolerance')\n\n      if (tolerance !== this.currentHitTolerance) {\n        this.currentHitTolerance = tolerance\n      }\n      if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n        this.$interaction.setHitTolerance(tolerance)\n      }\n    },\n    async getLayer (feature) {\n      feature = this.resolveFeature(feature)\n\n      return (await this.resolveInteraction()).getLayer(feature)\n    },\n  },\n}\n\n/**\n * @return {void}\n * @private\n */\nfunction subscribeToInteractionChanges () {\n  const select = obsFromVueEvent(this, 'addfeature', evt => ({\n    type: 'select',\n    feature: evt.feature,\n    get json () { return evt.json },\n  }))\n  const unselect = obsFromVueEvent(this, 'removefeature', evt => ({\n    type: 'unselect',\n    feature: evt.feature,\n    get json () { return evt.json },\n  }))\n  const events = mergeObs(select, unselect)\n  this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n}\n","<template>\n  <i\n    :id=\"vmId\"\n    :class=\"vmClass\"\n    style=\"display: none !important;\">\n    <slot :features=\"currentFeaturesDataProj\" />\n  </i>\n</template>\n\n<script>\n  import { Feature } from 'ol'\n  import { never, shiftKeyOnly, singleClick } from 'ol/events/condition'\n  import { Select as SelectInteraction } from 'ol/interaction'\n  import { merge as mergeObs } from 'rxjs'\n  import { featuresContainer, interaction, makeChangeOrRecreateWatchers, styleContainer } from '../../mixins'\n  import { dumpStyle, getFeatureId, getLayerId, initializeFeature, isGeoJSONFeature } from '../../ol-ext'\n  import { fromVueEvent as obsFromVueEvent } from '../../rx-ext'\n  import {\n    assert,\n    clonePlainObject,\n    coalesce,\n    constant,\n    forEach, isArray,\n    isEqual,\n    isFunction,\n    isNumber,\n    isObjectLike, isPlainObject,\n    isString,\n    map,\n    mergeDescriptors,\n    or,\n    stubArray,\n  } from '../../utils'\n\n  export default {\n    name: 'VlInteractionSelect',\n    mixins: [\n      featuresContainer,\n      styleContainer,\n      interaction,\n    ],\n    props: {\n      /**\n       * A function that takes an `ol.Feature` and an `ol.layer.Layer` and returns `true` if the feature may be selected or `false` otherwise.\n       * @type {function|undefined}\n       */\n      filter: {\n        type: Function,\n        default: /*#__PURE__*/constant(true),\n      },\n      /**\n       * A list of layers from which features should be selected. Alternatively, a filter function can be provided.\n       * @type {string[]|function|undefined}\n       */\n      layers: {\n        type: [Array, Function],\n        default: undefined,\n      },\n      /**\n       * Hit-detection tolerance. Pixels inside the radius around the given position will be checked for features.\n       * This only works for the canvas renderer and not for WebGL.\n       * @type {number}\n       */\n      hitTolerance: {\n        type: Number,\n        default: 0,\n      },\n      /**\n       * A boolean that determines if the default behaviour should select only single features or all (overlapping)\n       * features at the clicked map position.\n       * @type {boolean}\n       */\n      multi: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Selected features as array of GeoJSON features with coordinates in the map view projection.\n       * @type {string[]|number[]|Object[]}\n       */\n      features: {\n        type: Array,\n        default: stubArray,\n        validator: value => value.every(or(isString, isNumber, isGeoJSONFeature)),\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should\n       * be handled. By default, this is `ol.events.condition.never`. Use this if you want to use different events\n       * for `add` and `remove` instead of `toggle`.\n       * @type {function|undefined}\n       */\n      addCondition: {\n        type: Function,\n        default: never,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * This is the event for the selected features as a whole. By default, this is `ol.events.condition.singleClick`.\n       * Clicking on a feature selects that feature and removes any that were in the selection. Clicking outside any feature\n       * removes all from the selection.\n       * @type {function|undefined}\n       */\n      condition: {\n        type: Function,\n        default: singleClick,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * By default, this is `ol.events.condition.never`. Use this if you want to use different events for `add` and `remove`\n       * instead of `toggle`.\n       * @type {function|undefined}\n       */\n      removeCondition: {\n        type: Function,\n        default: never,\n      },\n      /**\n       * A function that takes an `ol.MapBrowserEvent` and returns a boolean to indicate whether that event should be handled.\n       * This is in addition to the `condition` event. By default, `ol.events.condition.shiftKeyOnly`, i.e. pressing `shift`\n       * as well as the `condition` event, adds that feature to the current selection if it is not currently selected,\n       * and removes it if it is.\n       * @type {function|undefined}\n       */\n      toggleCondition: {\n        type: Function,\n        default: shiftKeyOnly,\n      },\n    },\n    data () {\n      return {\n        currentHitTolerance: this.hitTolerance,\n      }\n    },\n    computed: {\n      featuresDataProj () {\n        return map(this.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            feature = initializeFeature(clonePlainObject(feature))\n          }\n          return feature\n        })\n      },\n      featuresViewProj () {\n        return map(this.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            feature = this.writeFeatureInViewProj(this.readFeatureInDataProj(feature))\n          }\n          return feature\n        })\n      },\n      currentFeaturesDataProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInDataProj(feature))\n      },\n      currentFeaturesViewProj () {\n        if (!this.rev) return []\n\n        return map(this.getFeatures(), feature => this.writeFeatureInViewProj(feature))\n      },\n      currentFeatureIds () {\n        return map(this.currentFeaturesDataProj, feature => getFeatureId(feature))\n      },\n      layerFilter () {\n        return Array.isArray(this.layers)\n          ? layer => this.layers.includes(getLayerId(layer))\n          : this.layers\n      },\n      style () {\n        if (!(this.rev && this.$style)) return\n\n        let style = this.$style\n        if (isFunction(style)) return style\n        if (!style) return\n\n        isArray(style) || (style = [style])\n\n        return style.map(style => dumpStyle(style, geom => this.writeGeometryInDataProj(geom)))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n          this.currentHitTolerance = this.$interaction.getHitTolerance()\n        }\n      },\n      featuresViewProj: {\n        deep: true,\n        handler (features) {\n          const ids = map(features, feature => isObjectLike(feature) ? getFeatureId(feature) : feature)\n          if (isEqual(ids, this.currentFeatureIds)) return\n\n          this.unselectAll()\n          forEach(features, ::this.select)\n        },\n      },\n      currentFeaturesDataProj: {\n        deep: true,\n        handler (value) {\n          if (isEqual(value, this.featuresDataProj)) return\n\n          this.$emit('update:features', value && clonePlainObject(value))\n        },\n      },\n      hitTolerance (value) {\n        this.setHitTolerance(value)\n      },\n      currentHitTolerance (value) {\n        if (value === this.hitTolerance) return\n\n        this.$emit('update:hitTolerance', value)\n      },\n      style: {\n        deep: true,\n        handler (value, prev) {\n          if (isEqual(value, prev)) return\n\n          if (isPlainObject(value) || isArray(value)) {\n            value = clonePlainObject(value)\n          }\n          this.$emit('update:style', value)\n        },\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'filter',\n        'multi',\n        'wrapX',\n        'addCondition',\n        'condition',\n        'removeCondition',\n        'toggleCondition',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Select}\n       * @protected\n       */\n      createInteraction () {\n        return new SelectInteraction({\n          multi: this.multi,\n          filter: this.filter,\n          layers: this.layerFilter,\n          hitTolerance: this.currentHitTolerance,\n          addCondition: this.addCondition,\n          condition: this.condition,\n          removeCondition: this.removeCondition,\n          toggleCondition: this.toggleCondition,\n          style: this.$style,\n          features: this.$featuresCollection,\n        })\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::interaction.methods.getServices(),\n          this::featuresContainer.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::featuresContainer.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      /**\n       * @return {StyleTarget}\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            this.scheduleRecreate()\n          },\n        }\n      },\n      /**\n       * @param {FeatureLike} feature\n       */\n      select (feature) {\n        feature = this.resolveFeature(feature)\n        if (!feature) return\n\n        this.addFeature(feature)\n      },\n      /**\n       * @param {FeatureLike} feature\n       */\n      unselect (feature) {\n        feature = this.resolveFeature(feature)\n        if (!feature) return\n\n        this.removeFeature(feature)\n      },\n      /**\n       * @return {void}\n       */\n      unselectAll () {\n        this.clearFeatures()\n      },\n      /**\n       * @param {Object|Vue|Feature|string|number} feature\n       * @return {Feature|undefined}\n       * @protected\n       */\n      resolveFeature (feature) {\n        if (!feature) return\n        feature = feature?.$feature || feature\n        if (feature instanceof Feature) return feature\n\n        const featureId = isString(feature) || isNumber(feature) ? feature : getFeatureId(feature)\n        if (!featureId) {\n          throw new Error(`${this.vmName} undefined feature id`)\n        }\n\n        feature = null\n        forEach(this.$mapVm.getLayers(), layer => {\n          if (this.layerFilter && !this.layerFilter(layer)) {\n            return\n          }\n\n          const source = layer.getSource()\n          if (isFunction(source?.getFeatureById)) {\n            feature = source.getFeatureById(featureId)\n          }\n\n          return !feature\n        })\n\n        return feature\n      },\n      updateFeature (feature) { /* disable update here, because wil always work with origin feature */ },\n      getHitTolerance () {\n        return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n      },\n      setHitTolerance (tolerance) {\n        assert(isNumber(tolerance), 'Invalid tolerance')\n\n        if (tolerance !== this.currentHitTolerance) {\n          this.currentHitTolerance = tolerance\n        }\n        if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n          this.$interaction.setHitTolerance(tolerance)\n        }\n      },\n      async getLayer (feature) {\n        feature = this.resolveFeature(feature)\n\n        return (await this.resolveInteraction()).getLayer(feature)\n      },\n    },\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const select = obsFromVueEvent(this, 'addfeature', evt => ({\n      type: 'select',\n      feature: evt.feature,\n      get json () { return evt.json },\n    }))\n    const unselect = obsFromVueEvent(this, 'removefeature', evt => ({\n      type: 'unselect',\n      feature: evt.feature,\n      get json () { return evt.json },\n    }))\n    const events = mergeObs(select, unselect)\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\nimport { Collection } from 'ol'\nimport { Snap as SnapInteraction } from 'ol/interaction'\nimport { Vector as VectorSource } from 'ol/source'\nimport { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\nimport { assert, instanceOf, isFunction } from '../../utils'\n\nexport default {\n  name: 'VlInteractionSnap',\n  mixins: [\n    interaction,\n  ],\n  props: {\n    /**\n     * Target source identifier from IdentityMap.\n     * @type {string}\n     */\n    source: {\n      type: String,\n      required: true,\n    },\n    /**\n     * Snap to edges\n     * @type {boolean}\n     */\n    edge: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Snap to vertices.\n     * @type {boolean}\n     */\n    vertex: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.\n     * @type {number}\n     */\n    pixelTolerance: {\n      type: Number,\n      default: 10,\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'source',\n      'edge',\n      'vertex',\n      'pixelTolerance',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {Promise<Snap>}\n     * @protected\n     */\n    async createInteraction () {\n      let source = await this.getInstance(this.source)\n      assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n      let features\n      if (!(source instanceof VectorSource)) {\n        if (isFunction(source.getFeaturesCollection)) {\n          features = source.getFeaturesCollection()\n        } else if (isFunction(source.getFeatures)) {\n          features = source.getFeatures()\n        }\n        instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        source = null\n      }\n\n      return new SnapInteraction({\n        source,\n        features,\n        edge: this.edge,\n        vertex: this.vertex,\n        pixelTolerance: this.pixelTolerance,\n      })\n    },\n  },\n}\n","<script>\n  import { Collection } from 'ol'\n  import { Snap as SnapInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { assert, instanceOf, isFunction } from '../../utils'\n\n  export default {\n    name: 'VlInteractionSnap',\n    mixins: [\n      interaction,\n    ],\n    props: {\n      /**\n       * Target source identifier from IdentityMap.\n       * @type {string}\n       */\n      source: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Snap to edges\n       * @type {boolean}\n       */\n      edge: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Snap to vertices.\n       * @type {boolean}\n       */\n      vertex: {\n        type: Boolean,\n        default: true,\n      },\n      /**\n       * Pixel tolerance for considering the pointer close enough to a segment or vertex for snapping.\n       * @type {number}\n       */\n      pixelTolerance: {\n        type: Number,\n        default: 10,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'edge',\n        'vertex',\n        'pixelTolerance',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Snap>}\n       * @protected\n       */\n      async createInteraction () {\n        let source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n        let features\n        if (!(source instanceof VectorSource)) {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n          source = null\n        }\n\n        return new SnapInteraction({\n          source,\n          features,\n          edge: this.edge,\n          vertex: this.vertex,\n          pixelTolerance: this.pixelTolerance,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\nimport { source, urlTileSource, xyzSource } from '../../mixins'\n\nconst SPUTNIK_URL_TEMPLATE = 'http://tiles.maps.sputnik.ru/{z}/{x}/{y}.png?apikey={apikey}'\nconst SPUTNIK_ATTRIBUTIONS = '&copy; <a href=\"http://rt.ru/\" target=\"_blank\">Ростелеком</a>. '\n\nexport default {\n  name: 'VlSourceSputnik',\n  mixins: [\n    xyzSource,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    // ol/source/Source\n    attributions: {\n      ...source.props.attributions,\n      default: SPUTNIK_ATTRIBUTIONS,\n    },\n    // ol/source/UrlTile\n    url: {\n      ...urlTileSource.props.url,\n      default: SPUTNIK_URL_TEMPLATE,\n    },\n    /* eslint-enable vue/require-prop-types */\n    // custom\n    apiKey: {\n      type: String,\n    },\n  },\n  computed: {\n    /**\n     * @type {string[]}\n     */\n    urlTokens () {\n      return ['apiKey']\n    },\n  },\n}\n","<script>\n  import { source, urlTileSource, xyzSource } from '../../mixins'\n\n  const SPUTNIK_URL_TEMPLATE = 'http://tiles.maps.sputnik.ru/{z}/{x}/{y}.png?apikey={apikey}'\n  const SPUTNIK_ATTRIBUTIONS = '&copy; <a href=\"http://rt.ru/\" target=\"_blank\">Ростелеком</a>. '\n\n  export default {\n    name: 'VlSourceSputnik',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Source\n      attributions: {\n        ...source.props.attributions,\n        default: SPUTNIK_ATTRIBUTIONS,\n      },\n      // ol/source/UrlTile\n      url: {\n        ...urlTileSource.props.url,\n        default: SPUTNIK_URL_TEMPLATE,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // custom\n      apiKey: {\n        type: String,\n      },\n    },\n    computed: {\n      /**\n       * @type {string[]}\n       */\n      urlTokens () {\n        return ['apiKey']\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { Stamen as StamenSource } from 'ol/source'\nimport { xyzSource } from '../../mixins'\nimport { noop } from '../../utils'\n\nexport default {\n  name: 'VlSourceStamen',\n  mixins: [\n    xyzSource,\n  ],\n  props: {\n    // ol/source/Stamen\n    /**\n     * Stamen layer name\n     *\n     * @type {string}\n     */\n    layer: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    tileGridIdent: noop,\n    inputTileGridFactory: noop,\n    inputTileUrlFunction: noop,\n  },\n  methods: {\n    createSource () {\n      return new StamenSource({\n        // ol/source/Source\n        wrapX: this.wrapX,\n        // ol/source/Tile\n        cacheSize: this.cacheSize,\n        opaque: this.opaque,\n        transition: this.transition,\n        // ol/source/UrlTile\n        tileLoadFunction: this.currentTileLoadFunction,\n        url: this.currentUrls[0],\n        // ol/source/TileImage\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        imageSmoothing: this.imageSmoothing,\n        // ol/source/XYZ\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        // ol/source/Stamen\n        layer: this.layer,\n      })\n    },\n    inputUrlChanged (value) {\n      this.setUrl(value)\n    },\n    attributionsCollapsibleChanged: noop,\n    projectionChanged: noop,\n    inputTileGridFactoryChanged: noop,\n    tileGridChanged: noop,\n    zDirectionChanged: noop,\n    inputTileUrlFunctionChanged: noop,\n    crossOriginChanged: noop,\n    tileClassChanged: noop,\n  },\n}\n","<script>\n  import { Stamen as StamenSource } from 'ol/source'\n  import { xyzSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceStamen',\n    mixins: [\n      xyzSource,\n    ],\n    props: {\n      // ol/source/Stamen\n      /**\n       * Stamen layer name\n       *\n       * @type {string}\n       */\n      layer: {\n        type: String,\n        required: true,\n      },\n    },\n    computed: {\n      tileGridIdent: noop,\n      inputTileGridFactory: noop,\n      inputTileUrlFunction: noop,\n    },\n    methods: {\n      createSource () {\n        return new StamenSource({\n          // ol/source/Source\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          opaque: this.opaque,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          url: this.currentUrls[0],\n          // ol/source/TileImage\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/XYZ\n          minZoom: this.minZoom,\n          maxZoom: this.maxZoom,\n          // ol/source/Stamen\n          layer: this.layer,\n        })\n      },\n      inputUrlChanged (value) {\n        this.setUrl(value)\n      },\n      attributionsCollapsibleChanged: noop,\n      projectionChanged: noop,\n      inputTileGridFactoryChanged: noop,\n      tileGridChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      crossOriginChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { Style } from 'ol/style'\nimport {\n  makeChangeOrRecreateWatchers,\n  olCmp,\n  projTransforms,\n  stubVNode,\n  styleContainer,\n  waitForMap,\n} from '../../mixins'\nimport { EPSG_3857 } from '../../ol-ext'\nimport { mergeDescriptors } from '../../utils'\n\n/**\n * Style function component for advanced styling.\n * Plays the role of both a style that mounts itself to style target component (vl-layer-vector, vl-feature & etc.)\n * and style target for inner style containers (vl-style-box) as fallback style.\n */\nexport default {\n  name: 'VlStyleFunc',\n  mixins: [\n    stubVNode,\n    projTransforms,\n    styleContainer,\n    olCmp,\n    waitForMap,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  props: {\n    /**\n     * @type {function(): function(feature: Feature): Style}\n     */\n    function: {\n      type: Function,\n      // required: true,\n    },\n    /**\n     * @deprecated\n     * @todo remove later\n     */\n    func: Function,\n    /**\n     * @deprecated Use `func` prop instead.\n     * @todo remove in v0.13.x\n     */\n    factory: Function,\n  },\n  data () {\n    return {\n      viewProjection: EPSG_3857,\n      dataProjection: EPSG_3857,\n    }\n  },\n  computed: {\n    inputFunction () {\n      let func = this.function || this.func\n      if (!func && this.factory) {\n        func = this.factory()\n      }\n\n      return func\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'inputFunction',\n    ]),\n  },\n  created () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.factory) {\n        this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n      }\n      if (this.func) {\n        this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n      }\n    }\n\n    this::defineServices()\n  },\n  updated () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.factory) {\n        this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n      }\n      if (this.func) {\n        this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n      }\n    }\n  },\n  methods: {\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async beforeInit () {\n      await Promise.all([\n        this::olCmp.methods.beforeInit(),\n        this::waitForMap.methods.beforeInit(),\n      ])\n    },\n    /**\n     * @return {function(feature: Feature): Style}\n     * @protected\n     */\n    createOlObject () {\n      // user provided style function\n      const providedStyleFunc = this.inputFunction\n      // fallback style function made from inner style containers\n      const fallbackStyleFunc = this.createStyleFunc(this.$style, this.getDefaultStyle())\n\n      const func = function __styleFunc (feature, resolution) {\n        const style = providedStyleFunc(feature, resolution)\n        // not empty or null style\n        if (\n          style == null ||\n          (Array.isArray(style) && style.length) ||\n          style instanceof Style\n        ) {\n          return style\n        }\n        return fallbackStyleFunc(feature, resolution)\n      }\n      func.id = this.currentId\n\n      return func\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      return mergeDescriptors(\n        this::olCmp.methods.getServices(),\n        this::styleContainer.methods.getServices(),\n      )\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async mount () {\n      this.$styleContainer?.setStyle(this)\n\n      return this::olCmp.methods.mount()\n    },\n    /**\n     * @return {Promise<void>}\n     * @protected\n     */\n    async unmount () {\n      if (this.$styleContainer?.getStyle() === this.$styleFunction) {\n        this.$styleContainer.setStyle(null)\n      }\n\n      return this::olCmp.methods.unmount()\n    },\n    /**\n     * @protected\n     */\n    getStyleTarget () {\n      return {\n        getStyle: () => this._style,\n        setStyle: async () => {\n          if (process.env.VUELAYERS_DEBUG) {\n            this.$logger.log('style changed, scheduling recreate...')\n          }\n\n          await this.scheduleRecreate()\n        },\n      }\n    },\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $styleFunction: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $mapVm: {\n      enumerable: true,\n      get: () => this.$services?.mapVm,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $viewVm: {\n      enumerable: true,\n      get: () => this.$services?.viewVm,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $styleContainer: {\n      enumerable: true,\n      get: () => this.$services?.styleContainer,\n    },\n  })\n}\n","<script>\n  import { Style } from 'ol/style'\n  import {\n    makeChangeOrRecreateWatchers,\n    olCmp,\n    projTransforms,\n    stubVNode,\n    styleContainer,\n    waitForMap,\n  } from '../../mixins'\n  import { EPSG_3857 } from '../../ol-ext'\n  import { mergeDescriptors } from '../../utils'\n\n  /**\n   * Style function component for advanced styling.\n   * Plays the role of both a style that mounts itself to style target component (vl-layer-vector, vl-feature & etc.)\n   * and style target for inner style containers (vl-style-box) as fallback style.\n   */\n  export default {\n    name: 'VlStyleFunc',\n    mixins: [\n      stubVNode,\n      projTransforms,\n      styleContainer,\n      olCmp,\n      waitForMap,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      /**\n       * @type {function(): function(feature: Feature): Style}\n       */\n      function: {\n        type: Function,\n        // required: true,\n      },\n      /**\n       * @deprecated\n       * @todo remove later\n       */\n      func: Function,\n      /**\n       * @deprecated Use `func` prop instead.\n       * @todo remove in v0.13.x\n       */\n      factory: Function,\n    },\n    data () {\n      return {\n        viewProjection: EPSG_3857,\n        dataProjection: EPSG_3857,\n      }\n    },\n    computed: {\n      inputFunction () {\n        let func = this.function || this.func\n        if (!func && this.factory) {\n          func = this.factory()\n        }\n\n        return func\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'inputFunction',\n      ]),\n    },\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.factory) {\n          this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n        }\n        if (this.func) {\n          this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n        }\n      }\n\n      this::defineServices()\n    },\n    updated () {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.factory) {\n          this.$logger.warn(\"'factory' prop is deprecated. Use 'function' prop instead.\")\n        }\n        if (this.func) {\n          this.$logger.warn(\"'func' prop is deprecated. Use 'function' prop instead.\")\n        }\n      }\n    },\n    methods: {\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async beforeInit () {\n        await Promise.all([\n          this::olCmp.methods.beforeInit(),\n          this::waitForMap.methods.beforeInit(),\n        ])\n      },\n      /**\n       * @return {function(feature: Feature): Style}\n       * @protected\n       */\n      createOlObject () {\n        // user provided style function\n        const providedStyleFunc = this.inputFunction\n        // fallback style function made from inner style containers\n        const fallbackStyleFunc = this.createStyleFunc(this.$style, this.getDefaultStyle())\n\n        const func = function __styleFunc (feature, resolution) {\n          const style = providedStyleFunc(feature, resolution)\n          // not empty or null style\n          if (\n            style == null ||\n            (Array.isArray(style) && style.length) ||\n            style instanceof Style\n          ) {\n            return style\n          }\n          return fallbackStyleFunc(feature, resolution)\n        }\n        func.id = this.currentId\n\n        return func\n      },\n      /**\n       * @returns {Object}\n       * @protected\n       */\n      getServices () {\n        return mergeDescriptors(\n          this::olCmp.methods.getServices(),\n          this::styleContainer.methods.getServices(),\n        )\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async mount () {\n        this.$styleContainer?.setStyle(this)\n\n        return this::olCmp.methods.mount()\n      },\n      /**\n       * @return {Promise<void>}\n       * @protected\n       */\n      async unmount () {\n        if (this.$styleContainer?.getStyle() === this.$styleFunction) {\n          this.$styleContainer.setStyle(null)\n        }\n\n        return this::olCmp.methods.unmount()\n      },\n      /**\n       * @protected\n       */\n      getStyleTarget () {\n        return {\n          getStyle: () => this._style,\n          setStyle: async () => {\n            if (process.env.VUELAYERS_DEBUG) {\n              this.$logger.log('style changed, scheduling recreate...')\n            }\n\n            await this.scheduleRecreate()\n          },\n        }\n      },\n    },\n  }\n\n  function defineServices () {\n    Object.defineProperties(this, {\n      $styleFunction: {\n        enumerable: true,\n        get: () => this.$olObject,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $mapVm: {\n        enumerable: true,\n        get: () => this.$services?.mapVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $viewVm: {\n        enumerable: true,\n        get: () => this.$services?.viewVm,\n      },\n      /**\n       * @type {Object|undefined}\n       */\n      $styleContainer: {\n        enumerable: true,\n        get: () => this.$services?.styleContainer,\n      },\n    })\n  }\n</script>\n","import { pick } from '../../utils'\nimport Style from './style.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Style, options)\n\n  Vue.component(Style.name, Style)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Style,\n}\n","\nimport { TileArcGISRest as TileArcGISRestSource } from 'ol/source'\nimport { tileImageSource, arcgisSource } from '../../mixins'\nimport { noop } from '../../utils'\n\nexport default {\n  name: 'VlSourceTileArcgisRest',\n  mixins: [\n    arcgisSource,\n    tileImageSource,\n  ],\n  computed: {\n    inputTileUrlFunction: noop,\n  },\n  methods: {\n    createSource () {\n      return new TileArcGISRestSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        projection: this.resolvedDataProjection,\n        wrapX: this.wrapX,\n        // ol/source/Tile\n        cacheSize: this.cacheSize,\n        tileGrid: this.tileGrid,\n        transition: this.transition,\n        // ol/source/UrlTile\n        tileLoadFunction: this.currentTileLoadFunction,\n        urls: this.currentUrls,\n        // ol/source/TileImage\n        crossOrigin: this.crossOrigin,\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        imageSmoothing: this.imageSmoothing,\n        // ol/source/TileArcGISRest\n        hidpi: this.hidpi,\n        params: this.currentParams,\n      })\n    },\n    stateChanged: noop,\n    attributionsCollapsibleChanged: noop,\n    tileKeyChanged: noop,\n    opaqueChanged: noop,\n    tilePixelRatioChanged: noop,\n    zDirectionChanged: noop,\n    inputTileUrlFunctionChanged: noop,\n    tileClassChanged: noop,\n  },\n}\n","<script>\n  import { TileArcGISRest as TileArcGISRestSource } from 'ol/source'\n  import { tileImageSource, arcgisSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceTileArcgisRest',\n    mixins: [\n      arcgisSource,\n      tileImageSource,\n    ],\n    computed: {\n      inputTileUrlFunction: noop,\n    },\n    methods: {\n      createSource () {\n        return new TileArcGISRestSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          urls: this.currentUrls,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/TileArcGISRest\n          hidpi: this.hidpi,\n          params: this.currentParams,\n        })\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n      tileClassChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n\n  Vue.component('VlSourceArcgisRest', {\n    name: 'VlSourceArcgisRest',\n    extends: Source,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlSourceArcgisRest component is deprecated. Use VlSourceTileArcgisRest component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { Tile as TileLayer } from 'ol/layer'\nimport { tileLayer } from '../../mixins'\n\n/**\n * Layer that provide pre-rendered, tiled images in grid that are organized by zoom levels for\n * specific resolutions. `vl-tile-layer` component implements a **source container** interface, so it should be\n * used together with tile-like `vl-source-*` components.\n */\nexport default {\n  name: 'VlLayerTile',\n  mixins: [\n    tileLayer,\n  ],\n  methods: {\n    /**\n     * @return {Tile}\n     * @protected\n     */\n    createLayer () {\n      return new TileLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Layer\n        render: this.render,\n        source: this.$source,\n        // ol/layer/BaseTile\n        preload: this.currentPreload,\n        useInterimTilesOnError: this.currentUseInterimTilesOnError,\n      })\n    },\n  },\n}\n","<script>\n  import { Tile as TileLayer } from 'ol/layer'\n  import { tileLayer } from '../../mixins'\n\n  /**\n   * Layer that provide pre-rendered, tiled images in grid that are organized by zoom levels for\n   * specific resolutions. `vl-tile-layer` component implements a **source container** interface, so it should be\n   * used together with tile-like `vl-source-*` components.\n   */\n  export default {\n    name: 'VlLayerTile',\n    mixins: [\n      tileLayer,\n    ],\n    methods: {\n      /**\n       * @return {Tile}\n       * @protected\n       */\n      createLayer () {\n        return new TileLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseTile\n          preload: this.currentPreload,\n          useInterimTilesOnError: this.currentUseInterimTilesOnError,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { TileWMS as TileWMSSource } from 'ol/source'\nimport { makeChangeOrRecreateWatchers, tileImageSource, wmsSource } from '../../mixins'\nimport { noop } from '../../utils'\n\nexport default {\n  name: 'VlSourceTileWms',\n  mixins: [\n    wmsSource,\n    tileImageSource,\n  ],\n  props: {\n    gutter: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    inputTileUrlFunction: noop,\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'gutter',\n    ]),\n  },\n  methods: {\n    createSource () {\n      return new TileWMSSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        projection: this.resolvedDataProjection,\n        wrapX: this.wrapX,\n        // ol/source/Tile\n        cacheSize: this.cacheSize,\n        tileGrid: this.tileGrid,\n        transition: this.transition,\n        // ol/source/UrlTile\n        tileLoadFunction: this.currentTileLoadFunction,\n        urls: this.currentUrls,\n        // ol/source/TileImage\n        crossOrigin: this.crossOrigin,\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        tileClass: this.tileClass,\n        imageSmoothing: this.imageSmoothing,\n        // ol/source/TileWMS\n        gutter: this.gutter,\n        hidpi: this.hidpi,\n        serverType: this.serverType,\n        params: this.currentParams,\n      })\n    },\n    stateChanged: noop,\n    attributionsCollapsibleChanged: noop,\n    tileKeyChanged: noop,\n    opaqueChanged: noop,\n    tilePixelRatioChanged: noop,\n    zDirectionChanged: noop,\n    inputTileUrlFunctionChanged: noop,\n  },\n}\n","<script>\n  import { TileWMS as TileWMSSource } from 'ol/source'\n  import { makeChangeOrRecreateWatchers, tileImageSource, wmsSource } from '../../mixins'\n  import { noop } from '../../utils'\n\n  export default {\n    name: 'VlSourceTileWms',\n    mixins: [\n      wmsSource,\n      tileImageSource,\n    ],\n    props: {\n      gutter: {\n        type: Number,\n        default: 0,\n      },\n    },\n    computed: {\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'gutter',\n      ]),\n    },\n    methods: {\n      createSource () {\n        return new TileWMSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          urls: this.currentUrls,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          tileClass: this.tileClass,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/TileWMS\n          gutter: this.gutter,\n          hidpi: this.hidpi,\n          serverType: this.serverType,\n          params: this.currentParams,\n        })\n      },\n      stateChanged: noop,\n      attributionsCollapsibleChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n\n  // todo remove in v0.13.x\n  Vue.component('VlSourceWms', {\n    name: 'VlSourceWms',\n    extends: Source,\n    created () {\n      if (process.env.NODE_ENV !== 'production') {\n        this.$logger.warn('VlSourceWms component is deprecated. Use VlSourceTileWms component instead.')\n      }\n    },\n  })\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { Collection } from 'ol'\nimport { Translate as TranslateInteraction } from 'ol/interaction'\nimport { Vector as VectorSource } from 'ol/source'\nimport VectorEventType from 'ol/source/VectorEventType'\nimport { merge as mergeObs } from 'rxjs'\nimport { map as mapObs, tap } from 'rxjs/operators'\nimport { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\nimport { COORD_PRECISION, getLayerId, writeGeoJsonFeature } from '../../ol-ext'\nimport { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\nimport { assert, coalesce, instanceOf, isFunction, isNumber, isString, map } from '../../utils'\n\nexport default {\n  name: 'VlInteractionTranslate',\n  mixins: [\n    interaction,\n  ],\n  stubVNode: {\n    empty: false,\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.vmClass,\n      }\n    },\n  },\n  props: {\n    source: {\n      type: String,\n      required: true,\n    },\n    layers: [String, Array],\n    filter: Function,\n    hitTolerance: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data () {\n    return {\n      currentHitTolerance: this.hitTolerance,\n    }\n  },\n  computed: {\n    inputFilter () {\n      if (isFunction(this.filter)) return this.filter\n\n      let layers = this.layers\n      if (!layers) return\n\n      if (isString(layers)) layers = [layers]\n\n      return (feature, layer) => layers.includes(getLayerId(layer))\n    },\n  },\n  watch: {\n    rev () {\n      if (!this.$interaction) return\n\n      if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n        this.currentHitTolerance = this.$interaction.getHitTolerance()\n      }\n    },\n    hitTolerance (value) {\n      this.setHitTolerance(value)\n    },\n    currentHitTolerance (value) {\n      if (value === this.hitTolerance) return\n\n      this.$emit('update:hitTolerance', value)\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'source',\n      'inputFilter',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {Promise<Modify>}\n     * @protected\n     */\n    async createInteraction () {\n      const source = this._source = await this.getInstance(this.source)\n      assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n      let features\n      if (source instanceof VectorSource) {\n        features = source.getFeaturesCollection()\n        if (!features) {\n          features = new Collection(source.getFeatures())\n          this.subscribeTo(\n            obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n            ({ feature }) => feature && features.push(feature),\n          )\n          this.subscribeTo(\n            obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n            ({ feature }) => feature && features.remove(feature),\n          )\n        }\n        instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n      } else {\n        if (isFunction(source.getFeaturesCollection)) {\n          features = source.getFeaturesCollection()\n        } else if (isFunction(source.getFeatures)) {\n          features = source.getFeatures()\n        }\n        instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n      }\n\n      return new TranslateInteraction({\n        features,\n        filter: this.inputFilter,\n        hitTolerance: this.currentHitTolerance,\n      })\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::interaction.methods.subscribeAll()\n      this::subscribeToInteractionChanges()\n    },\n    getHitTolerance () {\n      return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n    },\n    setHitTolerance (tolerance) {\n      assert(isNumber(tolerance), 'Invalid hit tolerance')\n\n      if (tolerance !== this.currentHitTolerance) {\n        this.currentHitTolerance = tolerance\n      }\n      if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n        this.$interaction.setHitTolerance(tolerance)\n      }\n    },\n  },\n}\n\n/**\n * @private\n */\nfunction subscribeToInteractionChanges () {\n  const start = obsFromOlEvent(this.$interaction, 'translatestart').pipe(\n    tap(() => this.setInteracting(true)),\n  )\n  const end = obsFromOlEvent(this.$interaction, 'translateend').pipe(\n    tap(() => this.setInteracting(false)),\n  )\n  const progress = obsFromOlEvent(this.$interaction, 'translating')\n  const events = mergeObs(start, end, progress).pipe(\n    mapObs(({ type, features, coordinate, startCoordinate }) => {\n      const viewProj = this.resolvedViewProjection\n      const dataProj = this.resolvedDataProjection\n      return {\n        type,\n        features: features instanceof Collection ? features.getArray() : features,\n        coordinate: this.pointToDataProj(coordinate),\n        startCoordinate: this.pointToDataProj(startCoordinate),\n        get json () {\n          if (!this._json) {\n            this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n          }\n          return this._json\n        },\n      }\n    }),\n  )\n  this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n}\n","<script>\n  import { Collection } from 'ol'\n  import { Translate as TranslateInteraction } from 'ol/interaction'\n  import { Vector as VectorSource } from 'ol/source'\n  import VectorEventType from 'ol/source/VectorEventType'\n  import { merge as mergeObs } from 'rxjs'\n  import { map as mapObs, tap } from 'rxjs/operators'\n  import { interaction, makeChangeOrRecreateWatchers } from '../../mixins'\n  import { COORD_PRECISION, getLayerId, writeGeoJsonFeature } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { assert, coalesce, instanceOf, isFunction, isNumber, isString, map } from '../../utils'\n\n  export default {\n    name: 'VlInteractionTranslate',\n    mixins: [\n      interaction,\n    ],\n    stubVNode: {\n      empty: false,\n      attrs () {\n        return {\n          id: this.vmId,\n          class: this.vmClass,\n        }\n      },\n    },\n    props: {\n      source: {\n        type: String,\n        required: true,\n      },\n      layers: [String, Array],\n      filter: Function,\n      hitTolerance: {\n        type: Number,\n        default: 0,\n      },\n    },\n    data () {\n      return {\n        currentHitTolerance: this.hitTolerance,\n      }\n    },\n    computed: {\n      inputFilter () {\n        if (isFunction(this.filter)) return this.filter\n\n        let layers = this.layers\n        if (!layers) return\n\n        if (isString(layers)) layers = [layers]\n\n        return (feature, layer) => layers.includes(getLayerId(layer))\n      },\n    },\n    watch: {\n      rev () {\n        if (!this.$interaction) return\n\n        if (this.currentHitTolerance !== this.$interaction.getHitTolerance()) {\n          this.currentHitTolerance = this.$interaction.getHitTolerance()\n        }\n      },\n      hitTolerance (value) {\n        this.setHitTolerance(value)\n      },\n      currentHitTolerance (value) {\n        if (value === this.hitTolerance) return\n\n        this.$emit('update:hitTolerance', value)\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'source',\n        'inputFilter',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {Promise<Modify>}\n       * @protected\n       */\n      async createInteraction () {\n        const source = this._source = await this.getInstance(this.source)\n        assert(!!source, `Source \"${this.source}\" not found in identity map.`)\n\n        let features\n        if (source instanceof VectorSource) {\n          features = source.getFeaturesCollection()\n          if (!features) {\n            features = new Collection(source.getFeatures())\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.ADDFEATURE),\n              ({ feature }) => feature && features.push(feature),\n            )\n            this.subscribeTo(\n              obsFromOlEvent(source, VectorEventType.REMOVEFEATURE),\n              ({ feature }) => feature && features.remove(feature),\n            )\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        } else {\n          if (isFunction(source.getFeaturesCollection)) {\n            features = source.getFeaturesCollection()\n          } else if (isFunction(source.getFeatures)) {\n            features = source.getFeatures()\n          }\n          instanceOf(features, Collection, `Source \"${this.source}\" doesn't provide features collection.`)\n        }\n\n        return new TranslateInteraction({\n          features,\n          filter: this.inputFilter,\n          hitTolerance: this.currentHitTolerance,\n        })\n      },\n      /**\n       * @return {void}\n       * @protected\n       */\n      subscribeAll () {\n        this::interaction.methods.subscribeAll()\n        this::subscribeToInteractionChanges()\n      },\n      getHitTolerance () {\n        return coalesce(this.$interaction?.getHitTolerance(), this.currentHitTolerance)\n      },\n      setHitTolerance (tolerance) {\n        assert(isNumber(tolerance), 'Invalid hit tolerance')\n\n        if (tolerance !== this.currentHitTolerance) {\n          this.currentHitTolerance = tolerance\n        }\n        if (this.$interaction && tolerance !== this.$interaction.getHitTolerance()) {\n          this.$interaction.setHitTolerance(tolerance)\n        }\n      },\n    },\n  }\n\n  /**\n   * @private\n   */\n  function subscribeToInteractionChanges () {\n    const start = obsFromOlEvent(this.$interaction, 'translatestart').pipe(\n      tap(() => this.setInteracting(true)),\n    )\n    const end = obsFromOlEvent(this.$interaction, 'translateend').pipe(\n      tap(() => this.setInteracting(false)),\n    )\n    const progress = obsFromOlEvent(this.$interaction, 'translating')\n    const events = mergeObs(start, end, progress).pipe(\n      mapObs(({ type, features, coordinate, startCoordinate }) => {\n        const viewProj = this.resolvedViewProjection\n        const dataProj = this.resolvedDataProjection\n        return {\n          type,\n          features: features instanceof Collection ? features.getArray() : features,\n          coordinate: this.pointToDataProj(coordinate),\n          startCoordinate: this.pointToDataProj(startCoordinate),\n          get json () {\n            if (!this._json) {\n              this._json = map(this.features, feature => writeGeoJsonFeature(feature, viewProj, dataProj, COORD_PRECISION))\n            }\n            return this._json\n          },\n        }\n      }),\n    )\n    this.subscribeTo(events, evt => this.$emit(evt.type, evt))\n  }\n</script>\n","import { pick } from '../../utils'\nimport Interaction from './interaction.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Interaction, options)\n\n  Vue.component(Interaction.name, Interaction)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Interaction,\n}\n","\nimport { VectorImage as VectorImageLayer } from 'ol/layer'\nimport { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n\n/**\n * Layer for data that is rendered client-side.\n */\nexport default {\n  name: 'VlLayerVectorImage',\n  mixins: [\n    vectorLayer,\n  ],\n  props: {\n    // ol/layer/VectorImage\n    /**\n     * @type {number}\n     */\n    imageRatio: {\n      type: Number,\n      default: 1,\n    },\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'imageRatio',\n    ]),\n  },\n  methods: {\n    /**\n     * @return {VectorImageLayer}\n     * @protected\n     */\n    createLayer () {\n      return new VectorImageLayer({\n        // ol/layer/Base\n        className: this.className,\n        opacity: this.currentOpacity,\n        visible: this.currentVisible,\n        extent: this.currentExtentViewProj,\n        zIndex: this.currentZIndex,\n        minResolution: this.currentMinResolution,\n        maxResolution: this.currentMaxResolution,\n        minZoom: this.currentMinZoom,\n        maxZoom: this.currentMaxZoom,\n        // ol/layer/Layer\n        render: this.render,\n        source: this.$source,\n        // ol/layer/BaseVector\n        renderOrder: this.renderOrder,\n        renderBuffer: this.renderBuffer,\n        declutter: this.declutter,\n        updateWhileAnimating: this.updateWhileAnimating,\n        updateWhileInteracting: this.updateWhileInteracting,\n        style: this.$style,\n        // ol/layer/VectorImage\n        imageRatio: this.imageRatio,\n      })\n    },\n  },\n}\n","<script>\n  import { VectorImage as VectorImageLayer } from 'ol/layer'\n  import { makeChangeOrRecreateWatchers, vectorLayer } from '../../mixins'\n\n  /**\n   * Layer for data that is rendered client-side.\n   */\n  export default {\n    name: 'VlLayerVectorImage',\n    mixins: [\n      vectorLayer,\n    ],\n    props: {\n      // ol/layer/VectorImage\n      /**\n       * @type {number}\n       */\n      imageRatio: {\n        type: Number,\n        default: 1,\n      },\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'imageRatio',\n      ]),\n    },\n    methods: {\n      /**\n       * @return {VectorImageLayer}\n       * @protected\n       */\n      createLayer () {\n        return new VectorImageLayer({\n          // ol/layer/Base\n          className: this.className,\n          opacity: this.currentOpacity,\n          visible: this.currentVisible,\n          extent: this.currentExtentViewProj,\n          zIndex: this.currentZIndex,\n          minResolution: this.currentMinResolution,\n          maxResolution: this.currentMaxResolution,\n          minZoom: this.currentMinZoom,\n          maxZoom: this.currentMaxZoom,\n          // ol/layer/Layer\n          render: this.render,\n          source: this.$source,\n          // ol/layer/BaseVector\n          renderOrder: this.renderOrder,\n          renderBuffer: this.renderBuffer,\n          declutter: this.declutter,\n          updateWhileAnimating: this.updateWhileAnimating,\n          updateWhileInteracting: this.updateWhileInteracting,\n          style: this.$style,\n          // ol/layer/VectorImage\n          imageRatio: this.imageRatio,\n        })\n      },\n    },\n  }\n</script>\n","import { pick } from '../../utils'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Layer,\n}\n","\nimport { Feature } from 'ol'\nimport { createTileUrlFunctionFromTemplates } from 'ol-tilecache'\nimport { VectorTile as VectorTileSource } from 'ol/source'\nimport TileEventType from 'ol/source/TileEventType'\nimport { createXYZ } from 'ol/tilegrid'\nimport { featureHelper, makeChangeOrRecreateWatchers, tileSource, urlTileSource } from '../../mixins'\nimport { createMvtFmt, extentFromProjection, roundExtent } from '../../ol-ext'\nimport { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\nimport { and, coalesce, forEach, isArray, isFunction, isNumber, noop, or, sealFactory } from '../../utils'\n\nconst validateTileSize = /*#__PURE__*/or(isNumber, and(isArray, value => value.length === 2 && value.every(isNumber)))\n\nexport default {\n  name: 'VlSourceVectorTile',\n  mixins: [\n    urlTileSource,\n    featureHelper,\n  ],\n  props: {\n    /* eslint-disable vue/require-prop-types */\n    // ol/source/Tile\n    cacheSize: {\n      ...tileSource.props.cacheSize,\n      default: 128,\n    },\n    zDirection: {\n      ...tileSource.props.zDirection,\n      default: 1,\n    },\n    /* eslint-enable vue/require-prop-types */\n    // ol/source/VectorTile\n    extent: {\n      type: Array,\n      validator: value => value.length === 4 && value.every(isNumber),\n    },\n    formatFactory: {\n      type: Function,\n      default: createMvtFmt,\n    },\n    overlaps: {\n      type: Boolean,\n      default: true,\n    },\n    tileClass: Function,\n    maxZoom: {\n      type: Number,\n      default: 22,\n    },\n    minZoom: {\n      type: Number,\n      default: 0,\n      validator: value => value >= 0,\n    },\n    maxResolution: Number,\n    tileSize: {\n      type: [Number, Array],\n      default: () => [512, 512],\n      validator: validateTileSize,\n    },\n  },\n  data () {\n    return {\n      format: undefined,\n    }\n  },\n  computed: {\n    inputTileSize () {\n      return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n    },\n    derivedTileGridFactory () {\n      if (isFunction(this.tileGridFactory)) {\n        return this.tileGridFactory\n      }\n\n      const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n      const maxZoom = this.maxZoom\n      const minZoom = this.minZoom\n      const maxResolution = this.maxResolution\n      const tileSize = this.inputTileSize\n\n      return () => createXYZ({ extent, maxZoom, minZoom, maxResolution, tileSize })\n    },\n    extentDataProj () {\n      return roundExtent(this.extent)\n    },\n    extentViewProj () {\n      return this.extentToViewProj(this.extent)\n    },\n    formatIdent () {\n      if (!this.olObjIdent) return\n\n      return this.makeIdent(this.olObjIdent, 'format')\n    },\n    inputFormatFactory () {\n      return sealFactory(::this.formatFactory)\n    },\n    inputTileUrlFunction () {\n      const urlFunc = coalesce(this.tileUrlFunction, this.tileUrlFunc)\n      if (isFunction(urlFunc)) return urlFunc\n      if (this.currentUrls.length === 0) return\n\n      return createTileUrlFunctionFromTemplates(this.currentUrls, this.tileGrid)\n    },\n  },\n  watch: {\n    formatIdent (value, prevValue) {\n      if (value && prevValue) {\n        this.moveInstance(value, prevValue)\n      } else if (value && !prevValue && this.format) {\n        this.setInstance(value, this.format)\n      } else if (!value && prevValue) {\n        this.unsetInstance(prevValue)\n      }\n    },\n    inputFormatFactory (value) {\n      while (this.hasInstance(this.formatIdent)) {\n        this.unsetInstance(this.formatIdent)\n      }\n\n      if (isFunction(value)) {\n        this.format = this.instanceFactoryCall(this.formatIdent, this::value)\n      } else {\n        this.format = undefined\n      }\n    },\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'extentViewProj',\n      'overlaps',\n      'tileClass',\n    ], [\n      'extentViewProj',\n    ]),\n  },\n  created () {\n    if (isFunction(this.inputFormatFactory)) {\n      this.format = this.instanceFactoryCall(this.formatIdent, ::this.inputFormatFactory)\n    }\n  },\n  methods: {\n    /**\n     * @return {VectorTileSource}\n     */\n    createSource () {\n      return new VectorTileSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        attributionsCollapsible: this.attributionsCollapsible,\n        projection: this.resolvedDataProjection,\n        state: this.currentState,\n        wrapX: this.wrapX,\n        // ol/source/Tile\n        cacheSize: this.cacheSize,\n        tileGrid: this.tileGrid,\n        transition: this.transition,\n        zDirection: this.zDirection,\n        // ol/source/UrlTile\n        tileLoadFunction: this.currentTileLoadFunction,\n        tileUrlFunction: this.currentTileUrlFunction,\n        // ol/source/VectorTile\n        format: this.format,\n        extent: this.extentViewProj,\n        overlaps: this.overlaps,\n        tileClass: this.tileClass,\n      })\n    },\n    /**\n     * @returns {void}\n     */\n    subscribeAll () {\n      this::urlTileSource.methods.subscribeAll()\n      this::subscribeToSourceEvents()\n    },\n    async getFeaturesInExtent (extent, viewProj = false) {\n      extent = viewProj ? roundExtent(extent) : this.extentToViewProj(extent)\n\n      return (await this.resolveSource()).getFeaturesInExtent(extent)\n    },\n    async clear () {\n      (await this.resolveSource()).clear()\n    },\n    tileKeyChanged: noop,\n    opaqueChanged: noop,\n    tilePixelRatioChanged: noop,\n  },\n}\n\nfunction subscribeToSourceEvents () {\n  this.subscribeTo(obsFromOlEvent(this.$source, TileEventType.TILELOADEND), evt => {\n    if (!evt.tile) return\n\n    forEach(evt.tile.getFeatures(), feature => {\n      if (!(feature instanceof Feature)) return\n      this.initializeFeature(feature)\n    })\n  })\n}\n","<script>\n  import { Feature } from 'ol'\n  import { createTileUrlFunctionFromTemplates } from 'ol-tilecache'\n  import { VectorTile as VectorTileSource } from 'ol/source'\n  import TileEventType from 'ol/source/TileEventType'\n  import { createXYZ } from 'ol/tilegrid'\n  import { featureHelper, makeChangeOrRecreateWatchers, tileSource, urlTileSource } from '../../mixins'\n  import { createMvtFmt, extentFromProjection, roundExtent } from '../../ol-ext'\n  import { fromOlEvent as obsFromOlEvent } from '../../rx-ext'\n  import { and, coalesce, forEach, isArray, isFunction, isNumber, noop, or, sealFactory } from '../../utils'\n\n  const validateTileSize = /*#__PURE__*/or(isNumber, and(isArray, value => value.length === 2 && value.every(isNumber)))\n\n  export default {\n    name: 'VlSourceVectorTile',\n    mixins: [\n      urlTileSource,\n      featureHelper,\n    ],\n    props: {\n      /* eslint-disable vue/require-prop-types */\n      // ol/source/Tile\n      cacheSize: {\n        ...tileSource.props.cacheSize,\n        default: 128,\n      },\n      zDirection: {\n        ...tileSource.props.zDirection,\n        default: 1,\n      },\n      /* eslint-enable vue/require-prop-types */\n      // ol/source/VectorTile\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      formatFactory: {\n        type: Function,\n        default: createMvtFmt,\n      },\n      overlaps: {\n        type: Boolean,\n        default: true,\n      },\n      tileClass: Function,\n      maxZoom: {\n        type: Number,\n        default: 22,\n      },\n      minZoom: {\n        type: Number,\n        default: 0,\n        validator: value => value >= 0,\n      },\n      maxResolution: Number,\n      tileSize: {\n        type: [Number, Array],\n        default: () => [512, 512],\n        validator: validateTileSize,\n      },\n    },\n    data () {\n      return {\n        format: undefined,\n      }\n    },\n    computed: {\n      inputTileSize () {\n        return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n      },\n      derivedTileGridFactory () {\n        if (isFunction(this.tileGridFactory)) {\n          return this.tileGridFactory\n        }\n\n        const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n        const maxZoom = this.maxZoom\n        const minZoom = this.minZoom\n        const maxResolution = this.maxResolution\n        const tileSize = this.inputTileSize\n\n        return () => createXYZ({ extent, maxZoom, minZoom, maxResolution, tileSize })\n      },\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      formatIdent () {\n        if (!this.olObjIdent) return\n\n        return this.makeIdent(this.olObjIdent, 'format')\n      },\n      inputFormatFactory () {\n        return sealFactory(::this.formatFactory)\n      },\n      inputTileUrlFunction () {\n        const urlFunc = coalesce(this.tileUrlFunction, this.tileUrlFunc)\n        if (isFunction(urlFunc)) return urlFunc\n        if (this.currentUrls.length === 0) return\n\n        return createTileUrlFunctionFromTemplates(this.currentUrls, this.tileGrid)\n      },\n    },\n    watch: {\n      formatIdent (value, prevValue) {\n        if (value && prevValue) {\n          this.moveInstance(value, prevValue)\n        } else if (value && !prevValue && this.format) {\n          this.setInstance(value, this.format)\n        } else if (!value && prevValue) {\n          this.unsetInstance(prevValue)\n        }\n      },\n      inputFormatFactory (value) {\n        while (this.hasInstance(this.formatIdent)) {\n          this.unsetInstance(this.formatIdent)\n        }\n\n        if (isFunction(value)) {\n          this.format = this.instanceFactoryCall(this.formatIdent, this::value)\n        } else {\n          this.format = undefined\n        }\n      },\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'extentViewProj',\n        'overlaps',\n        'tileClass',\n      ], [\n        'extentViewProj',\n      ]),\n    },\n    created () {\n      if (isFunction(this.inputFormatFactory)) {\n        this.format = this.instanceFactoryCall(this.formatIdent, ::this.inputFormatFactory)\n      }\n    },\n    methods: {\n      /**\n       * @return {VectorTileSource}\n       */\n      createSource () {\n        return new VectorTileSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          attributionsCollapsible: this.attributionsCollapsible,\n          projection: this.resolvedDataProjection,\n          state: this.currentState,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          transition: this.transition,\n          zDirection: this.zDirection,\n          // ol/source/UrlTile\n          tileLoadFunction: this.currentTileLoadFunction,\n          tileUrlFunction: this.currentTileUrlFunction,\n          // ol/source/VectorTile\n          format: this.format,\n          extent: this.extentViewProj,\n          overlaps: this.overlaps,\n          tileClass: this.tileClass,\n        })\n      },\n      /**\n       * @returns {void}\n       */\n      subscribeAll () {\n        this::urlTileSource.methods.subscribeAll()\n        this::subscribeToSourceEvents()\n      },\n      async getFeaturesInExtent (extent, viewProj = false) {\n        extent = viewProj ? roundExtent(extent) : this.extentToViewProj(extent)\n\n        return (await this.resolveSource()).getFeaturesInExtent(extent)\n      },\n      async clear () {\n        (await this.resolveSource()).clear()\n      },\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      tilePixelRatioChanged: noop,\n    },\n  }\n\n  function subscribeToSourceEvents () {\n    this.subscribeTo(obsFromOlEvent(this.$source, TileEventType.TILELOADEND), evt => {\n      if (!evt.tile) return\n\n      forEach(evt.tile.getFeatures(), feature => {\n        if (!(feature instanceof Feature)) return\n        this.initializeFeature(feature)\n      })\n    })\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { getHeight as getExtentHeight, getWidth as getExtentWidth } from 'ol/extent'\nimport ExtentCorner from 'ol/extent/Corner'\nimport { toSize } from 'ol/size'\nimport { WMTS as WMTSSource } from 'ol/source'\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from 'ol/tilegrid/common'\nimport WMTSTileGrid from 'ol/tilegrid/WMTS'\nimport { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\nimport { extentFromProjection, getCorner as getExtentCorner, roundExtent, roundPointCoords } from '../../ol-ext'\nimport { coalesce, isArray, isFunction, isNumber, noop, range } from '../../utils'\n\nexport default {\n  name: 'VlSourceWmts',\n  mixins: [\n    tileImageSource,\n  ],\n  props: {\n    // ol/source/WMTS\n    layerName: {\n      type: String,\n      required: true,\n    },\n    styleName: {\n      type: String,\n      required: true,\n    },\n    matrixSet: {\n      type: String,\n      required: true,\n    },\n    dimensions: Object,\n    format: {\n      type: String,\n      default: 'image/jpeg',\n    },\n    requestEncoding: {\n      type: String,\n      default: 'KVP',\n    },\n    version: {\n      type: String,\n      default: '1.0.0',\n    },\n    // custom\n    extent: {\n      type: Array,\n      validator: value => value.length === 4 && value.every(isNumber),\n    },\n    resolutions: {\n      type: Array,\n      validator: value => value.every(isNumber),\n    },\n    origin: {\n      type: Array,\n      validator: value => value.length === 2 && value.every(isNumber),\n    },\n    matrixIds: {\n      type: Array,\n      validator: value => value.every(isNumber),\n    },\n    maxZoom: {\n      type: Number,\n      default: DEFAULT_MAX_ZOOM,\n    },\n    minZoom: {\n      type: Number,\n      default: 0,\n    },\n    tileSize: {\n      type: [Number, Array],\n      default: () => [DEFAULT_TILE_SIZE, DEFAULT_TILE_SIZE],\n    },\n  },\n  computed: {\n    extentDataProj () {\n      return roundExtent(this.extent)\n    },\n    extentViewProj () {\n      return this.extentToViewProj(this.extent)\n    },\n    originDataProj () {\n      return roundPointCoords(this.origin)\n    },\n    originViewProj () {\n      return this.pointToViewProj(this.origin)\n    },\n    inputTileSize () {\n      return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n    },\n    derivedTileGridFactory () {\n      if (isFunction(this.tileGridFactory)) {\n        return this.tileGridFactory\n      }\n\n      const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n      const resolutions = this.resolutions || resolutionsFromExtent(extent, this.maxZoom, this.inputTileSize)\n      const origin = this.originDataProj || getExtentCorner(extent, ExtentCorner.TOP_LEFT)\n      const matrixIds = this.matrixIds || range(this.minZoom, resolutions.length)\n      const tileSize = this.inputTileSize\n      const minZoom = this.minZoom\n\n      return () => (new WMTSTileGrid({ extent, origin, resolutions, minZoom, matrixIds, tileSize }))\n    },\n    inputTileUrlFunction: noop,\n  },\n  watch: {\n    .../*#__PURE__*/makeChangeOrRecreateWatchers([\n      'dimensions',\n      'format',\n      'layerName',\n      'styleName',\n      'matrixSet',\n      'requestEncoding',\n      'version',\n    ], [\n      'dimensions',\n    ]),\n  },\n  methods: {\n    /**\n     * @returns {WMTS}\n     * @protected\n     */\n    createSource () {\n      return new WMTSSource({\n        // ol/source/Source\n        attributions: this.currentAttributions,\n        projection: this.resolvedDataProjection,\n        wrapX: this.wrapX,\n        // ol/source/Tile\n        cacheSize: this.cacheSize,\n        tileGrid: this.tileGrid,\n        tilePixelRatio: this.tilePixelRatio,\n        transition: this.transition,\n        // ol/source/UrlTile\n        urls: this.currentUrls,\n        tileLoadFunction: this.currentTileLoadFunction,\n        // ol/source/TileImage\n        crossOrigin: this.crossOrigin,\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        tileClass: this.tileClass,\n        imageSmoothing: this.imageSmoothing,\n        // ol/source/WMTS\n        dimensions: this.dimensions,\n        format: this.format,\n        layer: this.layerName,\n        style: this.styleName,\n        matrixSet: this.matrixSet,\n        requestEncoding: this.requestEncoding,\n        version: this.version,\n      })\n    },\n    getDimensions () {\n      return coalesce(this.$source?.getDimensions(), this.dimensions)\n    },\n    getFormat () {\n      return coalesce(this.$source?.getFormat(), this.format)\n    },\n    getLayer () {\n      return coalesce(this.$source?.getLayer(), this.layerName)\n    },\n    getMatrixSet () {\n      return coalesce(this.$source?.getMatrixSet(), this.matrixSet)\n    },\n    getRequestEncoding () {\n      return coalesce(this.$source?.getRequestEncoding(), this.requestEncoding)\n    },\n    getStyle () {\n      return coalesce(this.$source?.getStyle(), this.styleName)\n    },\n    getVersion () {\n      return coalesce(this.$source?.getVersion(), this.version)\n    },\n    attributionsCollapsibleChanged: noop,\n    stateChanged: noop,\n    tileKeyChanged: noop,\n    opaqueChanged: noop,\n    zDirectionChanged: noop,\n    inputTileUrlFunctionChanged: noop,\n  },\n}\n\nfunction resolutionsFromExtent (extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM\n\n  const height = getExtentHeight(extent)\n  const width = getExtentWidth(extent)\n\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE)\n  maxResolution = maxResolution > 0\n    ? maxResolution\n    : Math.max(width / tileSize[0], height / tileSize[1])\n\n  const length = maxZoom + 1\n  const resolutions = new Array(length)\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z)\n  }\n\n  return resolutions\n}\n","<script>\n  import { getHeight as getExtentHeight, getWidth as getExtentWidth } from 'ol/extent'\n  import ExtentCorner from 'ol/extent/Corner'\n  import { toSize } from 'ol/size'\n  import { WMTS as WMTSSource } from 'ol/source'\n  import { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from 'ol/tilegrid/common'\n  import WMTSTileGrid from 'ol/tilegrid/WMTS'\n  import { makeChangeOrRecreateWatchers, tileImageSource } from '../../mixins'\n  import { extentFromProjection, getCorner as getExtentCorner, roundExtent, roundPointCoords } from '../../ol-ext'\n  import { coalesce, isArray, isFunction, isNumber, noop, range } from '../../utils'\n\n  export default {\n    name: 'VlSourceWmts',\n    mixins: [\n      tileImageSource,\n    ],\n    props: {\n      // ol/source/WMTS\n      layerName: {\n        type: String,\n        required: true,\n      },\n      styleName: {\n        type: String,\n        required: true,\n      },\n      matrixSet: {\n        type: String,\n        required: true,\n      },\n      dimensions: Object,\n      format: {\n        type: String,\n        default: 'image/jpeg',\n      },\n      requestEncoding: {\n        type: String,\n        default: 'KVP',\n      },\n      version: {\n        type: String,\n        default: '1.0.0',\n      },\n      // custom\n      extent: {\n        type: Array,\n        validator: value => value.length === 4 && value.every(isNumber),\n      },\n      resolutions: {\n        type: Array,\n        validator: value => value.every(isNumber),\n      },\n      origin: {\n        type: Array,\n        validator: value => value.length === 2 && value.every(isNumber),\n      },\n      matrixIds: {\n        type: Array,\n        validator: value => value.every(isNumber),\n      },\n      maxZoom: {\n        type: Number,\n        default: DEFAULT_MAX_ZOOM,\n      },\n      minZoom: {\n        type: Number,\n        default: 0,\n      },\n      tileSize: {\n        type: [Number, Array],\n        default: () => [DEFAULT_TILE_SIZE, DEFAULT_TILE_SIZE],\n      },\n    },\n    computed: {\n      extentDataProj () {\n        return roundExtent(this.extent)\n      },\n      extentViewProj () {\n        return this.extentToViewProj(this.extent)\n      },\n      originDataProj () {\n        return roundPointCoords(this.origin)\n      },\n      originViewProj () {\n        return this.pointToViewProj(this.origin)\n      },\n      inputTileSize () {\n        return isArray(this.tileSize) ? this.tileSize : [this.tileSize, this.tileSize]\n      },\n      derivedTileGridFactory () {\n        if (isFunction(this.tileGridFactory)) {\n          return this.tileGridFactory\n        }\n\n        const extent = this.extentDataProj || extentFromProjection(this.resolvedDataProjection)\n        const resolutions = this.resolutions || resolutionsFromExtent(extent, this.maxZoom, this.inputTileSize)\n        const origin = this.originDataProj || getExtentCorner(extent, ExtentCorner.TOP_LEFT)\n        const matrixIds = this.matrixIds || range(this.minZoom, resolutions.length)\n        const tileSize = this.inputTileSize\n        const minZoom = this.minZoom\n\n        return () => (new WMTSTileGrid({ extent, origin, resolutions, minZoom, matrixIds, tileSize }))\n      },\n      inputTileUrlFunction: noop,\n    },\n    watch: {\n      .../*#__PURE__*/makeChangeOrRecreateWatchers([\n        'dimensions',\n        'format',\n        'layerName',\n        'styleName',\n        'matrixSet',\n        'requestEncoding',\n        'version',\n      ], [\n        'dimensions',\n      ]),\n    },\n    methods: {\n      /**\n       * @returns {WMTS}\n       * @protected\n       */\n      createSource () {\n        return new WMTSSource({\n          // ol/source/Source\n          attributions: this.currentAttributions,\n          projection: this.resolvedDataProjection,\n          wrapX: this.wrapX,\n          // ol/source/Tile\n          cacheSize: this.cacheSize,\n          tileGrid: this.tileGrid,\n          tilePixelRatio: this.tilePixelRatio,\n          transition: this.transition,\n          // ol/source/UrlTile\n          urls: this.currentUrls,\n          tileLoadFunction: this.currentTileLoadFunction,\n          // ol/source/TileImage\n          crossOrigin: this.crossOrigin,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          tileClass: this.tileClass,\n          imageSmoothing: this.imageSmoothing,\n          // ol/source/WMTS\n          dimensions: this.dimensions,\n          format: this.format,\n          layer: this.layerName,\n          style: this.styleName,\n          matrixSet: this.matrixSet,\n          requestEncoding: this.requestEncoding,\n          version: this.version,\n        })\n      },\n      getDimensions () {\n        return coalesce(this.$source?.getDimensions(), this.dimensions)\n      },\n      getFormat () {\n        return coalesce(this.$source?.getFormat(), this.format)\n      },\n      getLayer () {\n        return coalesce(this.$source?.getLayer(), this.layerName)\n      },\n      getMatrixSet () {\n        return coalesce(this.$source?.getMatrixSet(), this.matrixSet)\n      },\n      getRequestEncoding () {\n        return coalesce(this.$source?.getRequestEncoding(), this.requestEncoding)\n      },\n      getStyle () {\n        return coalesce(this.$source?.getStyle(), this.styleName)\n      },\n      getVersion () {\n        return coalesce(this.$source?.getVersion(), this.version)\n      },\n      attributionsCollapsibleChanged: noop,\n      stateChanged: noop,\n      tileKeyChanged: noop,\n      opaqueChanged: noop,\n      zDirectionChanged: noop,\n      inputTileUrlFunctionChanged: noop,\n    },\n  }\n\n  function resolutionsFromExtent (extent, maxZoom, tileSize, maxResolution) {\n    maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM\n\n    const height = getExtentHeight(extent)\n    const width = getExtentWidth(extent)\n\n    tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE)\n    maxResolution = maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1])\n\n    const length = maxZoom + 1\n    const resolutions = new Array(length)\n    for (let z = 0; z < length; ++z) {\n      resolutions[z] = maxResolution / Math.pow(2, z)\n    }\n\n    return resolutions\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","\nimport { xyzSource } from '../../mixins'\n\nexport default {\n  name: 'VlSourceXyz',\n  mixins: [\n    xyzSource,\n  ],\n}\n","<script>\n  import { xyzSource } from '../../mixins'\n\n  export default {\n    name: 'VlSourceXyz',\n    mixins: [\n      xyzSource,\n    ],\n  }\n</script>\n","import { pick } from '../../utils'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  plugin as install,\n  Source,\n}\n","import {\n  BingmapsSource,\n  ClusterSource,\n  DrawInteraction,\n  Feature,\n  Geoloc,\n  GraticuleLayer,\n  GroupLayer,\n  HeatmapLayer,\n  ImageArcgisRestSource,\n  ImageLayer,\n  ImageStaticSource,\n  ImageWmsSource,\n  Map,\n  MapboxSource,\n  MapboxVectorLayer,\n  ModifyInteraction,\n  OsmSource,\n  Overlay,\n  RotateInteraction,\n  SelectInteraction,\n  SnapInteraction,\n  SputnikSource,\n  StamenSource,\n  Style,\n  StyleFunc,\n  TileArcgisRestSource,\n  TileLayer,\n  TileWmsSource,\n  TranslateInteraction,\n  VectorImageLayer,\n  VectorLayer,\n  VectorSource,\n  VectorTileLayer,\n  VectorTileSource,\n  WmtsSource,\n  XyzSource,\n} from './components'\nimport './styles/main.scss'\n\n/**\n * @const {string} VueLayers version.\n */\nexport const VERSION = 'C_PKG_VERSION'\n\n/**\n * @typedef {Object} VueLayersOptions\n * @property {string} [dataProjection] Projection for all properties, events and other plain values.\n */\n/**\n * Registers all VueLayers components.\n * @param {Vue|VueConstructor} Vue\n * @param {VueLayersOptions} [options]\n */\nexport default function plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  // install components\n  Vue.use(BingmapsSource, options)\n  Vue.use(ClusterSource, options)\n  Vue.use(DrawInteraction, options)\n  Vue.use(Feature, options)\n  Vue.use(Geoloc, options)\n  Vue.use(GraticuleLayer, options)\n  Vue.use(GroupLayer, options)\n  Vue.use(HeatmapLayer, options)\n  Vue.use(ImageArcgisRestSource, options)\n  Vue.use(ImageLayer, options)\n  Vue.use(ImageStaticSource, options)\n  Vue.use(ImageWmsSource, options)\n  Vue.use(Map, options)\n  Vue.use(MapboxSource, options)\n  Vue.use(MapboxVectorLayer, options)\n  Vue.use(ModifyInteraction, options)\n  Vue.use(OsmSource, options)\n  Vue.use(Overlay, options)\n  Vue.use(RotateInteraction, options)\n  Vue.use(SelectInteraction, options)\n  Vue.use(SnapInteraction, options)\n  Vue.use(SputnikSource, options)\n  Vue.use(StamenSource, options)\n  Vue.use(Style, options)\n  Vue.use(StyleFunc, options)\n  Vue.use(TileArcgisRestSource, options)\n  Vue.use(TileLayer, options)\n  Vue.use(TileWmsSource, options)\n  Vue.use(TranslateInteraction, options)\n  Vue.use(VectorImageLayer, options)\n  Vue.use(VectorLayer, options)\n  Vue.use(VectorSource, options)\n  Vue.use(VectorTileLayer, options)\n  Vue.use(VectorTileSource, options)\n  Vue.use(WmtsSource, options)\n  Vue.use(XyzSource, options)\n}\n\nexport {\n  plugin as install,\n  // components\n  BingmapsSource,\n  ClusterSource,\n  DrawInteraction,\n  Feature,\n  Geoloc,\n  GraticuleLayer,\n  GroupLayer,\n  HeatmapLayer,\n  ImageArcgisRestSource,\n  ImageLayer,\n  ImageStaticSource,\n  ImageWmsSource,\n  Map,\n  MapboxSource,\n  MapboxVectorLayer,\n  ModifyInteraction,\n  OsmSource,\n  Overlay,\n  RotateInteraction,\n  SelectInteraction,\n  SnapInteraction,\n  SputnikSource,\n  StamenSource,\n  Style,\n  StyleFunc,\n  TileArcgisRestSource,\n  TileLayer,\n  TileWmsSource,\n  TranslateInteraction,\n  VectorImageLayer,\n  VectorLayer,\n  VectorSource,\n  VectorTileLayer,\n  VectorTileSource,\n  WmtsSource,\n  XyzSource,\n}\n"],"names":["name","mixins","tileImageSource","props","hidpi","type","Boolean","default","culture","String","apiKey","required","imagerySet","maxZoom","Number","computed","tileGridIdent","noop","inputTileGridFactory","inputUrl","inputUrls","inputTileUrlFunction","inputAttributions","watch","makeChangeOrRecreateWatchers","methods","createSource","BingMapsSource","wrapX","cacheSize","opaque","transition","tileLoadFunction","currentTileLoadFunction","reprojectionErrorThreshold","imageSmoothing","key","getApiKey","coalesce","$source","getImagerySet","stateChanged","attributionsCollapsibleChanged","projectionChanged","tileGridIdentChanged","inputTileGridFactoryChanged","tileGridChanged","tileKeyChanged","tilePixelRatioChanged","zDirectionChanged","inputTileUrlFunctionChanged","inputUrlsChanged","crossOriginChanged","tileClassChanged","plugin","Vue","options","installed","pick","Object","assign","Source","component","stubVNode","sourceContainer","olCmp","empty","attrs","id","vmId","class","vmClass","source","rev","getSourceId","constructor","deep","handler","value","prev","isEqual","$emit","clonePlainObject","created","defineProperties","$innerSourceContainer","enumerable","get","$services","innerSourceContainer","createOlObject","obj","stubObject","currentId","getServices","mergeDescriptors","getSourceTarget","getSource","getInnerSource","setSource","setInnerSource","components","InnerSource","vectorSource","distance","geometryFunction","Function","geomFunc","geomFuncFactory","data","currentDistance","inputGeometryFunction","defaultGeomFunc","innerSource","$innerSource","inputLoader","inputLoadingStrategy","formatIdent","inputFormatFactory","getDistance","setDistance","process","env","NODE_ENV","$logger","warn","_innerSource","undefined","_innerSourceVm","defineServices","updated","ClusterSource","attributions","currentAttributions","vm","assert","isNumber","getInnerSourceVm","scheduleRefresh","inputUrlChanged","inputLoaderChanged","inputLoadingStrategyChanged","inputFormatFactoryChanged","formatIdentChanged","formatChanged","overlapsChanged","useSpatialIndexChanged","$innerSourceVm","feature","geometry","getGeometry","coordinate","findPointOnSurface","createPointGeom","transformType","upperFirst","camelCase","interaction","styleContainer","clickTolerance","snapTolerance","validator","values","GeometryType","includes","stopClick","maxPoints","minPoints","finishCondition","geometryName","condition","noModifierKeys","freehand","freehandCondition","shiftKeyOnly","dragVertexDelay","inputType","createInteraction","getInstance","_source","VectorSource","isFunction","getFeaturesCollection","features","getFeatures","instanceOf","Collection","DrawInteraction","style","$style","subscribeAll","subscribeToInteractionChanges","getStyleTarget","getStyle","_style","setStyle","VUELAYERS_DEBUG","log","scheduleRecreate","getOverlay","resolveInteraction","abortDrawing","finishDrawing","appendCoordinates","coordinates","viewProj","roundLineCoords","lineToViewProj","removeLastPoint","getPointerCount","start","obsFromOlEvent","$interaction","pipe","mapObs","evt","initializeFeature","tap","setInteracting","sourceUpdObs","length","obsOf","delay","FRAME_TIME","obsFromVueEvent","first","end","mergeMap","mapTo","events","mergeObs","resolvedViewProjection","dataProj","resolvedDataProjection","json","_json","writeGeoJsonFeature","COORD_PRECISION","subscribeTo","Interaction","simpleGeometry","isPointCoords","radius","radiusProjection","getProj","currentRadiusViewProj","constant","CIRCLE","resolvedRadiusProjection","radiusDataProj","round","radiusViewProj","radiusToViewProj","coordinatesDataProj","currentRadiusDataProj","radiusToDataProj","setRadius","createGeometry","Circle","currentCoordinatesViewProj","getCoordinates","getCenter","setCoordinates","setCenter","center","$geometry","roundPointCoords","pointToDataProj","pointToViewProj","getRadius","setCenterAndRadius","transformDistance","POINT","Point","PointGeom","isLineCoords","LINE_STRING","LineString","isMultiLineCoords","MULTI_LINE_STRING","MultiLineString","isMultiPointCoords","MULTI_POINT","MultiPoint","isMultiPolygonCoords","MULTI_POLYGON","MultiPolygon","isPolygonCoords","POLYGON","Polygon","Feature","CircleGeom","LineStringGeom","PolygonGeom","MultiPointGeom","MultiLineStringGeom","MultiPolygonGeom","validateProjection","and","isString","projTransforms","waitForMap","tracking","trackingOptions","projection","viewProjection","EPSG_3857","dataProjection","currentTracking","currentTrackingOptions","currentProjection","$options","accuracy","getAccuracy","accuracyGeometryDataProj","writeGeometryInDataProj","getAccuracyGeometry","accuracyGeometryViewProj","writeGeometryInViewProj","altitude","getAltitude","altitudeAccuracy","getAltitudeAccuracy","heading","getHeading","speed","getSpeed","positionDataProj","getPosition","positionViewProj","$geolocation","getTracking","getTrackingOptions","getProjection","getCode","setTracking","tracingOptions","setTrackingOptions","setProjection","currentAltitude","beforeInit","Promise","all","geoloc","Geolocation","set","mount","unmount","subscribeToGeolocation","resolveGeolocation","resolveOlObject","getIdInternal","setIdInternal","$olObject","$mapVm","mapVm","$viewVm","viewVm","setterKey","addPrefix","setPropsChanges","obsFromOlChangeEvent","setter","val","prop","otherChanged","Geoloc","color","Array","currentColor","normalizeColor","inputColor","setColor","getColor","slice","createStyle","FillStyle","$fillStyleContainer","setFill","getFillVm","refresh","syncNonObservable","fillStyleContainer","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","width","currentLineCap","currentLineJoin","currentLineDash","currentLineDashOffset","currentMiterLimit","currentWidth","inputLineDash","setLineCap","getLineCap","setLineJoin","getLineJoin","setLineDash","getLineDash","setLineDashOffset","getLineDashOffset","setMiterLimit","getMiterLimit","setWidth","getWidth","makeWatchers","inProp","lowerFirst","curProp","isObjectLike","StrokeStyle","$strokeStyleContainer","setStroke","getStrokeVm","strokeStyleContainer","regShapeStyle","currentRadius","CircleStyle","displacement","inputDisplacement","fill","$fill","stroke","$stroke","radiusChanged","pointsChanged","radius1Changed","radius2Changed","angleChanged","imageStyle","src","size","img","Image","imgSize","anchor","anchorOrigin","IconOrigin","TOP_LEFT","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits","crossOrigin","offset","offsetOrigin","currentAnchor","inputSize","inputImgSize","inputAnchor","inputOffset","setAnchor","getAnchor","isEmpty","IconStyle","opacity","currentOpacity","scale","currentScale","rotateWithView","currentRotateWithView","rotation","currentRotation","getSize","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","getImage","pixelRatio","getPixelRatio","getOrigin","getSrc","load","resolveStyle","RegularShapeStyle","points","radius1","radius2","angle","textStyleContainer","imageStyleContainer","geometryContainer","zIndex","renderer","currentZIndex","currentRenderer","dumpStrokeStyle","dumpFillStyle","text","$text","dumpTextStyle","image","$image","dumpImageStyle","geometryDataProj","geometryViewProj","setZIndex","getZIndex","setRenderer","getRenderer","replace","Style","$styleContainer","addStyle","removeStyle","getFillStyleTarget","getStrokeStyleTarget","getTextStyleTarget","getImageStyleTarget","getGeometryTarget","getGeometryFunction","$strokeStyle","$bgStyleContainer","bgStyleContainer","getFill","getBackgroundFill","setBackgroundFill","getStroke","getBackgroundStroke","setBackgroundStroke","BackgroundStyle","font","maxAngle","placement","offsetX","offsetY","overflow","textAlign","textBaseline","padding","validate","currentFont","currentMaxAngle","currentPlacement","currentOffsetX","currentOffsetY","currentOverflow","currentText","currentTextAlign","currentTextBaseline","currentPadding","inputPadding","backgroundFill","$bgFill","backgroundStroke","$bgStroke","setFont","getFont","setMaxAngle","getMaxAngle","setPlacement","getPlacement","setOffsetX","getOffsetX","setOffsetY","getOffsetY","setOverflow","getOverflow","setRotateWithView","getRotateWithView","setRotation","getRotation","setScale","getScale","setText","getText","setTextAlign","getTextAlign","setTextBaseline","getTextBaseline","setPadding","getPadding","_bgFill","_bgFillVm","_bgStroke","_bgStrokeVm","TextStyle","$textStyleContainer","getTextVm","$bgFillVm","$bgStrokeVm","RegShapeStyle","extends","$latStyleContainer","latStyleContainer","getLatLabelStyle","setLatLabelStyle","$lonStyleContainer","lonStyleContainer","getLonLabelStyle","setLonLabelStyle","setStrokeStyle","getStrokeStyle","LonStyle","LatStyle","GStrokeStyle","vectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","intervals","inputIntervals","meridians","map","getMeridians","geom","parallels","getParallels","lonLabelStyle","$lonLabelStyle","latLabelStyle","$latLabelStyle","strokeStyle","_lonLabelStyle","_lonLabelStyleVm","_latLabelStyle","_latLabelStyleVm","_strokeStyle","_strokeStyleVm","$lonLabelStyleVm","getLonLabelStyleVm","$latLabelStyleVm","getLatLabelStyleVm","$strokeStyleVm","getStrokeStyleVm","createLayer","GraticuleLayer","className","visible","currentVisible","extent","currentExtentViewProj","minResolution","currentMinResolution","maxResolution","currentMaxResolution","minZoom","currentMinZoom","currentMaxZoom","render","renderOrder","renderBuffer","declutter","updateWhileAnimating","updateWhileInteracting","$layer","Text","Stroke","Layer","layersContainer","baseLayer","layers","getLayers","layer","getLayerId","GroupLayer","$layersCollection","gradient","blur","weight","currentGradient","currentBlur","inputGradient","getGradient","getBlur","setGradient","setBlur","HeatmapLayer","subscribeToLayerEvents","isArray","propChanges","validateUrl","negate","arcgisSource","imageSource","imageLoadFunction","imageLoadFunc","ratio","url","currentImageLoadFunction","currentUrl","inputImageLoadFunction","getImageLoadFunction","getUrl","setUrl","setImageLoadFunction","ImageArcGISRestSource","resolutions","inputResolutions","params","currentParams","func","imageLayer","ImageLayer","imageExtent","imgExtent","imgLoadFunc","loadFunc","imageSize","inputImageExtent","inputImageSize","ImageStaticSource","getImageExtent","wmsSource","currentImageLoadFunc","ImageWMSSource","serverType","setUrls","renderMode","VectorLayer","every","constrainOnlyCenter","smoothExtentConstraint","enableRotation","constrainRotation","resolution","constrainResolution","smoothResolutionConstraint","zoom","zoomFactor","multiWorld","showFullExtent","currentCenterViewProj","currentZoom","currentResolution","currentResolutions","centerDataProj","centerViewProj","currentCenterDataProj","extentDataProj","roundExtent","extentViewProj","extentToViewProj","visibleExtentDataProj","getExtent","visibleExtentViewProj","animating","getAnimating","interacting","getInteracting","$view","getZoom","getResolution","getMinZoom","getMaxZoom","getResolutions","getMaxResolution","getMinResolution","setResolution","setConstrainResolution","setZoom","setMinZoom","setMaxZoom","view","View","initializeView","$viewContainer","setView","getViewVm","subscribeToEvents","getViewId","setViewId","resolveView","animate","args","cb","forEach","opts","resolve","complete","fit","geometryOrExtent","isGeoJSONGeometry","readGeometryInViewProj","readGeometryInDataProj","callback","cancelAnimations","beginInteraction","endInteraction","duration","resolutionDirection","calculateExtent","extentToDataProj","centerOn","position","getResolutionForExtent","getResolutionForZoom","getZoomForResolution","viewContainer","resolutionChanges","zoomChanges","distinctUntilKeyChanged","push","ViewCmp","VectorLayerCmp","VectorSourceCmp","controlsContainer","interactionsContainer","overlaysContainer","featuresContainer","defaultControls","defaultInteractions","keyboardEventTarget","Element","Document","moveTolerance","window","devicePixelRatio","maxTilesLoading","tabindex","withCustomView","currentDataProjection","controls","getControls","control","getControlId","interactions","getInteractions","getInteractionId","overlays","getOverlays","overlay","getOverlayId","featuresDataProj","writeFeatureInDataProj","featuresViewProj","writeFeatureInViewProj","$map","initDefaultControls","initDefaultInteractions","setDataProjection","_view","_viewVm","Map","$controlsCollection","$interactionsCollection","$overlaysCollection","setMapId","setMapDataProjection","setSize","setTarget","$el","obsFromVueWatcher","getMapId","resolveMap","forEachFeatureAtPixel","pixel","forEachLayerAtPixel","getCoordinateFromPixel","getEventCoordinate","event","getEventPixel","getFeaturesAtPixel","hasFeatureAtPixel","getPixelFromCoordinate","updateSize","once","getTarget","target","getViewport","getView","getDataProjection","getMapDataProjection","focus","isInteracting","some","featuresOverlaySourceCreated","sourceVm","addFeatures","adds","bufferDebounceTime","removes","removeFeatures","resolvedDataProjectionChanged","$featuresOverlayVm","$refs","featuresOverlay","$featuresOverlaySourceVm","featuresOverlaySource","viewChanges","_viewSubs","unsubscribe","pointerEvents","MapBrowserEventType","CLICK","DBLCLICK","SINGLECLICK","POINTERDRAG","POINTERMOVE","distinctUntilChanged","a","b","t","c","omit","otherEvents","MapEventType","MOVESTART","MOVEEND","POSTRENDER","RenderEventType","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","MAPBOX_URL_TEMPLATE","MAPBOX_ATTRIBUTIONS","xyzSource","urlTileSource","accessToken","mapId","tileFormat","tileNameSuffix","tilePixelRatio","urlTokens","tileRatio","join","tileLayer","RenderType","HYBRID","VectorTileLayer","preload","currentPreload","useInterimTilesOnError","currentUseInterimTilesOnError","styleUrl","sourceId","layerIds","MapboxVectorLayer","primaryAction","deleteCondition","altKeyOnly","insertVertexCondition","always","pixelTolerance","ModifyInteraction","removePoint","modifying","getId","getRevision","modified","getArray","reduce","idx","OSM_ATTRIBUTIONS","OSM_URL_TEMPLATE","OSM_MAX_ZOOM","OSMSource","currentUrls","transitionChanged","positioning","OverlayPositioning","stopEvent","insertFirst","autoPan","autoPanMargin","autoPanAnimation","autoPanOptions","currentOffset","currentPositionViewProj","currentPositioning","currentPositionDataProj","inputAutoPan","isPlainObject","inputAutoPanAnimation","inputAutoPanOptions","classes","filter","identity","$overlay","getOffset","getPositioning","setOffset","setPosition","setPositioning","Overlay","element","initializeOverlay","$overlaysContainer","addOverlay","removeOverlay","subscribeToOverlayChanges","setOverlayId","resolveOverlay","panIntoView","allowAnchorMovement","currentAnchorViewProj","currentAngle","anchorDataProj","anchorViewProj","currentAnchorDataProj","getAngle","setAngle","VectorEventType","ADDFEATURE","REMOVEFEATURE","remove","RotateInteraction","progress","hitTolerance","multi","stubArray","or","isGeoJSONFeature","addCondition","never","singleClick","removeCondition","toggleCondition","currentHitTolerance","readFeatureInDataProj","currentFeaturesDataProj","currentFeaturesViewProj","currentFeatureIds","getFeatureId","layerFilter","dumpStyle","getHitTolerance","ids","unselectAll","select","setHitTolerance","SelectInteraction","$featuresCollection","resolveFeature","addFeature","unselect","removeFeature","clearFeatures","$feature","featureId","Error","vmName","getFeatureById","updateFeature","tolerance","getLayer","edge","vertex","SnapInteraction","SPUTNIK_URL_TEMPLATE","SPUTNIK_ATTRIBUTIONS","StamenSource","function","factory","inputFunction","providedStyleFunc","fallbackStyleFunc","createStyleFunc","getDefaultStyle","__styleFunc","$styleFunction","TileArcGISRestSource","tileGrid","urls","opaqueChanged","TileLayer","gutter","TileWMSSource","tileClass","inputFilter","TranslateInteraction","startCoordinate","imageRatio","VectorImageLayer","validateTileSize","featureHelper","tileSource","zDirection","formatFactory","createMvtFmt","overlaps","tileSize","format","inputTileSize","derivedTileGridFactory","tileGridFactory","extentFromProjection","createXYZ","olObjIdent","makeIdent","sealFactory","urlFunc","tileUrlFunction","tileUrlFunc","createTileUrlFunctionFromTemplates","prevValue","moveInstance","setInstance","unsetInstance","hasInstance","instanceFactoryCall","VectorTileSource","attributionsCollapsible","state","currentState","currentTileUrlFunction","subscribeToSourceEvents","getFeaturesInExtent","resolveSource","clear","TileEventType","TILELOADEND","tile","layerName","styleName","matrixSet","dimensions","requestEncoding","version","origin","matrixIds","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","originDataProj","originViewProj","resolutionsFromExtent","getExtentCorner","ExtentCorner","range","WMTSTileGrid","WMTSSource","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getVersion","height","getExtentHeight","getExtentWidth","toSize","Math","max","z","pow","VERSION","use","BingmapsSource","ImageArcgisRestSource","ImageWmsSource","MapboxSource","OsmSource","SputnikSource","StyleFunc","TileArcgisRestSource","TileWmsSource","WmtsSource","XyzSource"],"mappings":"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"}
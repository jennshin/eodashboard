{"version":3,"file":"ol-ext.js","sources":["../src/ol-ext/control.js","../src/ol-ext/coord.js","../src/ol-ext/extent.js","../src/ol-ext/geom.js","../src/ol-ext/proj.js","../src/ol-ext/style.js","../src/ol-ext/format.js","../src/ol-ext/feature.js","../src/ol-ext/interaction.js","../src/ol-ext/layer.js","../src/ol-ext/map.js","../src/ol-ext/overlay.js","../src/ol-ext/source.js","../src/ol-ext/tilegrid.js","../src/ol-ext/view.js","../src/ol-ext/index.js"],"sourcesContent":["import { Control } from 'ol/control'\nimport { v4 as uuid } from 'uuid'\n\nexport function getControlId (control) {\n  if (control instanceof Control) {\n    return control.get('id')\n  }\n\n  throw new Error('Illegal control argument')\n}\n\nexport function setControlId (control, controlId) {\n  if (control instanceof Control) {\n    control.set('id', controlId)\n\n    return control\n  }\n\n  throw new Error('Illegal control argument')\n}\n\nexport function initializeControl (control, defaultControlId) {\n  if (getControlId(control) == null) {\n    setControlId(control, defaultControlId || uuid())\n  }\n\n  return control\n}\n","import GeometryType from 'ol/geom/GeometryType'\nimport { and, every, isArray, isEqual, isNumber, round } from '../utils'\n\nexport const COORD_PRECISION = -1\n\nexport function roundExtent (extent, precision = COORD_PRECISION) {\n  if (!extent) return\n\n  return extent.map(x => round(x, precision))\n}\n\nexport function roundPointCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(x => round(x, precision))\n}\n\nexport function roundLineCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(point => roundPointCoords(point, precision))\n}\n\nexport function roundPolygonCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(line => roundLineCoords(line, precision))\n}\n\nexport function roundMultiPointCoords (coordinates, precision = COORD_PRECISION) {\n  return roundLineCoords(coordinates, precision)\n}\n\nexport function roundMultiLineCoords (coordinates, precision = COORD_PRECISION) {\n  return roundPolygonCoords(coordinates, precision)\n}\n\nexport function roundMultiPolygonCoords (coordinates, precision = COORD_PRECISION) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => roundPolygonCoords(polygon, precision))\n}\n\nexport function roundCoords (geomType, coordinates, precision = COORD_PRECISION) {\n  switch (geomType) {\n    case GeometryType.POINT:\n    case GeometryType.CIRCLE:\n      return roundPointCoords(coordinates, precision)\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_POINT:\n      return roundLineCoords(coordinates, precision)\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_LINE_STRING:\n      return roundPolygonCoords(coordinates, precision)\n    case GeometryType.MULTI_POLYGON:\n      return roundMultiPolygonCoords(coordinates, precision)\n  }\n}\n\nexport function flatCoords (geomType, coordinates) {\n  const polygonReducer = (coords, lineString) => coords.concat(lineString)\n\n  switch (geomType) {\n    case GeometryType.POINT:\n      return [coordinates]\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_POINT:\n      return coordinates\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_LINE_STRING:\n      return coordinates.reduce(polygonReducer, [])\n    case GeometryType.MULTI_POLYGON:\n      return coordinates.reduce((coords, polygon) => coords.concat(polygon.reduce(polygonReducer, [])), [])\n    default:\n      // todo maybe return null?\n      return []\n  }\n}\n\n/**\n * @param {{coordinates: number[], extent: number[]}} a\n * @param {{coordinates: number[], extent: number[]}} b\n * @returns {boolean}\n */\nexport function isEqualCoord (a, b) {\n  return isEqual(a.extent, b.extent)\n    ? isEqual(a.coordinates, b.coordinates)\n    : false\n}\n\nexport function calcDistance (point1, point2, precision = COORD_PRECISION) {\n  const dx = point2[0] - point1[0]\n  const dy = point2[1] - point1[1]\n  const squared = dx * dx + dy * dy\n\n  return round(Math.sqrt(squared), COORD_PRECISION)\n}\n\nexport const isPointCoords = /*#__PURE__*/and(\n  isArray,\n  point => point.length >= 2,\n  point => every(point, isNumber),\n)\nexport const isLineCoords = /*#__PURE__*/and(\n  isArray,\n  line => line.length >= 0,\n  line => every(line, isPointCoords),\n)\nexport const isPolygonCoords = /*#__PURE__*/and(\n  isArray,\n  polygon => polygon.length >= 0,\n  polygon => every(polygon, isLineCoords),\n)\nexport const isMultiPointCoords = isLineCoords\nexport const isMultiLineCoords = isPolygonCoords\nexport const isMultiPolygonCoords = /*#__PURE__*/and(\n  isArray,\n  multiPolygon => multiPolygon.length >= 0,\n  multiPolygon => every(multiPolygon, isPolygonCoords),\n)\n","// copy-paste from ol/extent\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from 'ol/extent'\nimport Corner from 'ol/extent/Corner'\nimport { assert } from '../utils'\n\nexport function createOrUpdate (minX, minY, maxX, maxY, extent) {\n  if (extent) {\n    extent[0] = minX\n    extent[1] = minY\n    extent[2] = maxX\n    extent[3] = maxY\n    return extent\n  }\n  return [minX, minY, maxX, maxY]\n}\n\nexport function getCorner (extent, corner) {\n  let coordinate\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent)\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent)\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent)\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent)\n  } else {\n    assert(false, 'Invalid extent corner')\n  }\n  return coordinate\n}\n","import pointOnFeature from '@turf/point-on-feature'\nimport {\n  Circle,\n  Geometry,\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { circular as circularPolygon } from 'ol/geom/Polygon'\nimport { v4 as uuid } from 'uuid'\nimport { isPlainObject } from '../utils'\nimport { COORD_PRECISION, roundCoords } from './coord'\n\n/**\n * @param {number|number[]} lonOrCoordinates\n * @param {number} [lat]\n * @return {Point}\n */\nexport function createPointGeom (lonOrCoordinates, lat) {\n  const coordinates = Array.isArray(lonOrCoordinates)\n    ? lonOrCoordinates\n    : [lonOrCoordinates, lat]\n\n  return new Point(coordinates)\n}\n\n/**\n * @param {Array<number[]>} points\n * @returns {LineString}\n */\nexport function createLineGeom (points) {\n  return new LineString(points)\n}\n\n/**\n * @param {Array<Array<number[]>>} rings\n * @returns {Polygon}\n */\nexport function createPolygonGeom (rings) {\n  return new Polygon(rings)\n}\n\n/**\n * @param {Array<number[]>} points\n * @returns {MultiPoint}\n */\nexport function createMultiPointGeom (points) {\n  return new MultiPoint(points)\n}\n\n/**\n * @param {Array<Array<number[]>>} lines\n * @returns {MultiLineString}\n */\nexport function createMultiLineGeom (lines) {\n  return new MultiLineString(lines)\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} polygons\n * @returns {MultiPolygon}\n */\nexport function createMultiPolygonGeom (polygons) {\n  return new MultiPolygon(polygons)\n}\n\n/**\n * @param {Geometry[]} geoms\n * @returns {GeometryCollection}\n */\nexport function createGeomCollection (geoms) {\n  return new GeometryCollection(geoms)\n}\n\n/**\n * @param {Coordinate|number[]} center\n * @param {number} radius\n * @return {Polygon}\n */\nexport function createCircularPolygon (center, radius) {\n  return circularPolygon(center, radius)\n}\n\n/**\n * @param {Geometry|Object} geom\n * @return {boolean}\n * @throws {Error}\n */\nexport function isMultiGeom (geom) {\n  const multiTypes = [\n    GeometryType.MULTI_POINT,\n    GeometryType.MULTI_LINE_STRING,\n    GeometryType.MULTI_POLYGON,\n    GeometryType.GEOMETRY_COLLECTION,\n  ]\n\n  return multiTypes.includes(geom.type || geom.getType())\n}\n\n/**\n * @param {Geometry|Object} geom\n * @return {SimpleGeometry|Object}\n * @throws {Error}\n */\nexport function toSimpleGeom (geom) {\n  if (geom instanceof Circle) {\n    geom = createPointGeom(geom.getCenter())\n  } else if (geom.type === GeometryType.CIRCLE) {\n    geom = { ...geom, type: GeometryType.POINT }\n  }\n\n  const type = geom.type || geom.getType()\n  const complexTypes = [\n    GeometryType.GEOMETRY_COLLECTION,\n  ]\n\n  if (complexTypes.includes(type) === false) {\n    return geom\n  }\n\n  return (geom.geometries || geom.getGeometries())[0]\n}\n\n/**\n * @param {Geometry|Object} geom\n * @param {number} [precision=COORD_PRECISION]\n * @return {Coordinate|undefined}\n */\nexport function findPointOnSurface (geom, precision = COORD_PRECISION) {\n  const simpleGeom = toSimpleGeom(geom)\n  const pointFeature = pointOnFeature({\n    type: simpleGeom.type || simpleGeom.getType(),\n    coordinates: simpleGeom.coordinates || simpleGeom.getCoordinates(),\n  })\n  if (pointFeature?.geometry) {\n    return roundCoords(\n      pointFeature.geometry.type,\n      pointFeature.geometry.coordinates,\n      precision,\n    )\n  }\n}\n\nexport function getGeometryId (geometry) {\n  if (geometry instanceof Geometry) {\n    return geometry.get('id')\n  } else if (isPlainObject(geometry)) {\n    return geometry.id\n  }\n\n  throw new Error('Illegal geometry argument')\n}\n\nexport function setGeometryId (geometry, geometryId) {\n  if (geometry instanceof Geometry) {\n    geometry.set('id', geometryId)\n\n    return geometry\n  } else if (isPlainObject(geometry)) {\n    geometry.id = geometryId\n\n    return geometry\n  }\n\n  throw new Error('Illegal geometry argument')\n}\n\nexport function initializeGeometry (geometry, defaultGeometryId) {\n  if (getGeometryId(geometry) == null) {\n    setGeometryId(geometry, defaultGeometryId || uuid())\n  }\n\n  return geometry\n}\n\n/**\n * @param value\n * @return {boolean}\n */\nexport function isCircleGeom (value) {\n  return getGeomType(value) === GeometryType.CIRCLE\n}\n\nexport function getGeomCoords (geom) {\n  if (!geom) return\n\n  const type = getGeomType(geom)\n  switch (type) {\n    case GeometryType.CIRCLE:\n      return roundCoords(type, geom.coordinates || geom.getCenter())\n    default:\n      return roundCoords(type, geom.coordinates || geom.getCoordinates())\n  }\n}\n\nexport function getGeomType (geom) {\n  if (geom instanceof Geometry) {\n    return geom.getType()\n  }\n  return geom?.type\n}\n","import GeometryType from 'ol/geom/GeometryType'\nimport { fromLonLat, toLonLat, transform as baseTransform, transformExtent as baseTransformExtent } from 'ol/proj'\nimport { calcDistance, COORD_PRECISION, roundCoords, roundExtent } from './coord'\n\nexport const EPSG_4326 = 'EPSG:4326'\nexport const EPSG_3857 = 'EPSG:3857'\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Coordinate|number[]}\n */\nexport function pointToLonLat (\n  coordinate,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n\n  return roundCoords(GeometryType.POINT, toLonLat(coordinate, projection), precision)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} [projection]\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function pointFromLonLat (\n  coordinate,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n\n  return roundCoords(GeometryType.POINT, fromLonLat(coordinate, projection), precision)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {number[]}\n */\nexport function transformPoint (\n  coordinate,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n\n  return transform(coordinate, sourceProjection, destProjection, precision)\n}\n\n/**\n * @param {number[]} coordinate\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {number[]}\n */\nexport function transform (\n  coordinate,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinate) return\n  let coord = baseTransform(coordinate, sourceProjection, destProjection)\n  if (coord.some(x => isNaN(x))) {\n    coord = baseTransform(baseTransform(coordinate, sourceProjection, EPSG_4326), EPSG_4326, destProjection)\n  }\n  return roundCoords(GeometryType.POINT, coord, precision)\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function lineToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointToLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function lineFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointFromLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {number[]}\n */\nexport function transformLine (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => transformPoint(point, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function polygonToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineToLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function polygonFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineFromLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @returns {*}\n */\nexport function transformPolygon (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => transformLine(line, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function multiPointToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointToLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function multiPointFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => pointFromLonLat(point, projection, precision))\n}\n\n/**\n * @param {Array<number[]>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<number[]>}\n */\nexport function transformMultiPoint (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(point => transformPoint(point, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function multiLineToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineToLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function multiLineFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => lineFromLonLat(line, projection, precision))\n}\n\n/**\n * @param {Array<Array<number[]>>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<number[]>>}\n */\nexport function transformMultiLine (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(line => transformLine(line, sourceProjection, destProjection, precision))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function multiPolygonToLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => polygonToLonLat(polygon, projection, precision))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG_3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function multiPolygonFromLonLat (\n  coordinates,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => polygonFromLonLat(polygon, projection, precision))\n}\n\n/**\n * @param {Array<Array<Array<number[]>>>} coordinates\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {Array<Array<Array<number[]>>>}\n */\nexport function transformMultiPolygon (\n  coordinates,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!coordinates) return\n\n  return coordinates.map(polygon => transformPolygon(polygon, sourceProjection, destProjection, precision))\n}\n\n/**\n * Transforms by geom type\n * @type {Object<string, function>}\n */\nexport const transforms = /*#__PURE__*/{\n  [GeometryType.POINT]: {\n    toLonLat: pointToLonLat,\n    fromLonLat: pointFromLonLat,\n    transform: transformPoint,\n  },\n  [GeometryType.LINE_STRING]: {\n    toLonLat: lineToLonLat,\n    fromLonLat: lineFromLonLat,\n    transform: transformLine,\n  },\n  [GeometryType.POLYGON]: {\n    toLonLat: polygonToLonLat,\n    fromLonLat: polygonFromLonLat,\n    transform: transformPolygon,\n  },\n  [GeometryType.MULTI_POINT]: {\n    toLonLat: multiPointToLonLat,\n    fromLonLat: multiPointFromLonLat,\n    transform: transformMultiPoint,\n  },\n  [GeometryType.MULTI_LINE_STRING]: {\n    toLonLat: multiLineToLonLat,\n    fromLonLat: multiLineFromLonLat,\n    transform: transformMultiLine,\n  },\n  [GeometryType.MULTI_POLYGON]: {\n    toLonLat: multiPolygonToLonLat,\n    fromLonLat: multiPolygonFromLonLat,\n    transform: transformMultiPolygon,\n  },\n  [GeometryType.CIRCLE]: {\n    toLonLat: pointToLonLat,\n    fromLonLat: pointFromLonLat,\n    transform: transformPoint,\n  },\n}\n\n/**\n * @param {number[]} extent\n * @param {module:ol/proj.ProjectionLike} sourceProjection\n * @param {module:ol/proj.ProjectionLike} destProjection\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function transformExtent (\n  extent,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!extent) return\n  if (extent.every(x => !isFinite(x))) return extent\n  let ext = baseTransformExtent(extent, sourceProjection, destProjection)\n  if (ext.some(x => isNaN(x))) {\n    ext = baseTransformExtent(baseTransformExtent(extent, sourceProjection, EPSG_4326), EPSG_4326, destProjection)\n  }\n  return roundExtent(ext, precision)\n}\n\n/**\n * @param {number[]} extent\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG:3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function extentFromLonLat (\n  extent,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!extent) return\n\n  return transformExtent(extent, EPSG_4326, projection, precision)\n}\n\n/**\n * @param {number[]} extent\n * @param {module:ol/proj.ProjectionLike} [projection=EPSG:3857]\n * @param {number} [precision=COORD_PRECISION]\n * @return {number[]}\n */\nexport function extentToLonLat (\n  extent,\n  projection = EPSG_3857,\n  precision = COORD_PRECISION,\n) {\n  if (!extent) return\n\n  return transformExtent(extent, projection, EPSG_4326, precision)\n}\n\nexport function transformDistance (\n  distance,\n  sourceProjection,\n  destProjection,\n  precision = COORD_PRECISION,\n) {\n  if (!distance) return\n\n  const line = transformLine(\n    [[0, 0], [distance, 0]],\n    sourceProjection,\n    destProjection,\n    precision,\n  )\n\n  return calcDistance(line[0], line[1], precision)\n}\n","import { Geometry } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { Circle, Fill, Icon, Image as ImageStyle, RegularShape, Stroke, Style, Text } from 'ol/style'\nimport parseColor from 'parse-color'\nimport { v4 as uuid } from 'uuid'\nimport { addPrefix, filter, identity, isArray, isFunction, isNumeric, reduce } from '../utils'\n\nfunction isStyle (style) {\n  return style instanceof Style ||\n    style instanceof ImageStyle ||\n    style instanceof Fill ||\n    style instanceof Stroke ||\n    style instanceof Text ||\n    style instanceof Function\n}\n\nexport function getStyleId (style) {\n  if (isStyle(style)) {\n    return style.id\n  }\n\n  throw new Error('Illegal style argument')\n}\n\nexport function setStyleId (style, styleId) {\n  if (isStyle(style)) {\n    style.id = styleId\n\n    return style\n  }\n\n  throw new Error('Illegal style argument')\n}\n\nexport function initializeStyle (style, defaultStyleId) {\n  if (getStyleId(style) == null) {\n    setStyleId(style, defaultStyleId || uuid())\n  }\n\n  return style\n}\n\n/**\n * @return {VlStyle[]}\n */\nexport function defaultStyle () {\n  return [\n    {\n      fillColor: [255, 255, 255, 0.4],\n      strokeColor: '#3399cc',\n      strokeWidth: 1.25,\n      imageRadius: 5,\n    },\n  ]\n}\n\n/**\n * @return {Object<GeometryType, VlStyle[]>}\n */\nexport function defaultEditStyle () {\n  /** @type {Object<GeometryType, VlStyle[]>} */\n  const styles = {}\n  const white = [255, 255, 255, 1]\n  const blue = [0, 153, 255, 1]\n  const width = 3\n\n  styles[GeometryType.LINE_STRING] = [\n    {\n      strokeColor: white,\n      strokeWidth: width + 2,\n    }, {\n      strokeColor: blue,\n      strokeWidth: width,\n    },\n  ]\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING]\n\n  styles[GeometryType.POLYGON] = [\n    {\n      fillColor: [255, 255, 255, 0.5],\n    },\n  ].concat(styles[GeometryType.LINE_STRING])\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON]\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING])\n\n  styles[GeometryType.POINT] = [\n    {\n      imageRadius: width * 2,\n      fillColor: blue,\n      strokeColor: white,\n      strokeWidth: width / 2,\n      zIndex: Infinity,\n    },\n  ]\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT]\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING],\n    styles[GeometryType.POINT],\n  )\n\n  return styles\n}\n\nconst isEmpty = x => {\n  if (x == null) return true\n  if (typeof x === 'number') return false\n\n  return ((typeof x === 'string' || Array.isArray(x)) && !x.length) || !Object.keys(x).length\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {function} [geomReader=identity]\n * @return {Style|undefined}\n */\nexport function createStyle (vlStyle, geomReader = identity) {\n  if (isEmpty(vlStyle)) return\n\n  const olStyle = {\n    text: createTextStyle(vlStyle, 'text'),\n    fill: createFillStyle(vlStyle, 'fill'),\n    stroke: createStrokeStyle(vlStyle, 'stroke'),\n    image: createImageStyle(vlStyle, 'image'),\n    geometry: createGeomStyle(vlStyle, geomReader),\n    zIndex: vlStyle.zIndex,\n    renderer: vlStyle.renderer,\n  }\n\n  if (!isEmpty(olStyle)) {\n    return new Style(olStyle)\n  }\n}\n\n/**\n * @param {*} color\n * @returns {*}\n */\nexport function normalizeColor (color) {\n  let c = color\n\n  if (typeof color === 'string') {\n    c = parseColor(color).rgba\n  }\n\n  return c\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Fill|undefined}\n */\nexport function createFillStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n  // check on already compiled style existence\n  if (vlStyle[prefixKey()] instanceof Fill) return vlStyle[prefixKey()]\n\n  const keys = [\n    'color',\n  ].reduce((keys, key) => ({\n    ...keys,\n    [prefixKey(key)]: key,\n  }), {})\n  const fillStyle = reduce(vlStyle, (style, value, name) => {\n    if (!keys[name] || value == null) return style\n\n    switch (keys[name]) {\n      case 'color':\n        value = normalizeColor(value)\n        break\n    }\n\n    style[keys[name]] = value\n\n    return style\n  }, {})\n\n  if (!isEmpty(fillStyle)) {\n    return new Fill(fillStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Stroke|undefined}\n */\nexport function createStrokeStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n  if (vlStyle[prefixKey()] instanceof Stroke) return vlStyle[prefixKey()]\n\n  const keys = [\n    'color',\n    'width',\n    'miterLimit',\n    'lineCap',\n    'lineJoin',\n    'lineDash',\n    'lineDashOffset',\n  ].reduce((keys, key) => ({\n    ...keys,\n    [prefixKey(key)]: key,\n  }), {})\n  const strokeStyle = reduce(vlStyle, (style, value, name) => {\n    if (!keys[name] || value == null) return style\n\n    switch (keys[name]) {\n      case 'color':\n        value = normalizeColor(value)\n        break\n    }\n\n    style[keys[name]] = value\n\n    return style\n  }, {})\n\n  if (!isEmpty(strokeStyle)) {\n    return new Stroke(strokeStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Image|undefined}\n * @todo split to separate circle, regShape, Icon\n */\nexport function createImageStyle (vlStyle, prefix = '') {\n  const prefixKey = addPrefix(prefix)\n\n  if (\n    isEmpty(vlStyle[prefixKey('src')]) &&\n    isEmpty(vlStyle.image) &&\n    isEmpty(vlStyle[prefixKey('points')]) &&\n    !isNumeric(vlStyle[prefixKey('radius')])\n  ) {\n    return\n  }\n\n  if (vlStyle.image instanceof ImageStyle) return vlStyle.image\n\n  let imageStyle, Ctor\n\n  if (!isEmpty(vlStyle[prefixKey('src')]) || !isEmpty(vlStyle.image)) {\n    // icon construction\n    Ctor = Icon\n    // then create Icon options\n    imageStyle = {\n      anchor: vlStyle[prefixKey('anchor')],\n      anchorOrigin: vlStyle[prefixKey('anchorOrigin')],\n      anchorXUnits: vlStyle[prefixKey('anchorXUnits')],\n      anchorYUnits: vlStyle[prefixKey('anchorYUnits')],\n      color: vlStyle[prefixKey('color')],\n      offset: vlStyle[prefixKey('offset')],\n      offsetOrigin: vlStyle[prefixKey('offsetOrigin')],\n      size: vlStyle[prefixKey('size')],\n      img: vlStyle.image,\n      imgSize: vlStyle[prefixKey('imgSize')],\n      src: vlStyle[prefixKey('src')],\n      crossOrigin: vlStyle[prefixKey('crossOrigin')],\n    }\n  } else if (vlStyle[prefixKey('points')] != null) {\n    // regular shape construction\n    Ctor = RegularShape\n    // create RegularShape options\n    imageStyle = {\n      points: vlStyle[prefixKey('points')],\n      radius: vlStyle[prefixKey('radius')],\n      radius1: vlStyle[prefixKey('radius1')],\n      radius2: vlStyle[prefixKey('radius2')],\n      angle: vlStyle[prefixKey('angle')],\n    }\n  } else {\n    // circle construction\n    Ctor = Circle\n    // create Circle options\n    imageStyle = {\n      radius: vlStyle[prefixKey('radius')],\n    }\n  }\n\n  imageStyle = {\n    ...imageStyle,\n    fill: createFillStyle(vlStyle, prefixKey('fill')),\n    stroke: createStrokeStyle(vlStyle, prefixKey('stroke')),\n    opacity: vlStyle[prefixKey('opacity')],\n    scale: vlStyle[prefixKey('scale')],\n    rotation: vlStyle[prefixKey('rotation')],\n    rotateWithView: vlStyle[prefixKey('rotateWithView')],\n    displacement: vlStyle[prefixKey('displacement')],\n  }\n\n  if (!isEmpty(imageStyle)) {\n    return new Ctor(imageStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {string} [prefix]\n * @returns {Text|undefined}\n */\nexport function createTextStyle (vlStyle, prefix = '') {\n  if (vlStyle.text == null) return\n  if (vlStyle.text instanceof Text) return vlStyle.text\n\n  const prefixKey = addPrefix(prefix)\n  const textStyle = {\n    text: vlStyle.text,\n    textAlign: vlStyle.textAlign,\n    textBaseline: vlStyle.textBaseline,\n    font: vlStyle[prefixKey('font')],\n    scale: vlStyle[prefixKey('scale')],\n    offsetX: vlStyle[prefixKey('offsetX')],\n    offsetY: vlStyle[prefixKey('offsetY')],\n    rotation: vlStyle[prefixKey('rotation')],\n    rotateWithView: vlStyle[prefixKey('rotateWithView')],\n    padding: vlStyle[prefixKey('padding')],\n    maxAngle: vlStyle[prefixKey('maxAngle')],\n    overflow: vlStyle[prefixKey('overflow')],\n    placement: vlStyle[prefixKey('placement')],\n    fill: createFillStyle(vlStyle, prefixKey('fill')),\n    stroke: createStrokeStyle(vlStyle, prefixKey('stroke')),\n    backgroundFill: createFillStyle(vlStyle, prefixKey('backgroundFill')),\n    backgroundStroke: createStrokeStyle(vlStyle, prefixKey('backgroundStroke')),\n  }\n\n  if (!isEmpty(textStyle)) {\n    return new Text(textStyle)\n  }\n}\n\n/**\n * @param {VlStyle} vlStyle\n * @param {function} [geomReader=identity]\n * @return {Geometry|Object|function|undefined}\n */\nexport function createGeomStyle (vlStyle, geomReader = identity) {\n  if (isFunction(vlStyle.geom)) {\n    return function __styleGeomFunc (feature) {\n      return vlStyle.geom(feature)\n    }\n  }\n  if (vlStyle.geom instanceof Geometry) {\n    return vlStyle.geom\n  }\n  if (vlStyle.geom) {\n    return geomReader(vlStyle.geom)\n  }\n  return null\n}\n\nexport function dumpStyle (olStyle, geomWriter = identity) {\n  if (!olStyle || isFunction(olStyle)) return\n\n  return {\n    ...dumpFillStyle(olStyle.getFill(), 'fill'),\n    ...dumpStrokeStyle(olStyle.getStroke(), 'stroke'),\n    ...dumpImageStyle(olStyle.getImage(), 'image'),\n    ...dumpTextStyle(olStyle.getText(), 'text'),\n    ...dumpGeomStyle(olStyle.getGeometry(), geomWriter),\n    zIndex: olStyle.getZIndex(),\n    // renderer: olStyle.getRenderer(),\n  }\n}\n\nexport function dumpFillStyle (fillStyle, prefix = '') {\n  if (!fillStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n\n  return {\n    [prefixKey('color')]: fillStyle.getColor(),\n  }\n}\n\nexport function dumpStrokeStyle (strokeStyle, prefix = '') {\n  if (!strokeStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n\n  return {\n    [prefixKey('color')]: strokeStyle.getColor(),\n    [prefixKey('width')]: strokeStyle.getWidth(),\n    [prefixKey('miterLimit')]: strokeStyle.getMiterLimit(),\n    [prefixKey('lineCap')]: strokeStyle.getLineCap(),\n    [prefixKey('lineJoin')]: strokeStyle.getLineJoin(),\n    [prefixKey('lineDash')]: strokeStyle.getLineDash(),\n    [prefixKey('lineDashOffset')]: strokeStyle.getLineDashOffset(),\n  }\n}\n\nexport function dumpImageStyle (imageStyle, prefix = '') {\n  if (!imageStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n  const common = {\n    [prefixKey('opacity')]: imageStyle.getOpacity(),\n    [prefixKey('scale')]: imageStyle.getScale(),\n    [prefixKey('rotation')]: imageStyle.getRotation(),\n    [prefixKey('rotateWithView')]: imageStyle.getRotateWithView(),\n    [prefixKey('displacement')]: imageStyle.getDisplacement(),\n  }\n\n  switch (true) {\n    case imageStyle instanceof Icon:\n      return {\n        ...common,\n        // fixme avoid using of internal fields, but currently Icon haven't getters for several fields\n        [prefixKey('anchor')]: imageStyle.anchor_.slice(),\n        [prefixKey('anchorOrigin')]: imageStyle.anchorOrigin_,\n        [prefixKey('anchorXUnits')]: imageStyle.anchorXUnits_,\n        [prefixKey('anchorYUnits')]: imageStyle.anchorYUnits_,\n        [prefixKey('color')]: isArray(imageStyle.getColor()) ? imageStyle.getColor().slice() : imageStyle.getColor(),\n        [prefixKey('offset')]: imageStyle.offset_.slice(),\n        [prefixKey('offsetOrigin')]: imageStyle.offsetOrigin_,\n        [prefixKey('size')]: isArray(imageStyle.getSize()) ? imageStyle.getSize().slice() : imageStyle.getSize(),\n        [prefixKey('src')]: imageStyle.getSrc(),\n        [prefixKey('crossOrigin')]: imageStyle.crossOrigin_,\n      }\n    case imageStyle instanceof Circle:\n      return {\n        ...common,\n        ...dumpFillStyle(imageStyle.getFill(), prefixKey('fill')),\n        ...dumpStrokeStyle(imageStyle.getStroke(), prefixKey('stroke')),\n        [prefixKey('radius')]: imageStyle.getRadius(),\n      }\n    case imageStyle instanceof RegularShape:\n      return {\n        ...common,\n        ...dumpFillStyle(imageStyle.getFill(), prefixKey('fill')),\n        ...dumpStrokeStyle(imageStyle.getStroke(), prefixKey('stroke')),\n        [prefixKey('points')]: imageStyle.getPoints(),\n        [prefixKey('radius')]: imageStyle.getRadius(),\n        [prefixKey('radius2')]: imageStyle.getRadius2(),\n        [prefixKey('angle')]: imageStyle.getAngle(),\n      }\n    default:\n      return {\n        ...common,\n      }\n  }\n}\n\nexport function dumpTextStyle (textStyle, prefix = '') {\n  if (!textStyle) return {}\n\n  const prefixKey = addPrefix(prefix)\n\n  return filter({\n    text: textStyle.getText(),\n    textAlign: textStyle.getTextAlign(),\n    textBaseline: textStyle.getTextBaseline(),\n    [prefixKey('font')]: textStyle.getFont(),\n    [prefixKey('scale')]: textStyle.getScale(),\n    [prefixKey('rotation')]: textStyle.getRotation(),\n    [prefixKey('offsetX')]: textStyle.getOffsetX(),\n    [prefixKey('offsetY')]: textStyle.getOffsetY(),\n    [prefixKey('rotateWithView')]: textStyle.getRotateWithView(),\n    [prefixKey('padding')]: textStyle.getPadding(),\n    [prefixKey('maxAngle')]: textStyle.getMaxAngle(),\n    [prefixKey('overflow')]: textStyle.getOverflow(),\n    [prefixKey('placement')]: textStyle.getPlacement(),\n    ...dumpFillStyle(textStyle.getFill(), prefixKey('fill')),\n    ...dumpStrokeStyle(textStyle.getStroke(), prefixKey('stroke')),\n    ...dumpFillStyle(textStyle.getBackgroundFill(), prefixKey('backgroundFill')),\n    ...dumpStrokeStyle(textStyle.getBackgroundStroke(), prefixKey('backgroundStroke')),\n  }, value => value != null)\n}\n\nexport function dumpGeomStyle (geom, geomWriter = identity) {\n  if (!geom) return {}\n\n  return {\n    geom: geomWriter(geom),\n  }\n}\n\n/**\n * @typedef {\n *            module:ol/style/Style~Style |\n *            module:ol/style/Image~ImageStyle |\n *            module:ol/style/Fill~Fill |\n *            module:ol/style/Stroke~Stroke |\n *            module:ol/style/Text~Text |\n *            module:ol/style/Style~StyleFunction\n *          } OlAllStyle\n */\n\n/**\n * @typedef {Object} VlStyle\n *\n * Shared\n * @property {string|number[]|undefined} fillColor\n * @property {string|number[]|undefined} strokeColor\n * @property {number|undefined} strokeWidth\n * @property {number|undefined} strokeMiterLimit\n * @property {number[]|undefined} strokeLineDash\n * @property {number|undefined} strokeLineDashOffset\n * @property {string|undefined} strokeLineCap\n * @property {string|undefined} strokeLineJoin\n * @property {number|undefined} zIndex\n * @property {Fill|undefined} fill\n * @property {Stroke|undefined} stroke\n * @property {RenderFunction|undefined} renderer\n *\n * Text only\n * @property {string|Text|undefined} text\n * @property {string|undefined} textFont\n * @property {number|string|undefined} textFontSize\n * @property {string|undefined} textFontWeight\n * @property {string|number[]|undefined} textFillColor\n * @property {string|number[]|undefined} textStrokeColor\n * @property {number|undefined} textStrokeWidth\n * @property {number|undefined} textStrokeMiterLimit\n * @property {number[]|undefined} textStrokeLineDash\n * @property {number|undefined} textStrokeLineDashOffset\n * @property {string|undefined} textStrokeLineCap\n * @property {string|undefined} textStrokeLineJoin\n * @property {number|undefined} textScale\n * @property {string|undefined} textAlign\n * @property {number|undefined} textRotation\n * @property {number|undefined} textOffsetX\n * @property {number|undefined} textOffsetY\n * @property {Stroke|undefined} textStroke\n * @property {Fill|undefined} textFill\n * @property {boolean|undefined} textRotateWithView\n * @property {number[]|undefined} textPadding\n * @property {number|undefined} textMaxAngle\n * @property {boolean|undefined} textOverflow\n * @property {string|undefined} textPlacement\n * @property {string|undefined} textBaseline\n * @property {Fill|undefined} textBackgroundFillColor\n * @property {Stroke|undefined} textBackgroundStrokeColor\n * @property {Stroke|undefined} textBackgroundStrokeWidth\n * @property {number|undefined} textBackgroundStrokeMiterLimit\n * @property {Stroke|undefined} textBackgroundStrokeLineDash\n * @property {number|undefined} textBackgroundStrokeLineDashOffset\n * @property {Stroke|undefined} textBackgroundStrokeCap\n * @property {Stroke|undefined} textBackgroundStrokeJoin\n *\n * Image only\n * @property {Image|undefined} image\n * @property {string|undefined} imageSrc\n * @property {number[]|undefined} imageSize\n * @property {number[]|undefined} imageImgSize\n * @property {number|undefined} imageOffset\n * @property {number[]|undefined} imageAnchor\n * @property {string|undefined} imageAnchorXUnits\n * @property {string|undefined} imageAnchorYUnits\n * @property {number|undefined} imageScale\n * @property {number|undefined} imageRotation\n * @property {number|undefined} imageRadius\n * @property {number|undefined} imageRadius1\n * @property {number|undefined} imageRadius2\n * @property {number|undefined} imagePoints\n * @property {number|undefined} imageAngle\n * @property {number|undefined} imageOpacity\n * @property {string|number[]|undefined} imageFillColor\n * @property {string|number[]|undefined} imageStrokeColor\n * @property {number|undefined} imageStrokeWidth\n * @property {number|undefined} imageStrokeMiterLimit\n * @property {number[]|undefined} imageStrokeLineDash\n * @property {number|undefined} imageStrokeLineDashOffset\n * @property {string|undefined} imageStrokeLineCap\n * @property {string|undefined} imageStrokeLineJoin\n * @property {IconOrigin|undefined} imageAnchorOrigin\n * @property {ColorLike|undefined} imageColor\n * @property {IconOrigin|undefined} imageOffsetOrigin\n * @property {Stroke|undefined} imageStroke\n * @property {Fill|undefined} imageFill\n * @property {string|undefined} imageCrossOrigin\n * @property {boolean|undefined} imageRotateWithView\n * @property {number[]|undefined} imageDisplacement\n *\n * @property {Geometry|Object|function|undefined} geom Coordinates should be in map projection\n */\n","import { Feature } from 'ol'\nimport { GeoJSON as BaseGeoJSON, MVT } from 'ol/format'\nimport { Circle, LineString } from 'ol/geom'\nimport GeometryType from 'ol/geom/GeometryType'\nimport { isEmpty } from 'ol/obj'\nimport { getLength } from 'ol/sphere'\nimport { clonePlainObject, isArray, isFunction, isPlainObject, map, noop, omit } from '../utils'\nimport { COORD_PRECISION } from './coord'\nimport { createCircularPolygon, isCircleGeom } from './geom'\nimport { EPSG_3857, EPSG_4326, transformDistance, transformPoint } from './proj'\nimport { createStyle, dumpStyle } from './style'\n\n/**\n * @param {Object} [options]\n * @return {GeoJSON}\n */\nexport function createGeoJsonFmt (options) {\n  return new GeoJSON(options)\n}\n\n/**\n * @param [options]\n * @return {MVT}\n */\nexport function createMvtFmt (options) {\n  return new MVT(options)\n}\n\nexport const CIRCLE_SERIALIZE_PROP = 'vl_circle'\nexport const STYLE_SERIALIZE_PROP = 'vl_style'\n\nclass GeoJSON extends BaseGeoJSON {\n  constructor (options = {}) {\n    super(options)\n\n    this.defaultDecimals = options.decimals != null && options.decimals > -1 ? options.decimals : undefined\n    this.defaultStyleReader = options.styleReader || noop\n    this.defaultStyleWriter = options.styleWriter || noop\n  }\n\n  adaptOptions (options = {}) {\n    if (options.decimals != null && options.decimals < 0) {\n      options.decimals = undefined\n    }\n\n    return super.adaptOptions({\n      decimals: this.defaultDecimals,\n      styleReader: this.defaultStyleReader,\n      styleWriter: this.defaultStyleWriter,\n      ...options,\n    })\n  }\n\n  writeGeometryObject (geometry, options) {\n    options = this.adaptOptions(options)\n\n    if (isCircleGeom(geometry)) {\n      let center = geometry.getCenter().slice()\n      const end = [center[0] + geometry.getRadius(), center[1]]\n      const radius = getLength(new LineString([center, end]), options.featureProjection)\n      center = transformPoint(center, options.featureProjection, EPSG_4326)\n      geometry = createCircularPolygon(center, radius)\n      options.featureProjection = EPSG_4326\n    }\n\n    return super.writeGeometryObject(geometry, options)\n  }\n\n  writeFeatureObject (feature, options) {\n    options = this.adaptOptions(options)\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      type: 'Feature',\n      geometry: null,\n      properties: null,\n    }\n\n    const id = feature.getId()\n    if (id !== undefined) {\n      object.id = id\n    }\n\n    /* eslint-disable quote-props */\n\n    const geometry = feature.getGeometry()\n    if (geometry) {\n      object.geometry = this.writeGeometryObject(geometry, options)\n      if (isCircleGeom(geometry)) {\n        object.properties = {\n          ...object.properties || {},\n          [CIRCLE_SERIALIZE_PROP]: {\n            center: transformPoint(\n              geometry.getCenter(),\n              options.featureProjection,\n              options.dataProjection,\n            ),\n            radius: transformDistance(\n              geometry.getRadius(),\n              options.featureProjection,\n              options.dataProjection,\n            ),\n          },\n        }\n      }\n    }\n\n    const properties = feature.getProperties()\n    delete properties[feature.getGeometryName()]\n    if (!isEmpty(properties)) {\n      object.properties = {\n        ...object.properties || {},\n        ...clonePlainObject(omit(properties, 'features')),\n      }\n\n      if (isArray(properties.features)) {\n        object.properties.features = map(properties.features, feature => {\n          if (feature instanceof Feature) {\n            return this.writeFeatureObject(feature, options)\n          }\n          return feature\n        })\n      }\n    }\n\n    let style = feature.getStyle()\n    if (style && !isFunction(style)) {\n      isArray(style) || (style = [style])\n      object.properties = {\n        ...object.properties || {},\n        [STYLE_SERIALIZE_PROP]: style.map(style => options.styleWriter(\n          style,\n          geometry => this.writeGeometryObject(geometry, options),\n        )),\n      }\n    }\n\n    /* eslint-enable quote-props */\n\n    return object\n  }\n\n  readFeatureFromObject (object, options) {\n    options = this.adaptOptions(options)\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature\n    if (object.type === 'Feature') {\n      geoJSONFeature = clonePlainObject(object)\n    } else {\n      geoJSONFeature = {\n        type: 'Feature',\n        geometry: clonePlainObject(object),\n        properties: null,\n      }\n    }\n\n    const feature = new Feature()\n\n    /* eslint-disable dot-notation */\n\n    if (geoJSONFeature.properties && geoJSONFeature.properties[CIRCLE_SERIALIZE_PROP]) {\n      options.circle = geoJSONFeature.properties[CIRCLE_SERIALIZE_PROP]\n      delete geoJSONFeature.properties[CIRCLE_SERIALIZE_PROP]\n    }\n    const geometry = this.readGeometryFromObject(geoJSONFeature.geometry, options)\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_)\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature.geometry_name)\n    }\n    feature.setGeometry(geometry)\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature.id)\n    }\n\n    if (geoJSONFeature.properties) {\n      if (geoJSONFeature.properties[STYLE_SERIALIZE_PROP]) {\n        let style = geoJSONFeature.properties[STYLE_SERIALIZE_PROP]\n        isArray(style) || (style = [style])\n        feature.setStyle(\n          style.map(style => options.styleReader(\n            style,\n            geometry => this.readGeometryFromObject(geometry, omit(options, ['circle'])),\n          )),\n        )\n        delete geoJSONFeature.properties[STYLE_SERIALIZE_PROP]\n      }\n\n      if (isArray(geoJSONFeature.properties.features)) {\n        geoJSONFeature.properties.features = map(geoJSONFeature.properties.features, feature => {\n          if (isGeoJSONFeature(feature)) {\n            return this.readFeatureFromObject(feature, options)\n          }\n          return feature\n        })\n      }\n\n      feature.setProperties(geoJSONFeature.properties, true)\n    }\n\n    /* eslint-enable dot-notation */\n\n    return feature\n  }\n\n  readGeometryFromObject (object, options) {\n    options = this.adaptOptions(options)\n\n    if (options.circle?.center && options.circle?.radius) {\n      return new Circle(\n        transformPoint(\n          options.circle.center,\n          options.dataProjection,\n          options.featureProjection,\n        ),\n        transformDistance(\n          options.circle.radius,\n          options.dataProjection,\n          options.featureProjection,\n        ),\n      )\n    }\n\n    return super.readGeometryFromObject(clonePlainObject(object), options)\n  }\n}\n\nlet geoJsonFmt\n\nexport function getGeoJsonFmt () {\n  if (geoJsonFmt) {\n    return geoJsonFmt\n  }\n  return createGeoJsonFmt({\n    decimals: COORD_PRECISION,\n    styleReader: createStyle,\n    styleWriter: dumpStyle,\n  })\n}\n\n/**\n * @param {Feature} feature\n * @param {ProjectionLike|undefined} [featureProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Object}\n */\nexport function writeGeoJsonFeature (\n  feature,\n  featureProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!feature) return\n\n  return getGeoJsonFmt().writeFeatureObject(feature, {\n    featureProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\n/**\n * @param {Object} geoJsonFeature\n * @param {ProjectionLike|undefined} [featureProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Feature}\n */\nexport function readGeoJsonFeature (\n  geoJsonFeature,\n  featureProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!geoJsonFeature) return\n\n  return getGeoJsonFmt().readFeature(geoJsonFeature, {\n    featureProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\n/**\n * @param {Geometry} geometry\n * @param {ProjectionLike|undefined} [geometryProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Object}\n */\nexport function writeGeoJsonGeometry (\n  geometry,\n  geometryProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!geometry) return\n\n  return getGeoJsonFmt().writeGeometryObject(geometry, {\n    featureProjection: geometryProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\n/**\n * @param {Object|Object} geoJsonGeometry\n * @param {ProjectionLike|undefined} [geometryProjection=EPSG:3857]\n * @param {ProjectionLike|undefined} [dataProjection=EPSG:4326]\n * @param {number} [decimals=COORD_PRECISION]\n * @return {Geometry}\n */\nexport function readGeoJsonGeometry (\n  geoJsonGeometry,\n  geometryProjection = EPSG_3857,\n  dataProjection = EPSG_4326,\n  decimals = COORD_PRECISION,\n) {\n  if (!geoJsonGeometry) return\n\n  dataProjection = readProjection(geoJsonGeometry, dataProjection)\n\n  return getGeoJsonFmt().readGeometry(geoJsonGeometry, {\n    featureProjection: geometryProjection,\n    dataProjection,\n    decimals,\n  })\n}\n\nexport function readProjection (geoJsonObj, defaultProjection) {\n  return getGeoJsonFmt().readProjection(geoJsonObj) || defaultProjection\n}\n\n/**\n * @param {Object} feature\n * @returns {boolean}\n */\nexport function isGeoJSONFeature (feature) {\n  return isPlainObject(feature) && feature.type === 'Feature' &&\n    isGeoJSONGeometry(feature.geometry)\n}\n\nexport function isGeoJSONGeometry (geometry) {\n  return isPlainObject(geometry) &&\n    Object.values(GeometryType).includes(geometry.type) &&\n    isArray(geometry.coordinates)\n}\n","import { Feature } from 'ol'\nimport { v4 as uuid } from 'uuid'\nimport { isPlainObject, omit } from '../utils'\nimport { CIRCLE_SERIALIZE_PROP, STYLE_SERIALIZE_PROP } from './format'\n\n/**\n * @param {Object|module:ol/Feature~Feature|string|number} feature\n * @return {string|number}\n * @throws {Error}\n */\nexport function getFeatureId (feature) {\n  if (feature instanceof Feature) {\n    return feature.getId()\n  } else if (isPlainObject(feature)) {\n    return feature.id\n  }\n\n  throw new Error('Illegal feature format')\n}\n\n/**\n * @param {module:ol/Feature~Feature|Object} feature\n * @param {string} featureId\n * @returns {module:ol/Feature~Feature|Object}\n */\nexport function setFeatureId (feature, featureId) {\n  if (feature instanceof Feature) {\n    feature.setId(featureId)\n\n    return feature\n  } else if (isPlainObject(feature)) {\n    feature.id = featureId\n\n    return feature\n  }\n\n  throw new Error('Illegal feature format')\n}\n\n/**\n * @param {module:ol/Feature~Feature} feature\n * @param {string|undefined} defaultFeatureId\n * @returns {Feature}\n */\nexport function initializeFeature (feature, defaultFeatureId) {\n  if (getFeatureId(feature) == null) {\n    setFeatureId(feature, defaultFeatureId || uuid())\n  }\n\n  return feature\n}\n\nexport function getFeatureGeomName (feature) {\n  if (feature instanceof Feature) {\n    return feature.getGeometryName()\n  }\n  return 'geometry'\n}\n\nexport function getFeatureGeom (feature) {\n  if (feature instanceof Feature) {\n    return feature.getGeometry()\n  } else if (isPlainObject(feature)) {\n    return feature.geometry\n  }\n\n  throw new Error('Illegal feature format')\n}\n\nexport function getFeatureProperties (feature) {\n  if (!feature) return\n\n  return omit(\n    (feature instanceof Feature ? feature.getProperties() : feature.properties) || {},\n    [\n      getFeatureGeomName(feature),\n      CIRCLE_SERIALIZE_PROP,\n      STYLE_SERIALIZE_PROP,\n    ],\n  )\n}\n\nexport function setFeatureProperties (feature, properties) {\n  if (!feature) return\n\n  properties = omit(properties || {}, [\n    getFeatureGeomName(feature),\n    CIRCLE_SERIALIZE_PROP,\n    STYLE_SERIALIZE_PROP,\n  ])\n\n  if (feature instanceof Feature) {\n    feature.setProperties(properties)\n  } else {\n    feature.properties = properties\n  }\n}\n","import { Interaction } from 'ol/interaction'\nimport { v4 as uuid } from 'uuid'\n\n/**\n * @param {module:ol/interaction/Interaction~Interaction|Object} interaction\n * @returns {string|null}\n */\nexport function getInteractionId (interaction) {\n  if (interaction instanceof Interaction) {\n    return interaction.get('id')\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\n/**\n * @param {module:ol/interaction/Interaction~Interaction|Object} interaction\n * @param {string} interactionId\n * @returns {module:ol/interaction/Interaction~Interaction|Object}\n */\nexport function setInteractionId (interaction, interactionId) {\n  if (interaction instanceof Interaction) {\n    interaction.set('id', interactionId)\n\n    return interaction\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\nexport function getInteractionPriority (interaction) {\n  if (interaction instanceof Interaction) {\n    return interaction.get('priority')\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\nexport function setInteractionPriority (interaction, priority) {\n  if (interaction instanceof Interaction) {\n    interaction.set('priority', priority)\n\n    return interaction\n  }\n\n  throw new Error('Illegal interaction argument')\n}\n\nexport function initializeInteraction (interaction, defaultInteractionId, defaultPriority) {\n  if (getInteractionId(interaction) == null) {\n    setInteractionId(interaction, defaultInteractionId || uuid())\n  }\n  if (getInteractionPriority(interaction) == null) {\n    setInteractionPriority(interaction, defaultPriority || 0)\n  }\n\n  return interaction\n}\n","import BaseLayer from 'ol/layer/Base'\nimport { v4 as uuid } from 'uuid'\n\nexport function getLayerId (layer) {\n  if (layer instanceof BaseLayer) {\n    return layer.get('id')\n  }\n\n  throw new Error('Illegal layer argument')\n}\n\nexport function setLayerId (layer, layerId) {\n  if (layer instanceof BaseLayer) {\n    layer.set('id', layerId)\n\n    return layer\n  }\n\n  throw new Error('Illegal layer argument')\n}\n\nexport function initializeLayer (layer, defaultLayerId) {\n  if (getLayerId(layer) == null) {\n    setLayerId(layer, defaultLayerId || uuid())\n  }\n\n  return layer\n}\n","import { PluggableMap } from 'ol'\n\nexport function getMapId (map) {\n  if (map instanceof PluggableMap) {\n    return map.get('id')\n  }\n\n  throw new Error('Illegal map argument')\n}\n\nexport function setMapId (map, mapId) {\n  if (map instanceof PluggableMap) {\n    map.set('id', mapId)\n\n    return map\n  }\n\n  throw new Error('Illegal map argument')\n}\n\nexport function getMapDataProjection (map) {\n  if (map instanceof PluggableMap) {\n    return map.get('dataProjection')\n  }\n\n  throw new Error('Illegal map argument')\n}\n\nexport function setMapDataProjection (map, dataProjection) {\n  if (map instanceof PluggableMap) {\n    map.set('dataProjection', dataProjection)\n\n    return map\n  }\n\n  throw new Error('Illegal map argument')\n}\n","import { Overlay } from 'ol'\nimport { v4 as uuid } from 'uuid'\n\nexport function getOverlayId (overlay) {\n  if (overlay instanceof Overlay) {\n    return overlay.get('id')\n  }\n\n  throw new Error('Illegal overlay argument')\n}\n\nexport function setOverlayId (overlay, overlayId) {\n  if (overlay instanceof Overlay) {\n    overlay.set('id', overlayId)\n\n    return overlay\n  }\n\n  throw new Error('Illegal overlay argument')\n}\n\nexport function initializeOverlay (overlay, defaultOverlay) {\n  if (getOverlayId(overlay) == null) {\n    setOverlayId(overlay, defaultOverlay || uuid())\n  }\n\n  return overlay\n}\n","import { Source } from 'ol/source'\nimport { v4 as uuid } from 'uuid'\nimport { reduce } from '../utils'\n\nexport function getSourceId (source) {\n  if (source instanceof Source) {\n    return source.get('id')\n  }\n\n  throw new Error('Illegal source argument')\n}\n\nexport function setSourceId (source, sourceId) {\n  if (source instanceof Source) {\n    source.set('id', sourceId)\n\n    return source\n  }\n\n  throw new Error('Illegal source argument')\n}\n\nexport function initializeSource (source, defaultSourceId) {\n  if (getSourceId(source) == null) {\n    setSourceId(source, defaultSourceId || uuid())\n  }\n\n  return source\n}\n\nexport function cleanSourceParams (params, filterKeys) {\n  return reduce(params, (params, value, key) => {\n    key = key.toUpperCase()\n    if (filterKeys.includes(key)) {\n      return params\n    }\n\n    params[key] = value\n\n    return params\n  }, {})\n}\n","import { get as getProjection } from 'ol/proj'\nimport Units, { METERS_PER_UNIT } from 'ol/proj/Units'\nimport { createOrUpdate } from './extent'\n\n// copy-paste from ol/tilegrid\nexport function extentFromProjection (projection) {\n  projection = getProjection(projection)\n  let extent = projection.getExtent()\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit()\n    extent = createOrUpdate(-half, -half, half, half)\n  }\n  return extent\n}\n","import { View } from 'ol'\nimport { v4 as uuid } from 'uuid'\n\nexport function getViewId (view) {\n  if (view instanceof View) {\n    return view.get('id')\n  }\n\n  throw new Error('Illegal view argument')\n}\n\nexport function setViewId (view, viewId) {\n  if (view instanceof View) {\n    view.set('id', viewId)\n\n    return view\n  }\n\n  throw new Error('Illegal view argument')\n}\n\nexport function initializeView (view, defaultViewId) {\n  if (getViewId(view) == null) {\n    setViewId(view, defaultViewId || uuid())\n  }\n\n  return view\n}\n","export * from './control'\nexport * from './coord'\nexport * from './extent'\nexport * from './feature'\nexport * from './format'\nexport * from './geom'\nexport * from './interaction'\nexport * from './layer'\nexport * from './map'\nexport * from './overlay'\nexport * from './proj'\nexport * from './source'\nexport * from './style'\nexport * from './tilegrid'\nexport * from './view'\n\nexport function expandUrl (url) {\n  const urls = []\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url)\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0)\n    const stopCharCode = match[2].charCodeAt(0)\n    let charCode\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)))\n    }\n    return urls\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url)\n  if (match) {\n    // number range\n    const stop1 = parseInt(match[2], 10)\n    for (let i = parseInt(match[1], 10); i <= stop1; i++) {\n      urls.push(url.replace(match[0], i.toString()))\n    }\n    return urls\n  }\n  urls.push(url)\n  return urls\n}\n"],"names":["getControlId","control","Control","get","Error","setControlId","controlId","set","initializeControl","defaultControlId","uuid","COORD_PRECISION","roundExtent","extent","precision","map","x","round","roundPointCoords","coordinates","roundLineCoords","point","roundPolygonCoords","line","roundMultiPointCoords","roundMultiLineCoords","roundMultiPolygonCoords","polygon","roundCoords","geomType","GeometryType","POINT","CIRCLE","LINE_STRING","MULTI_POINT","POLYGON","MULTI_LINE_STRING","MULTI_POLYGON","flatCoords","polygonReducer","coords","lineString","concat","reduce","isEqualCoord","a","b","isEqual","calcDistance","point1","point2","dx","dy","squared","Math","sqrt","isPointCoords","and","isArray","length","every","isNumber","isLineCoords","isPolygonCoords","isMultiPointCoords","isMultiLineCoords","isMultiPolygonCoords","multiPolygon","createOrUpdate","minX","minY","maxX","maxY","getCorner","corner","coordinate","Corner","BOTTOM_LEFT","getBottomLeft","BOTTOM_RIGHT","getBottomRight","TOP_LEFT","getTopLeft","TOP_RIGHT","getTopRight","assert","createPointGeom","lonOrCoordinates","lat","Array","Point","createLineGeom","points","LineString","createPolygonGeom","rings","Polygon","createMultiPointGeom","MultiPoint","createMultiLineGeom","lines","MultiLineString","createMultiPolygonGeom","polygons","MultiPolygon","createGeomCollection","geoms","GeometryCollection","createCircularPolygon","center","radius","circularPolygon","isMultiGeom","geom","multiTypes","GEOMETRY_COLLECTION","includes","type","getType","toSimpleGeom","Circle","getCenter","complexTypes","geometries","getGeometries","findPointOnSurface","simpleGeom","pointFeature","pointOnFeature","getCoordinates","geometry","getGeometryId","Geometry","isPlainObject","id","setGeometryId","geometryId","initializeGeometry","defaultGeometryId","isCircleGeom","value","getGeomType","getGeomCoords","EPSG_4326","EPSG_3857","pointToLonLat","projection","toLonLat","pointFromLonLat","fromLonLat","transformPoint","sourceProjection","destProjection","transform","coord","baseTransform","some","isNaN","lineToLonLat","lineFromLonLat","transformLine","polygonToLonLat","polygonFromLonLat","transformPolygon","multiPointToLonLat","multiPointFromLonLat","transformMultiPoint","multiLineToLonLat","multiLineFromLonLat","transformMultiLine","multiPolygonToLonLat","multiPolygonFromLonLat","transformMultiPolygon","transforms","transformExtent","isFinite","ext","baseTransformExtent","extentFromLonLat","extentToLonLat","transformDistance","distance","isStyle","style","Style","ImageStyle","Fill","Stroke","Text","Function","getStyleId","setStyleId","styleId","initializeStyle","defaultStyleId","defaultStyle","fillColor","strokeColor","strokeWidth","imageRadius","defaultEditStyle","styles","white","blue","width","zIndex","Infinity","isEmpty","Object","keys","createStyle","vlStyle","geomReader","identity","olStyle","text","createTextStyle","fill","createFillStyle","stroke","createStrokeStyle","image","createImageStyle","createGeomStyle","renderer","normalizeColor","color","c","parseColor","rgba","prefix","prefixKey","addPrefix","key","fillStyle","name","strokeStyle","isNumeric","imageStyle","Ctor","Icon","anchor","anchorOrigin","anchorXUnits","anchorYUnits","offset","offsetOrigin","size","img","imgSize","src","crossOrigin","RegularShape","radius1","radius2","angle","opacity","scale","rotation","rotateWithView","displacement","textStyle","textAlign","textBaseline","font","offsetX","offsetY","padding","maxAngle","overflow","placement","backgroundFill","backgroundStroke","isFunction","__styleGeomFunc","feature","dumpStyle","geomWriter","dumpFillStyle","getFill","dumpStrokeStyle","getStroke","dumpImageStyle","getImage","dumpTextStyle","getText","dumpGeomStyle","getGeometry","getZIndex","getColor","getWidth","getMiterLimit","getLineCap","getLineJoin","getLineDash","getLineDashOffset","common","getOpacity","getScale","getRotation","getRotateWithView","getDisplacement","anchor_","slice","anchorOrigin_","anchorXUnits_","anchorYUnits_","offset_","offsetOrigin_","getSize","getSrc","crossOrigin_","getRadius","getPoints","getRadius2","getAngle","filter","getTextAlign","getTextBaseline","getFont","getOffsetX","getOffsetY","getPadding","getMaxAngle","getOverflow","getPlacement","getBackgroundFill","getBackgroundStroke","createGeoJsonFmt","options","GeoJSON","createMvtFmt","MVT","CIRCLE_SERIALIZE_PROP","STYLE_SERIALIZE_PROP","defaultDecimals","decimals","undefined","defaultStyleReader","styleReader","noop","defaultStyleWriter","styleWriter","adaptOptions","end","getLength","featureProjection","object","properties","getId","writeGeometryObject","dataProjection","getProperties","getGeometryName","clonePlainObject","omit","features","Feature","writeFeatureObject","getStyle","geoJSONFeature","circle","readGeometryFromObject","geometryName_","setGeometryName","extractGeometryName_","geometry_name","setGeometry","setId","setStyle","isGeoJSONFeature","readFeatureFromObject","setProperties","BaseGeoJSON","getGeoJsonFmt","writeGeoJsonFeature","readGeoJsonFeature","geoJsonFeature","readFeature","writeGeoJsonGeometry","geometryProjection","readGeoJsonGeometry","geoJsonGeometry","readProjection","readGeometry","geoJsonObj","defaultProjection","isGeoJSONGeometry","values","getFeatureId","setFeatureId","featureId","initializeFeature","defaultFeatureId","getFeatureGeomName","getFeatureGeom","getFeatureProperties","setFeatureProperties","getInteractionId","interaction","Interaction","setInteractionId","interactionId","getInteractionPriority","setInteractionPriority","priority","initializeInteraction","defaultInteractionId","defaultPriority","getLayerId","layer","BaseLayer","setLayerId","layerId","initializeLayer","defaultLayerId","getMapId","PluggableMap","setMapId","mapId","getMapDataProjection","setMapDataProjection","getOverlayId","overlay","Overlay","setOverlayId","overlayId","initializeOverlay","defaultOverlay","getSourceId","source","Source","setSourceId","sourceId","initializeSource","defaultSourceId","cleanSourceParams","params","filterKeys","toUpperCase","extentFromProjection","getProjection","getExtent","half","METERS_PER_UNIT","Units","DEGREES","getMetersPerUnit","getViewId","view","View","setViewId","viewId","initializeView","defaultViewId","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","replace","String","fromCharCode","stop1","parseInt","i","toString"],"mappings":"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AD,EAAkChG,SAAS,CAAC,kBAAD,CAA3C,CAjBP,GAkBV,UAAA3F,KAAK;AAAA,WAAIA,KAAK,IAAI,IAAb;AAAA,GAlBK,CAAb;AAmBD;AAEM,SAASkJ,aAAT,CAAwB7K,IAAxB,EAAqD;AAAA,MAAvBoK,UAAuB,uEAAVhE,QAAU;AAC1D,MAAI,CAACpG,IAAL,EAAW,OAAO,EAAP;AAEX,SAAO;AACLA,IAAAA,IAAI,EAAEoK,UAAU,CAACpK,IAAD;AADX,GAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvjBA;AACA;AACA;AACA;;AACO,SAASuN,gBAAT,CAA2BC,OAA3B,EAAoC;AACzC,SAAO,IAAIC,OAAJ,CAAYD,OAAZ,CAAP;AACD;AAED;AACA;AACA;AACA;;AACO,SAASE,YAAT,CAAuBF,OAAvB,EAAgC;AACrC,SAAO,IAAIG,GAAJ,CAAQH,OAAR,CAAP;AACD;IAEYI,qBAAqB,GAAG;IACxBC,oBAAoB,GAAG;;IAE9BJ;;;;;AACJ,qBAA2B;AAAA;;AAAA,QAAdD,OAAc,uEAAJ,EAAI;;AAAA;;AACzB,8BAAMA,OAAN;AAEA,UAAKM,eAAL,GAAuBN,OAAO,CAACO,QAAR,IAAoB,IAApB,IAA4BP,OAAO,CAACO,QAAR,GAAmB,CAAC,CAAhD,GAAoDP,OAAO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"}
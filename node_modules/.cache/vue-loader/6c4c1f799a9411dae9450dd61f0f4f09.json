{"remainingRequest":"/Users/8ps/Downloads/eodash-staging/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/8ps/Downloads/eodash-staging/app/src/views/Dashboard.vue?vue&type=style&index=0&id=22ba47ca&lang=scss&scoped=true&","dependencies":[{"path":"/Users/8ps/Downloads/eodash-staging/app/src/views/Dashboard.vue","mtime":1624532486000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhlYWRlcl9fbG9nbyB7CiAgICBoZWlnaHQ6IDMycHg7Cn0KOjp2LWRlZXAgLnRoZW1lLS1saWdodC52LWNhcmQudi1jYXJkLS1vdXRsaW5lZCB7CiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tdi1wcmltYXJ5LWJhc2UpOwp9Cjo6di1kZWVwIC52LWRpYWxvZy0tZnVsbHNjcmVlbiB7CiAgaGVhZGVyLAogIGhlYWRlciAudi10b29sYmFyX19jb250ZW50IHsKICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50OwogIH0KICBoZWFkZXIgewogICAgcGFkZGluZy10b3A6IDEycHg7CiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDsKICB9Cn0KLnByZXZlbnRFbGxpcHNpczphZnRlciB7CiAgY29udGVudDogIlwwMDAwYTAiOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB3aWR0aDogMDsKfQo6OnYtZGVlcCAudi1uYXZpZ2F0aW9uLWRyYXdlci0tdGVtcG9yYXJ5Om5vdCgudi1uYXZpZ2F0aW9uLWRyYXdlci0tY2xvc2UpIHsKICAgIGJveC1zaGFkb3c6IG5vbmU7Cn0K"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappingsfile":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"dashboard fill-height\">\n    <v-app-bar\n      app\n      clipped-left\n      clipped-right\n      flat\n      color=\"primary\"\n      class=\"white--text\"\n      v-show=\"!isFullScreen\"\n    >\n      <v-app-bar-nav-icon @click.stop=\"drawerLeft = !drawerLeft\" dark />\n      <v-toolbar-title\n        v-if=\"$vuetify.breakpoint.mdAndUp\"\n        class=\"text-uppercase mr-5\"\n      >\n        {{ appConfig && appConfig.branding.appName }}\n      </v-toolbar-title>\n      <template v-if=\"!$vuetify.breakpoint.xsOnly\">\n        <v-btn\n          text\n          dark\n          small\n          @click=\"displayShowText('welcome')\"\n        >\n          Welcome\n        </v-btn>\n        <v-btn\n          text\n          dark\n          small\n          @click=\"displayShowText('about')\"\n        >\n          About\n        </v-btn>\n      </template>\n      <v-spacer></v-spacer>\n      <img class=\"header__logo\" :src=\"appConfig && appConfig.branding.headerLogo\" />\n    </v-app-bar>\n\n    <v-navigation-drawer\n      v-model=\"drawerLeft\"\n      left\n      app\n      clipped\n      style=\"overflow: hidden\"\n      class=\"drawerLeft\"\n      v-show=\"!isFullScreen\"\n    >\n      <template v-if=\"$vuetify.breakpoint.xsOnly\">\n        <v-list-item style=\"background: var(--v-primary-base)\">\n          <v-list-item-content>\n            <h3 class=\"text-uppercase white--text\">\n              {{ appConfig && appConfig.branding.appName }}\n            </h3>\n          </v-list-item-content>\n          <v-list-item-action\n            class=\"align-center\"\n          >\n            <v-icon\n              style=\"position: absolute;\"\n              color=\"white\"\n              small\n              dark\n              @click=\"$vuetify.theme.dark = !$vuetify.theme.dark\"\n            >\n              {{\n                $vuetify.theme.dark\n                  ? 'mdi-white-balance-sunny'\n                  : 'mdi-weather-night'\n              }}\n            </v-icon>\n          </v-list-item-action>\n        </v-list-item>\n\n        <v-divider></v-divider>\n\n        <v-btn\n          block\n          text\n          color=\"primary\"\n          @click=\"displayShowText('welcome')\"\n        >\n          Welcome\n        </v-btn>\n        <v-btn\n          block\n          text\n          color=\"primary\"\n          @click=\"displayShowText('about')\"\n        >\n          About\n        </v-btn>\n        <v-divider></v-divider>\n      </template>\n      <selection-panel style=\"overflow:hidden\" />\n    </v-navigation-drawer>\n    <v-navigation-drawer\n      v-if=\"$vuetify.breakpoint.mdAndUp\"\n      v-model=\"drawerRight\"\n      right\n      stateless\n      app\n      clipped\n      temporary\n      hide-overlay\n      :width=\"dataPanelFullWidth ? '100%' : '40%'\"\n      :style=\"`margin-top: ${$vuetify.application.top}px;\n        height: calc(100% - ${$vuetify.application.top + $vuetify.application.footer}px`\"\n      class=\"data-panel\"\n    >\n      <banner v-if=\"currentNews\" ref=\"newsBanner\" />\n      <v-toolbar v-if=\"$store.state.indicators.selectedIndicator\" flat>\n        <v-btn v-if=\"dataPanelFullWidth\" icon @click=\"setDataPanelWidth(false)\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n        <v-btn v-else icon @click=\"setDataPanelWidth(true)\">\n          <v-icon>mdi-arrow-expand</v-icon>\n        </v-btn>\n        <v-toolbar-title v-if=\"$store.state.indicators.selectedIndicator\"\n          :class=\"$store.state.indicators.selectedIndicator.description ===\n            $store.state.indicators.selectedIndicator.indicatorName && 'preventEllipsis'\"\n        >\n          {{ $store.state.features.allFeatures\n              .find(f => getLocationCode(f.properties.indicatorObject) === $route.query.poi)\n              .properties.indicatorObject.city }},\n          {{ $store.state.features.allFeatures\n              .find(f => getLocationCode(f.properties.indicatorObject) === $route.query.poi)\n              .properties.indicatorObject.description }}\n          <div v-if=\"\n            $store.state.indicators.selectedIndicator.description !==\n            $store.state.indicators.selectedIndicator.indicatorName\n            && $store.state.indicators.customAreaIndicator === null\"\n            class=\"subheading\" style=\"font-size: 0.8em\">\n            {{ $store.state.features.allFeatures\n              .find(f => getLocationCode(f.properties.indicatorObject) === $route.query.poi)\n              .properties.indicatorObject.indicatorName }}\n          </div>\n        </v-toolbar-title>\n      </v-toolbar>\n      <data-panel\n        v-if=\"$store.state.indicators.selectedIndicator\"\n        :key=\"panelKey\"\n        :newsBanner=\"$refs.newsBanner\"\n        :expanded=\"dataPanelFullWidth\" class=\"px-5\" />\n      <template v-else>\n        <Welcome v-if=\"showText === 'welcome'\" />\n        <About v-else-if=\"showText === 'about'\" />\n      </template>\n    </v-navigation-drawer>\n    <v-dialog\n      v-if=\"$vuetify.breakpoint.smAndDown\"\n      v-model=\"dialog\"\n      persistent\n      fullscreen\n      hide-overlay\n      transition=\"dialog-bottom-transition\"\n      style=\"overflow:hidden\"\n      v-show=\"!isFullScreen\"\n    >\n      <v-toolbar dark color=\"primary\">\n        <v-toolbar-title style=\"overflow: unset; white-space: pre-wrap;\"\n          v-if=\"$store.state.indicators.selectedIndicator\"\n        >{{ $store.state.indicators.selectedIndicator.city }},\n          {{ $store.state.indicators.selectedIndicator.description }}\n        </v-toolbar-title>\n        <v-toolbar-title v-else class=\"text-capitalize\">\n          {{ showText }}\n        </v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn\n          v-if=\"showText === 'welcome'\n            && $vuetify.breakpoint.smAndDown\n            && !$store.state.indicators.selectedIndicator\"\n          @click=\"clickMobileClose\"\n          color=\"secondary\"\n        >\n          <v-icon left>mdi-arrow-right</v-icon>\n          Start exploring!\n        </v-btn>\n        <v-btn v-else icon dark @click=\"clickMobileClose\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </v-toolbar>\n      <div\n        class=\"scrollContainer data-panel\"\n        :style=\"{background: $vuetify.theme.themes[theme].background}\"\n      >\n        <banner v-if=\"currentNews\" />\n\n        <h4 v-if=\"\n            ($store.state.indicators.selectedIndicator && (\n              $store.state.indicators.selectedIndicator.description !==\n              $store.state.indicators.selectedIndicator.indicatorName))\"\n          class=\"px-4 py-2\"\n        >\n          {{ $store.state.features.allFeatures\n              .find(f => getLocationCode(f.properties.indicatorObject) === $route.query.poi)\n              .properties.indicatorObject.indicatorName }}\n        </h4>\n        <data-panel\n          v-if=\"$store.state.indicators.selectedIndicator\"\n          :newsBanner=\"$refs.newsBanner\"\n          :expanded=\"dataPanelFullWidth\" class=\"fill-height\" />\n        <template v-else>\n          <Welcome v-if=\"showText === 'welcome'\" style=\"padding-bottom: 135px !important\" />\n          <About v-else-if=\"showText === 'about'\" style=\"padding-bottom: 100px !important\" />\n        </template>\n      </div>\n    </v-dialog>\n    <v-content style=\"height: 100vh; height: calc(var(--vh, 1vh) * 100); overflow:hidden\"\n      :style=\"$vuetify.breakpoint.mdAndUp && 'width: 60%;'\"\n    >\n      <v-container\n        class=\"fill-height pa-0\"\n        fluid\n      >\n        <v-row class=\"fill-height\">\n          <v-col\n            cols=\"12\"\n            class=\"pt-0 fill-height\"\n          >\n            <center-panel />\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n    <global-footer v-if=\"!isFullScreen\"/>\n  </div>\n</template>\n\n<script>\nimport Welcome from '@/views/Welcome.vue';\nimport About from '@/views/About.vue';\nimport Banner from '@/components/Banner.vue';\nimport SelectionPanel from '@/components/SelectionPanel.vue';\nimport CenterPanel from '@/components/CenterPanel.vue';\nimport DataPanel from '@/components/DataPanel.vue';\nimport GlobalFooter from '@/components/GlobalFooter.vue';\nimport closeMixin from '@/mixins/close';\nimport dialogMixin from '@/mixins/dialogMixin';\nimport { mapState } from 'vuex';\n\nexport default {\n  metaInfo() {\n    const { appConfig } = this.$store.state.config;\n    return {\n      title: appConfig ? appConfig.branding.appName : 'eodash',\n      link: [\n        { rel: 'apple-touch-icon', href: `${appConfig.pageMeta.imagePath}/apple-touch-icon-192x192.png` },\n      ],\n    };\n  },\n  components: {\n    Welcome,\n    About,\n    Banner,\n    SelectionPanel,\n    CenterPanel,\n    DataPanel,\n    GlobalFooter,\n  },\n  props: {\n    source: String,\n  },\n  mixins: [closeMixin, dialogMixin],\n  data: () => ({\n    drawerLeft: true,\n    drawerRight: false,\n    dialog: false,\n    showText: null,\n    dataPanelFullWidth: false,\n    dataPanelTemporary: false,\n    panelKey: 0,\n  }),\n  computed: {\n    appConfig() {\n      return this.$store.state.config.appConfig;\n    },\n    indicatorSelected() {\n      return this.$store.state.indicators.selectedIndicator;\n    },\n    currentNews() {\n      let currentNews;\n      if (this.appConfig && this.appConfig.newsBanner) {\n        const currentDate = new Date().getTime();\n        const startDate = new Date(this.appConfig.newsBanner.startDate).getTime();\n        // set end date + 1 to include last day\n        let endDate = new Date(this.appConfig.newsBanner.endDate);\n        endDate.setDate(endDate.getDate() + 1);\n        endDate = endDate.getTime();\n        if (startDate < currentDate\n          && currentDate < endDate) {\n          currentNews = this.appConfig.newsBanner;\n        }\n      }\n      return currentNews;\n    },\n    theme() {\n      return (this.$vuetify.theme.dark) ? 'dark' : 'light';\n    },\n    ...mapState(['isFullScreen']),\n  },\n  created() {\n    this.drawerLeft = this.$vuetify.breakpoint.mdAndUp;\n    this.drawerRight = this.$vuetify.breakpoint.mdAndUp;\n    if (!this.$vuetify.breakpoint.mdAndUp) {\n      this.dialog = true;\n    }\n  },\n  mounted() {\n    this.fixFullHeight();\n    window.addEventListener('resize', () => {\n      this.fixFullHeight();\n    });\n    setTimeout(() => {\n      // only show when no poi is selected\n      if (!this.$route.query.poi) {\n        this.showText = 'welcome';\n        this.drawerRight = true;\n      }\n    }, 2000);\n  },\n  methods: {\n    fixFullHeight() {\n      // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n      const vh = window.innerHeight * 0.01;\n      // Then we set the value in the --vh custom property to the root of the document\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    },\n    setDataPanelWidth(enable) {\n      if (enable) {\n        this.dataPanelTemporary = true;\n        this.dataPanelFullWidth = true;\n      } else {\n        this.dataPanelFullWidth = false;\n        // TO-DO find more reliable way of checking\n        setTimeout(() => { this.dataPanelTemporary = false; }, 500);\n      }\n    },\n    clickMobileClose() {\n      this.drawerRight = false;\n      this.dialog = false;\n      this.showText = null;\n      this.$store.commit('indicators/SET_SELECTED_INDICATOR', null);\n    },\n    displayShowText(text) {\n      this.$store.commit('indicators/SET_SELECTED_INDICATOR', null);\n      this.drawerRight = true;\n      if (!this.$vuetify.breakpoint.mdAndUp) {\n        this.dialog = true;\n      }\n      this.showText = text;\n    },\n    close() {\n      this.setDataPanelWidth(false);\n    },\n  },\n  watch: {\n    indicatorSelected(selected) {\n      if (selected) {\n        this.drawerRight = true;\n        if (!this.$vuetify.breakpoint.mdAndUp) {\n          this.dialog = true;\n        }\n      }\n      this.$store.commit('indicators/SET_CUSTOM_AREA_INDICATOR', null);\n      this.panelKey = Math.random();\n    },\n    dialog(someIndicatorSelected) {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        if (!someIndicatorSelected) {\n          this.clickMobileClose();\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.header__logo {\n    height: 32px;\n}\n::v-deep .theme--light.v-card.v-card--outlined {\n  border: 1px solid var(--v-primary-base);\n}\n::v-deep .v-dialog--fullscreen {\n  header,\n  header .v-toolbar__content {\n    height: auto !important;\n  }\n  header {\n    padding-top: 12px;\n    padding-bottom: 12px;\n  }\n}\n.preventEllipsis:after {\n  content: \"\\0000a0\";\n  display: inline-block;\n  width: 0;\n}\n::v-deep .v-navigation-drawer--temporary:not(.v-navigation-drawer--close) {\n    box-shadow: none;\n}\n</style>\n"]}]}
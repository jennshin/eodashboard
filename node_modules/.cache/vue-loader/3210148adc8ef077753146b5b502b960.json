{"remainingRequest":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/src/components/FeatureTable.vue?vue&type=style&index=0&id=f0965ab0&lang=scss&scoped=true&","dependencies":[{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/src/components/FeatureTable.vue","mtime":1624532486000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/css-loader/dist/cjs.js","mtime":1624878752000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1624878753000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/postcss-loader/src/index.js","mtime":1624878752000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/sass-loader/dist/cjs.js","mtime":1624878756000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/vue-loader/lib/index.js","mtime":1624878753000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmVhdHVyZVRhYmxlIHsKICA6OnYtZGVlcCB0ciB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQoKICA6OnYtZGVlcCAuYXJjaGl2ZWQtcm93IHRkIHsKICAgIG9wYWNpdHk6IDAuNjU7CiAgfQp9CgoudGFibGUtZmxhZy1saXN0IHsKICAudGFibGUtZmxhZzpub3QoOmxhc3QtY2hpbGQpIHsKICAgIG1hcmdpbi1yaWdodDogLjNyZW07CiAgfQp9Cg=="},{"version":3,"sources":["FeatureTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"FeatureTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n      >\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"allFeatures\"\n          :items-per-page=\"10\"\n          :item-class=\"f => f.indicatorObject.updateFrequency\n            && f.indicatorObject.updateFrequency.toLowerCase() === 'archived' ? 'archived-row' : ''\"\n          class=\"featureTable elevation-1\"\n          @click:row=\"openFeature\"\n          multi-sort\n        >\n          <template v-slot:item.type=\"{ item }\">\n            <span class=\"text-capitalize\">\n              {{ item.type }}\n            </span>\n          </template>\n          <template v-slot:item.indicatorValue=\"{ item }\">\n            <v-chip\n              v-if=\"item.indicatorValue\"\n              :color=\"item.indicatorColor\" dark\n              class=\"text-capitalize\"\n            >\n              {{ item.indicatorValue.toLowerCase() }}\n            </v-chip>\n          </template>\n          <template v-slot:item.country=\"{ item }\">\n            <div v-if=\"Array.isArray(item.country)\" class=\"table-flag d-flex justify-center\" >\n              <span v-for=\"(country, i) in item.country\" :key=\"i\" class=\"table-flag\">\n                <v-icon v-if=\"country === 'all'\" class=\"ml-1\">mdi-earth</v-icon>\n                <country-flag v-else :country=\"country\" size=\"normal\"></country-flag>\n              </span>\n            </div>\n            <div v-else class=\"d-flex justify-center\">\n              <v-icon v-if=\"item.country === 'all'\" class=\"ml-1\">mdi-earth</v-icon>\n              <country-flag v-else :country=\"item.country\" size=\"normal\"></country-flag>\n            </div>\n          </template>\n        </v-data-table>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n// Utilities\nimport {\n  mapGetters,\n  mapState,\n} from 'vuex';\n\nimport CountryFlag from 'vue-country-flag';\n\n\nexport default {\n  components: {\n    CountryFlag,\n  },\n  computed: {\n    ...mapGetters('features', ['getGroupedFeatures']),\n    ...mapState('config', ['baseConfig']),\n    headers() {\n      return [\n        {\n          text: 'Country',\n          align: 'start',\n          sortable: true,\n          value: 'country',\n        },\n        { text: 'Location', value: 'location' },\n        { text: 'Type', value: 'type' },\n        { text: 'Indicator', value: 'indicator' },\n        {\n          text: 'Value',\n          align: 'end',\n          value: 'indicatorValue',\n        },\n      ];\n    },\n    allFeatures() {\n      return this.getGroupedFeatures.map((f) => ({\n        country: f.properties.indicatorObject.country,\n        location: f.properties.indicatorObject.city,\n        type: this.getClass(f),\n        indicator: this.getIndicator(f.properties.indicatorObject),\n        indicatorValue: this.getIndicatorLabel(f.properties.indicatorObject),\n        indicatorColor: this.getColor(f.properties.indicatorObject),\n        indicatorObject: f.properties.indicatorObject,\n      }));\n    },\n  },\n  methods: {\n    flatten(array) {\n      return [...new Set([array].flat(1))];\n    },\n    getClass(item) {\n      const code = item.properties.indicatorObject.indicator;\n      const validClass = typeof this.baseConfig.indicatorsDefinition[code] !== 'undefined' ? this.baseConfig.indicatorsDefinition[code].class : this.baseConfig.indicatorsDefinition.d.class;\n      return validClass;\n    },\n    getIndicator(indObj) {\n      let ind = indObj.description;\n      if (this.baseConfig.indicatorsDefinition[indObj.indicator]\n        && this.baseConfig.indicatorsDefinition[indObj.indicator].indicatorOverwrite) {\n        ind = this.baseConfig.indicatorsDefinition[indObj.indicator].indicatorOverwrite;\n      }\n      return ind;\n    },\n    getColor(indObj) {\n      let color;\n      if (indObj) {\n        if (Object.prototype.hasOwnProperty.call(indObj, 'lastColorCode')\n          && !['', '/'].includes(indObj.lastColorCode)) {\n          color = this.getIndicatorColor(indObj.lastColorCode);\n        }\n        if (Object.prototype.hasOwnProperty.call(indObj, 'indicator')\n          && ['N1', 'N1a', 'N1b', 'N3b', 'E12b', 'C1', 'C2', 'C3'].includes(indObj.indicator)) {\n          color = this.getIndicatorColor('BLUE');\n          if (indObj.aoi === null) {\n            color = 'black';\n          }\n        }\n      }\n      return color;\n    },\n    getIndicatorLabel(poi) {\n      let text = 'coming soon';\n      if (poi) {\n        if (Object.prototype.hasOwnProperty.call(poi, 'lastIndicatorValue')\n          && poi.lastIndicatorValue !== '') {\n          const lastValue = poi.lastIndicatorValue;\n          if (['E10a1', 'E10a5', 'E10a8'].includes(poi.indicator)) {\n            if (lastValue !== '') {\n              const percVal = Number((lastValue * 100).toPrecision(4));\n              if (percVal > 0) {\n                text = `+${percVal}%`;\n              } else {\n                text = `${percVal}%`;\n              }\n            } else if (['E10a3', 'E10a8'].includes(poi.indicator)) {\n              text = 'multiple';\n            } else {\n              text = lastValue;\n            }\n          } else if (['E10a3', 'E10a8', 'N4c', 'C1', 'C2', 'C3'].includes(poi.indicator)) {\n            text = 'multiple';\n          } else {\n            text = lastValue;\n          }\n        } else if (Object.prototype.hasOwnProperty.call(poi, 'lastMeasurement')\n          && poi.lastMeasurement !== '') {\n          text = poi.lastMeasurement.toPrecision(4);\n        }\n      }\n      return text;\n    },\n    indicator(code) {\n      return this.baseConfig.indicatorsDefinition[code];\n    },\n    openFeature(feature) {\n      if (!feature.indicatorObject.dummyFeature) {\n        this.$store.commit(\n          'indicators/SET_SELECTED_INDICATOR',\n          feature.indicatorObject,\n        );\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.featureTable {\n  ::v-deep tr {\n    cursor: pointer;\n  }\n\n  ::v-deep .archived-row td {\n    opacity: 0.65;\n  }\n}\n\n.table-flag-list {\n  .table-flag:not(:last-child) {\n    margin-right: .3rem;\n  }\n}\n</style>\n"]}]}
{"remainingRequest":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/App.vue","mtime":1624532486000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/babel-loader/lib/index.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/vue-loader/lib/index.js","mtime":1624878753000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"App.vue","sourceRoot":"src","sourcesContent":["<!-- eslint-disable global-require -->\n<template>\n  <v-app id=\"inspire\" :class=\"`fill-height brand-${appConfig.id}`\">\n    <div v-if=\"comingSoon\"\n      class=\"fill-height d-flex justify-center align-center\"\n      :style=\"{background: $vuetify.theme.themes[theme].background}\"\n    >\n      <countdown v-if=\"countDownTime\" :time=\"countDownTime\" @end=\"comingSoon = false\">\n        <template slot-scope=\"props\">\n          <div class=\"text-center\">\n            <img src=\"../public/data/trilateral/Countdown.png\"\n              style=\"width: 70%; max-width: 100vw\" class=\"mb-5\" />\n            <h1 class=\"display-2 primary--text\">\n              <span v-if=\"props.days > 0\">{{ props.days }} days, </span>{{ props.hours }} hours,\n              <br v-if=\"$vuetify.breakpoint.xsOnly\" />{{ props.minutes }} minutes,\n              <br v-if=\"$vuetify.breakpoint.xsOnly\" />{{ props.seconds }} seconds\n            </h1>\n          </div>\n        </template>\n      </countdown>\n    </div>\n    <template v-else>\n      <router-view />\n      <cookie-law\n        v-if=\"showCookieNotice\" @accept=\"acceptCookies\"\n        :theme=\"$vuetify.theme.dark ? 'blood-orange' : 'base'\"\n      >\n        <div slot-scope=\"props\" style=\"width: 100%;\">\n          <div class=\"d-flex align-center justify-center mb-5\">\n            <small class=\"mb-0\">\n              We use cookies which are essential for you to access our website and/or\n              to provide you with our services\n              and allow us to measure and improve the\n              performance of our website. <br v-if=\"$vuetify.breakpoint.xsOnly\" />\n              <a href=\"/privacy\" target=\"_blank\">Learn more</a>.\n            </small>\n          </div>\n          <div class=\"text-center\">\n            <v-btn\n              color=\"primary\"\n              :block=\"$vuetify.breakpoint.xsOnly\"\n              :class=\"$vuetify.breakpoint.smAndUp ? 'mr-5' : 'mb-5'\"\n              @click=\"props.accept\"\n            >\n              <v-icon left>mdi-checkbox-marked-circle-outline</v-icon>\n              Accept all cookies\n            </v-btn>\n            <v-btn\n              color=\"primary\"\n              outlined\n              :block=\"$vuetify.breakpoint.xsOnly\"\n              @click=\"props.close\"\n            >\n              <v-icon left>mdi-cancel</v-icon>\n              Accept essential only\n            </v-btn>\n          </div>\n        </div>\n      </cookie-law>\n      <alert />\n    </template>\n  </v-app>\n</template>\n\n<script>\n// Utilities\nimport {\n  mapState,\n  mapGetters,\n} from 'vuex';\nimport CookieLaw from 'vue-cookie-law';\nimport { loadIndicatorData } from '@/utils';\n\nimport axios from 'axios';\nimport { Wkt } from 'wicket';\n\nimport Alert from './components/Alert.vue';\n\nconst wkt = new Wkt();\n\nexport default {\n  components: {\n    CookieLaw,\n    Alert,\n  },\n  data: () => ({\n    showPrivacyDialog: false,\n    comingSoon: null,\n    countDownTime: null,\n  }),\n  computed: {\n    ...mapState('config', [\n      'appConfig',\n      'baseConfig',\n    ]),\n    ...mapGetters('features', [\n      'getIndicators',\n      'getCountryItems',\n    ]),\n    showCookieNotice() {\n      return this.$route.path !== '/iframe';\n    },\n    theme() {\n      return (this.$vuetify.theme.dark) ? 'dark' : 'light';\n    },\n  },\n  created() {\n    if (Object.prototype.hasOwnProperty.call(this.appConfig, 'countDownTimer')\n      && this.appConfig.countDownMatch.includes(document.domain)) {\n      this.comingSoon = true;\n      this.checkComingSoon();\n    } else {\n      this.comingSoon = false;\n    }\n  },\n  mounted() {\n    // Listen for features added, and select if poi in query\n    this.$store.subscribe((mutation) => {\n      if (mutation.type === 'features/ADD_NEW_FEATURES') {\n        // Read route query and set selected poi\n        const { poi } = this.$route.query;\n        let selectedFeature = null;\n        if (poi && poi.includes('-')) {\n          const aoiId = poi.split('-')[0];\n          const indicatorCode = poi.split('-')[1];\n          selectedFeature = this.$store.state.features.allFeatures.find((f) => {\n            const { indicatorObject } = f.properties;\n            return indicatorObject.aoiID === aoiId\n              && indicatorObject.indicator === indicatorCode;\n          });\n        }\n        this.$store.commit('indicators/SET_SELECTED_INDICATOR', selectedFeature ? selectedFeature.properties.indicatorObject : null);\n        this.$store.commit('indicators/SET_SELECTED_INDICATOR', selectedFeature ? selectedFeature.properties.indicatorObject : null);\n\n        // Read route query and validate country and indicator if in query\n        const { country } = this.$route.query;\n        const { indicator } = this.$route.query;\n        // validate query for country - need to be among available\n        const selectedCountry = this.getCountryItems\n          .map((item) => item.code).flat().find((f) => f === country);\n        let selectedIndicator = this.getIndicators\n          .map((item) => item.code).find((f) => f === indicator);\n        // If selectedIndicator is undefined and indicator has been provided\n        // it could be an archived indicator so we activate\n        if (typeof indicator !== 'undefined' && typeof selectedIndicator === 'undefined') {\n          this.$store.commit('features/SET_FEATURE_FILTER', { includeArchived: true });\n          selectedIndicator = this.getIndicators\n            .map((item) => item.code).find((f) => f === indicator);\n        }\n        this.$store.commit('features/INIT_FEATURE_FILTER', {\n          countries: selectedCountry,\n          indicators: selectedIndicator,\n        });\n      }\n\n      // Url query replacement\n      if (mutation.type === 'features/SET_FEATURE_FILTER') {\n        if (Array.isArray(mutation.payload.countries) && mutation.payload.countries.length === 0) {\n          // Global\n          const query = Object.assign({}, this.$route.query); // eslint-disable-line\n          delete query.country;\n          this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n          this.trackEvent('filters', 'select_country_filter', 'Global');\n        } else if (typeof mutation.payload.countries === 'string') {\n          // Country\n          this.$router.replace({ query: Object.assign({}, this.$route.query, { country: mutation.payload.countries }) }).catch(err => {}); // eslint-disable-line\n          this.trackEvent('filters', 'select_country_filter', mutation.payload.countries);\n        }\n        if (Array.isArray(mutation.payload.indicators)) {\n          if (mutation.payload.indicators.length === 0) {\n            // Reset\n            const query = Object.assign({}, this.$route.query); // eslint-disable-line\n            delete query.indicator;\n            this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n            this.trackEvent('filters', 'select_indicator_filter', 'all');\n          } else {\n            // Single\n            this.$router.replace({ query: Object.assign({}, this.$route.query, { indicator: mutation.payload.indicators[0] }) }).catch(err => {}); // eslint-disable-line\n            this.trackEvent('filters', 'select_indicator_filter', mutation.payload.indicators[0]);\n          }\n        }\n      }\n\n      if (mutation.type === 'features/SET_SELECTED_AREA') {\n        if (mutation.payload) {\n          const area = wkt.read(JSON.stringify(mutation.payload)).write();\n          this.$router.replace({ query: Object.assign({}, this.$route.query, { area, }) }).catch(err => {}); // eslint-disable-line\n        } else {\n          const query = Object.assign({}, this.$route.query); // eslint-disable-line\n          delete query.area;\n          this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n        }\n      }\n\n      if (['indicators/SET_SELECTED_INDICATOR'].includes(mutation.type)) {\n        if (mutation.payload && !( // If dummy feature selected ignore\n          Object.prototype.hasOwnProperty.call(mutation.payload, 'dummyFeature')\n          && mutation.payload.dummyFeature)) {\n          this.loadIndicatorData(mutation.payload);\n          this.$router.replace({ query: Object.assign({}, this.$route.query, { poi: this.getLocationCode(mutation.payload) }) }).catch(err => {}); // eslint-disable-line\n          this.trackEvent('indicators', 'select_indicator', this.getLocationCode(mutation.payload));\n          this.$store.commit('indicators/CUSTOM_AREA_INDICATOR_LOAD_FINISHED', null);\n        } else {\n          const query = Object.assign({}, this.$route.query); // eslint-disable-line\n          delete query.poi;\n          this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n          this.$store.commit('indicators/INDICATOR_LOAD_FINISHED', null);\n          this.$store.commit('indicators/CUSTOM_AREA_INDICATOR_LOAD_FINISHED', null);\n          this.trackEvent('indicators', 'deselect_indicator');\n        }\n      }\n    });\n    this.setAreaFromQuery();\n  },\n  methods: {\n    async checkComingSoon() {\n      const currentTime = await this.getCurrentTime();\n      this.countDownTime = new Date(this.appConfig.countDownTimer) - currentTime;\n      this.comingSoon = this.countDownTime > 0;\n    },\n    async getCurrentTime() {\n      const response = await axios.get('/');\n      return new Date(response.headers.date);\n    },\n    async loadIndicatorData(payload) {\n      const indicatorObject = await loadIndicatorData(this.baseConfig, payload);\n      if (indicatorObject) {\n        this.$store.commit('indicators/INDICATOR_LOAD_FINISHED', indicatorObject);\n      }\n    },\n    acceptCookies() {\n      if (this.$matomo) {\n        this.$matomo.rememberConsentGiven();\n      }\n    },\n    setAreaFromQuery() {\n      const { area } = this.$route.query;\n      // simply validate format of area from query\n      if (typeof area === 'string') {\n        const validArea = wkt.read(area);\n        if (validArea) {\n          // save as JSON\n          this.$store.commit('features/SET_SELECTED_AREA', validArea.toJson());\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"~@/scss/global.scss\";\n</style>\n"]}]}
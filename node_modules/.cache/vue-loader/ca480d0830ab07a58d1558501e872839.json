{"remainingRequest":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/components/FullScreenButton.vue?vue&type=style&index=0&id=416ab49d&lang=scss&scoped=true&","dependencies":[{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/components/FullScreenButton.vue","mtime":1624532486000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/css-loader/dist/cjs.js","mtime":1624878752000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1624878753000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/postcss-loader/src/index.js","mtime":1624878752000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/sass-loader/dist/cjs.js","mtime":1624878756000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/vue-loader/lib/index.js","mtime":1624878753000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZzLWJ0biB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICByaWdodDogMDsKICB6LWluZGV4OiA5OTk7CiAgbWFyZ2luOiAxMHB4OwogIGJvcmRlci1yYWRpdXM6IDVweDsKICB3aWR0aDogMjZweDsKICBoZWlnaHQ6IDI2cHg7Cn0KLmZzLWJ0bi10b3VjaCB7CiAgd2lkdGg6IDM0cHg7CiAgaGVpZ2h0OiAzNHB4OwogIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwwLDAsLjIpOwogIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsKfQouZnMtaWNvbi10b3VjaCB7CiAgZm9udC1zaXplOiAyNHB4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["FullScreenButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FullScreenButton.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-tooltip top>\n    <template v-slot:activator=\"{ on }\">\n      <v-btn\n        v-on=\"on\"\n        fab\n        :raised=\"false\"\n        x-small\n        class=\"fs-btn elevation-3\"\n        :class=\"touch && 'fs-btn-touch'\"\n        @click=\"toggleFullscreen\"\n      >\n        <v-icon\n          :class=\"touch && 'fs-icon-touch'\"\n        >{{ fullscreen\n          ? 'mdi-fullscreen-exit'\n          : 'mdi-fullscreen' }}</v-icon>\n      </v-btn>\n    </template>\n    <span v-if=\"!isFullScreen\">Full screen</span>\n  </v-tooltip>\n</template>\n\n<script>\nimport fullscreen from 'vue-fullscreen';\nimport Vue from 'vue';\nimport { mapState } from 'vuex';\n\nVue.use(fullscreen);\n\nexport default {\n  data: () => ({\n    fullscreen: false,\n    fullScreenElement: null,\n    touch: false,\n  }),\n  computed: {\n    ...mapState(['isFullScreen']),\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.touch = window.L.Browser.touch;\n    });\n  },\n  methods: {\n    toggleFullscreen(event) {\n      // Toggle fullscreen Element in the container element\n      const { parentElement } = event.target.closest('.v-btn');\n      this.fullScreenElement = parentElement;\n      if (this.$fullscreen.support) {\n        this.$fullscreen.toggle(parentElement, {\n          wrap: false,\n          callback: this.fullscreenChange,\n        });\n      } else {\n        this.fullscreenChange(!this.isFullScreen);\n      }\n    },\n    fullscreenChange(fullscreenActive) {\n      this.fullscreen = fullscreenActive;\n      const app = document.querySelector('.v-application');\n      if (fullscreenActive) {\n        app.classList.add('fullScreenActive');\n        this.fullScreenElement.classList.add('fullscreenElement');\n      } else {\n        app.classList.remove('fullScreenActive');\n        this.fullScreenElement.classList.remove('fullscreenElement');\n      }\n      this.$store.commit('changeFullScreen', fullscreenActive);\n      this.$nextTick(() => {\n        window.dispatchEvent(new Event('resize')); // Fixes Safari bug(#810)\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.fs-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 999;\n  margin: 10px;\n  border-radius: 5px;\n  width: 26px;\n  height: 26px;\n}\n.fs-btn-touch {\n  width: 34px;\n  height: 34px;\n  border: 2px solid rgba(0,0,0,.2);\n  box-shadow: none !important;\n}\n.fs-icon-touch {\n  font-size: 24px !important;\n}\n</style>\n\n<style lang=\"scss\">\n.data-panel .showFullScreenButton .leaflet-top {\n  top: 38px;\n}\n.data-panel .showFullScreenButton .leaflet-touch .leaflet-top {\n  top: 45px;\n}\n// global setting to have the fullscreen container\n// 100% width and height, to fix safari issues\n// *|*:fullscreen:not(:root) {\n//   position: fixed !important;\n//   top: 0 !important;\n//   left: 0 !important;\n//   right: 0 !important;\n//   bottom: 0 !important;\n//   width: 100% !important;\n//   // height: 100% !important;\n//   margin: 0 !important;\n//   min-width: 0 !important;\n//   max-width: none !important;\n//   min-height: 0 !important;\n//   max-height: none !important;\n//   box-sizing: border-box !important;\n//   object-fit: contain;\n//   transform: none !important;\n// }\n// .fullscreenElement {\n//   width: 100% !important;\n//   height: calc(100vh - 104px)!important;\n// }\n// .fullScreenActive .drawerLeft,\n// .fullScreenActive header,\n// .fullScreenActive footer,\n// .fullScreenActive .Cookie {\n//   display: none;\n// }\n// .fullScreenActive .data-panel {\n//   height: 100vh !important;\n//   margin-top: 0 !important;\n//   width: 100vw !important;\n// }\n</style>\n"]}]}
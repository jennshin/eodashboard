{"remainingRequest":"/Users/8ps/Downloads/eodash-staging/app/node_modules/babel-loader/lib/index.js!/Users/8ps/Downloads/eodash-staging/app/node_modules/eslint-loader/index.js??ref--13-0!/Users/8ps/Downloads/eodash-staging/app/src/store/modules/features.js","dependencies":[{"path":"/Users/8ps/Downloads/eodash-staging/app/src/store/modules/features.js","mtime":1624532486000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/8ps/Downloads/eodash-staging/app/src/store/modules/features.js"],"names":["Wkt","latLng","countriesJson","globalIdCounter","state","allFeatures","featureFilters","countries","indicators","includeArchived","selectedArea","resultsCount","economic","agriculture","environment","getters","getCountries","Set","filter","f","length","includes","properties","indicatorObject","indicator","map","country","flat","sort","getIndicators","_","rootState","filtered","Array","isArray","some","i","description","archived","code","class","config","baseConfig","indicatorsDefinition","indicatorOverwrite","getCountryItems","gettersG","c","item","features","find","alpha2","name","a","b","getFeatures","city","updateFrequency","toLowerCase","getGroupedFeatures","groupedFeatures","appConfig","featureGrouping","forEach","fG","firstFeature","aoiID","push","restFeatures","locationCode","concat","getLatestUpdate","times","time","Time","latest","t","mutations","ADD_NEW_FEATURES","INIT_FEATURE_FILTER","SET_FEATURE_FILTER","options","hasFeature","Object","keys","ADD_RESULTS_COUNT","type","count","SET_SELECTED_AREA","area","actions","loadAllEndpoints","commit","endpoints","dataEndpoints","ep","prototype","hasOwnProperty","call","url","provider","locationSuffix","F","endPointIdx","dispatch","console","log","globalIndicators","displayDummyLocations","dummyFeatures","loadEOXEndpoint","fetch","credentials","then","r","json","data","pM","aoi","lastColorCode","lastIndicatorValue","lastTime","lastMeasurement","siteName","subAoi","region","indicatorName","lastReferenceValue","lastReferenceTime","yAxis","wkt","featureObjs","rr","uniqueKey","entries","key","value","ftrs","read","jsonGeom","toJson","geometry","err","ftrCol","Number","NaN","kk","coords","split","replace","id","latlng","loadGeoDBEndpoint","loadDummyLocations","Promise","resolve","_vm","$papa","parse","download","quotes","header","skipEmptyLines","delimiter","complete","result","indicatorValue","dummyFeature","coordinates","namespaced"],"mappings":"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","sourcesContent":["/* eslint no-shadow: [\"error\", { \"allow\": [\"state\", \"getters\"] }] */\nimport { Wkt } from 'wicket';\nimport { latLng } from 'leaflet';\nimport countriesJson from '@/assets/countries.json';\n\nlet globalIdCounter = 0;\nconst state = {\n  allFeatures: [],\n  featureFilters: {\n    countries: [],\n    indicators: [],\n    includeArchived: false,\n  },\n  selectedArea: null,\n  resultsCount: {\n    economic: 0,\n    agriculture: 0,\n    environment: 0,\n  },\n};\n\nconst getters = {\n  getCountries(state) {\n    return [...new Set([\n      state.allFeatures\n        .filter((f) => (state.featureFilters.indicators.length > 0\n          ? state.featureFilters.indicators.includes(f.properties.indicatorObject.indicator)\n          : true))\n        .map((f) => f.properties.indicatorObject.country),\n    ].flat(2))].sort();\n  },\n  getIndicators(state, _, rootState) {\n    const indicators = [...new Set([\n      state.allFeatures\n        .filter((f) => {\n          let filtered;\n          if (state.featureFilters.countries.length > 0) {\n            if (Array.isArray(f.properties.indicatorObject.country)) {\n              filtered = f.properties.indicatorObject.country\n                .some((i) => state.featureFilters.countries.includes(i));\n            } else {\n              filtered = state.featureFilters.countries\n                .includes(f.properties.indicatorObject.country);\n            }\n          } else if (!state.featureFilters.includeArchived) {\n            filtered = f.properties.indicatorObject.description\n              && (!f.properties.indicatorObject.description.includes('(archived)'));\n          } else {\n            filtered = true;\n          }\n          return filtered;\n        })\n        .map((f) => ({\n          archived: f.properties.indicatorObject.description\n            && (f.properties.indicatorObject.description.includes('(archived)')),\n          code: f.properties.indicatorObject.indicator,\n          indicator: f.properties.indicatorObject.description,\n          class: rootState.config.baseConfig.indicatorsDefinition[\n            f.properties.indicatorObject.indicator\n          ].class,\n          indicatorOverwrite: rootState.config.baseConfig.indicatorsDefinition[\n            f.properties.indicatorObject.indicator\n          ].indicatorOverwrite,\n        })),\n    ].flat(2))].sort();\n    return indicators;\n  },\n  getCountryItems(state, gettersG) {\n    return gettersG.getCountries\n      .filter((c) => c !== 'all')\n      .map((c) => {\n        const item = countriesJson.features\n          .find((f) => f.properties.alpha2 === c);\n        return {\n          code: c,\n          name: item ? item.properties.name : 'Regional',\n        };\n      })\n      .sort((a, b) => ((a.name > b.name) ? 1 : -1));\n  },\n  getFeatures(state) {\n    let features = state.allFeatures;\n\n    if (state.featureFilters.countries.length > 0) {\n      features = features\n        .filter((f) => {\n          if (Array.isArray(f.properties.indicatorObject.country)) {\n            return f.properties.indicatorObject.country\n              .includes(state.featureFilters.countries);\n          } else { // eslint-disable-line\n            return state.featureFilters.countries\n              .includes(f.properties.indicatorObject.country)\n              || f.properties.indicatorObject.city === 'World';\n          }\n        });\n    }\n    if (state.featureFilters.indicators.length > 0) {\n      features = features\n        .filter((f) => state.featureFilters.indicators\n          .includes(f.properties.indicatorObject.indicator));\n    }\n\n    if (!state.featureFilters.includeArchived) {\n      features = features.filter((f) => (f.properties.indicatorObject.updateFrequency ? f.properties.indicatorObject.updateFrequency.toLowerCase() !== 'archived' : true));\n    }\n\n    features = features\n      .sort((a, b) => ((a.properties.indicatorObject.country > b.properties.indicatorObject.country)\n        ? 1 : -1));\n\n    return features;\n  },\n  getGroupedFeatures(state, getters, rootState) {\n    let allFeatures = [];\n    if (state.allFeatures.length > 0) {\n      const groupedFeatures = [];\n      if (rootState.config.appConfig.featureGrouping) {\n        rootState.config.appConfig.featureGrouping.forEach((fG) => {\n          const firstFeature = getters.getFeatures\n            .find((f) => `${f.properties.indicatorObject.aoiID}-${f.properties.indicatorObject.indicator}` === fG.features[0]);\n          if (firstFeature) {\n            groupedFeatures.push(firstFeature);\n          }\n        });\n      }\n      const restFeatures = rootState.config.appConfig.featureGrouping\n        ? getters.getFeatures\n          .filter((f) => {\n            const locationCode = `${f.properties.indicatorObject.aoiID}-${f.properties.indicatorObject.indicator}`;\n            return !rootState.config.appConfig.featureGrouping\n              .find((fG) => fG.features.includes(locationCode));\n          })\n        : getters.getFeatures;\n      allFeatures = groupedFeatures.concat(restFeatures);\n    }\n    return allFeatures;\n  },\n  getLatestUpdate(state) {\n    const times = state.allFeatures.map((f) => {\n      let time = f.properties.indicatorObject.Time;\n      let latest;\n      if (time && time.length > 0) {\n        time = time.sort((a, b) => ((a > b) ? 1 : -1));\n        latest = time[time.length - 1];\n      }\n      return latest;\n    });\n    const filtered = times.filter((t) => !!t).sort((a, b) => ((a > b) ? 1 : -1));\n    return filtered[filtered.length - 1];\n  },\n};\n\nconst mutations = {\n  // SET_MANUAL_FEATURES(state, features) {\n  //   state.allFeatures = state.allFeatures.concat(\n  //     features,\n  //     this.state.config.baseConfig.globalIndicators,\n  //   );\n  // },\n  ADD_NEW_FEATURES(state, features) {\n    state.allFeatures = state.allFeatures.concat(features);\n  },\n  // SET_ALL_DUMMY_LOCATIONS(state, features) {\n  //   state.allFeatures = state.allFeatures.concat(features);\n  // },\n  INIT_FEATURE_FILTER(state, { countries, indicators }) {\n    if (countries) {\n      state.featureFilters.countries = countries;\n    }\n    if (indicators) {\n      state.featureFilters.indicators = indicators;\n    }\n  },\n  SET_FEATURE_FILTER(state, options) {\n    if (!options) return;\n\n    const hasFeature = (f) => Object.keys(options).includes(f);\n\n    if (hasFeature('countries')) {\n      state.featureFilters.countries = options.countries;\n    }\n    if (hasFeature('indicators')) {\n      state.featureFilters.indicators = options.indicators;\n    }\n    if (hasFeature('includeArchived')) {\n      state.featureFilters.includeArchived = options.includeArchived;\n    }\n  },\n  ADD_RESULTS_COUNT(state, { type, count }) {\n    state.resultsCount[type] += count;\n  },\n  SET_SELECTED_AREA(state, area) {\n    state.selectedArea = area;\n  },\n};\nconst actions = {\n  async loadAllEndpoints({ commit, rootState }) {\n    let allFeatures = [];\n    const endpoints = rootState.config.baseConfig.dataEndpoints;\n    for (let ep = 0; ep < endpoints.length; ep += 1) {\n      if (Object.prototype.hasOwnProperty.call(endpoints[ep], 'type')) {\n        let url = endpoints[ep].provider;\n        if (Object.prototype.hasOwnProperty.call(endpoints[ep], 'locationSuffix')) {\n          url += endpoints[ep].locationSuffix;\n        }\n        let F;\n        const endPointIdx = ep;\n        switch (endpoints[ep].type) {\n          case 'geodb':\n            F = await this.dispatch( // eslint-disable-line\n              'features/loadGeoDBEndpoint', { url, endPointIdx },\n            );\n            break;\n          case 'eox':\n            F = await this.dispatch( // eslint-disable-line\n              'features/loadEOXEndpoint', { url, endPointIdx },\n            );\n            break;\n          default:\n            console.log('Endpoint type unknown');\n        }\n        allFeatures = allFeatures.concat(F);\n      }\n    }\n    // Then, add the hardcoded features\n    allFeatures = allFeatures.concat(rootState.config.baseConfig.globalIndicators);\n\n    // Then, if applicable, add the dummy features\n    if (rootState.config.appConfig.displayDummyLocations) {\n      const dummyFeatures = await this.dispatch('features/loadDummyLocations');\n      allFeatures = allFeatures.concat(dummyFeatures);\n    }\n    commit('ADD_NEW_FEATURES', allFeatures);\n  },\n\n  loadEOXEndpoint({ rootState, commit }, { url, endPointIdx }) {\n    return fetch(url, { credentials: 'same-origin' }).then((r) => r.json())\n      .then((data) => {\n        const features = [];\n        const pM = {\n          aoi: 'aoi',\n          aoiID: 'aoiID',\n          lastColorCode: 'lastColorCode',\n          country: 'country',\n          indicator: 'indicator',\n          lastIndicatorValue: 'lastIndicatorValue',\n          lastTime: 'lastTime',\n          lastMeasurement: 'lastMeasurement',\n          siteName: 'siteName',\n          subAoi: 'subAoi',\n          city: 'city',\n          description: 'description',\n          region: 'region',\n          indicatorName: 'indicatorName',\n          lastReferenceValue: 'lastReferenceValue',\n          lastReferenceTime: 'lastReferenceTime',\n          yAxis: 'yAxis',\n          updateFrequency: 'updateFrequency',\n        };\n\n        commit('ADD_RESULTS_COUNT', {\n          type: rootState.config.baseConfig.indicatorsDefinition[data[0][pM.indicator]].class,\n          count: data.length, // individual measurements\n        });\n        // only continue if aoi column is present\n        if (Object.prototype.hasOwnProperty.call(data[0], pM.aoi)) {\n          const wkt = new Wkt();\n          const featureObjs = {};\n          for (let rr = 0; rr < data.length; rr += 1) {\n            // Aggregate data based on location\n            const uniqueKey = `${data[rr][pM.aoi]}_${data[rr][pM.indicator]}`;\n            if (!Object.prototype.hasOwnProperty.call(featureObjs, uniqueKey)) {\n              featureObjs[uniqueKey] = {};\n            } else {\n              // This should not happen\n              console.log(`WARNING: Duplicate uniqueKey ${uniqueKey} in retrieved data.`);\n            }\n            // Create new object with mapped keys to allow integrating data\n            // of multiple endpoints\n            Object.entries(pM).forEach(([key, value]) => {\n              if (Object.prototype.hasOwnProperty.call(data[rr], value)) {\n                if (key === 'subAoi') {\n                  // dummy empty geometry\n                  let ftrs = [];\n                  try {\n                    // assuming sub-aoi does not change over time\n                    if (!['', '/'].includes(data[rr][value])) {\n                      wkt.read(data[rr][value]);\n                      const jsonGeom = wkt.toJson();\n                      // create a feature collection\n                      ftrs = [{\n                        type: 'Feature',\n                        properties: {},\n                        geometry: jsonGeom,\n                      }];\n                    }\n                  } catch (err) {\n                    console.log(`Error parsing subAoi of locations for index ${rr}`);\n                  }\n                  const ftrCol = {\n                    type: 'FeatureCollection',\n                    features: ftrs,\n                  };\n                  featureObjs[uniqueKey][key] = ftrCol;\n                } else if (key === 'lastMeasurement') {\n                  featureObjs[uniqueKey][key] = data[rr][value].length !== 0\n                    ? Number(data[rr][value]) : NaN;\n                } else {\n                  featureObjs[uniqueKey][key] = data[rr][value];\n                }\n              }\n            });\n          }\n          const keys = Object.keys(featureObjs);\n          for (let kk = 0; kk < keys.length; kk += 1) {\n            const coords = keys[kk].split('_')[0].replace(' ', '').split(',').map(Number);\n            featureObjs[keys[kk]].aoi = latLng([coords[0], coords[1]]);\n            featureObjs[keys[kk]].id = globalIdCounter; // to connect indicator & feature\n            featureObjs[keys[kk]].endPointIdx = endPointIdx;\n            features.push({\n              latlng: latLng([coords[0], coords[1]]),\n              id: globalIdCounter,\n              properties: {\n                indicatorObject: featureObjs[keys[kk]],\n              },\n            });\n            globalIdCounter += 1;\n          }\n        }\n        return features;\n      });\n  },\n  loadGeoDBEndpoint({ rootState, commit }, { url, endPointIdx }) {\n    return fetch(url, { credentials: 'same-origin' }).then((r) => r.json())\n      .then((data) => {\n        const features = [];\n        const pM = {\n          aoi: 'aoi',\n          aoiID: 'aoi_id',\n          lastColorCode: 'color_code',\n          country: 'country',\n          geometry: 'geometry',\n          indicator: 'indicator_code',\n          lastIndicatorValue: 'indicator_value',\n          lastTime: 'max_time',\n          lastMeasurement: 'measurement_value',\n          siteName: 'site_name',\n          subAoi: 'sub_aoi',\n          /*\n          city: 'city',\n          description: 'description',\n          indicatorName: 'Indicator Name', // not present\n          lastReferenceTime: 'reference date time [yyyy-mm-ddthh:mm:ss]',\n          lastReferenceValue: 'reference value [float]',\n          region: 'region (optional)',\n          updateFrequency: 'update frequency', // not present\n          // Probably not needed in overview\n          referenceDescription: 'reference description',\n          method: 'method',\n          rule: 'rule',\n          eoSensor: 'eo sensor',\n          inputData: 'input data',\n          */\n        };\n\n        commit('ADD_RESULTS_COUNT', {\n          type: rootState.config.baseConfig.indicatorsDefinition[data[0][pM.indicator]].class,\n          count: data.length, // individual measurements\n        });\n        // only continue if aoi column is present\n        if (Object.prototype.hasOwnProperty.call(data[0], pM.aoi)) {\n          const wkt = new Wkt();\n          const featureObjs = {};\n          for (let rr = 0; rr < data.length; rr += 1) {\n            // Aggregate data based on location\n            const uniqueKey = `${data[rr][pM.aoi]}_${data[rr][pM.indicator]}`;\n            if (!Object.prototype.hasOwnProperty.call(featureObjs, uniqueKey)) {\n              featureObjs[uniqueKey] = {};\n              // TODO: Remove placeholder text\n              featureObjs[uniqueKey].description = 'placeholder description';\n            } else {\n              // This should not happen\n              console.log(`WARNING: Duplicate uniqueKey ${uniqueKey} in retrieved data.`);\n            }\n            // Create new object with mapped keys to allow integrating data\n            // of multiple endpoints\n            Object.entries(pM).forEach(([key, value]) => {\n              if (Object.prototype.hasOwnProperty.call(data[rr], value)) {\n                if (key === 'subAoi') {\n                  // dummy empty geometry\n                  let ftrs = [];\n                  try {\n                    // assuming sub-aoi does not change over time\n                    if (data[rr][value] !== '') {\n                      wkt.read(data[rr][value]);\n                      const jsonGeom = wkt.toJson();\n                      // create a feature collection\n                      ftrs = [{\n                        type: 'Feature',\n                        properties: {},\n                        geometry: jsonGeom,\n                      }];\n                    }\n                  } catch (err) {\n                    console.log(`Error parsing subAoi of locations for index ${rr}`);\n                  }\n                  const ftrCol = {\n                    type: 'FeatureCollection',\n                    features: ftrs,\n                  };\n                  featureObjs[uniqueKey][key] = ftrCol;\n                } else if (key === 'lastMeasurement') {\n                  featureObjs[uniqueKey][key] = data[rr][value].length !== 0\n                    ? Number(data[rr][value]) : NaN;\n                } else {\n                  featureObjs[uniqueKey][key] = data[rr][value];\n                }\n              }\n            });\n          }\n          const keys = Object.keys(featureObjs);\n          for (let kk = 0; kk < keys.length; kk += 1) {\n            const coords = keys[kk].split('_')[0].replace('POINT(', '')\n              .replace(')', '').split(' ').map(Number);\n            featureObjs[keys[kk]].aoi = latLng([coords[1], coords[0]]);\n            featureObjs[keys[kk]].id = globalIdCounter; // to connect indicator & feature\n            featureObjs[keys[kk]].endPointIdx = endPointIdx;\n            features.push({\n              latlng: latLng([coords[1], coords[0]]),\n              id: globalIdCounter,\n              properties: {\n                indicatorObject: featureObjs[keys[kk]],\n              },\n            });\n            globalIdCounter += 1;\n          }\n        }\n        return features;\n      });\n  },\n\n  loadDummyLocations({ rootState }) {\n    return new Promise((resolve) => {\n      this._vm.$papa.parse(rootState.config.appConfig.displayDummyLocations, {\n        download: true,\n        quotes: true,\n        header: true,\n        skipEmptyLines: true,\n        delimiter: ',',\n        complete: (result) => {\n          const { data } = result;\n          const featureObjs = {};\n          for (let rr = 0; rr < data.length; rr += 1) {\n            const uniqueKey = `${data[rr].aoi}_d`;\n            featureObjs[uniqueKey] = data[rr];\n            featureObjs[uniqueKey].indicator = 'd';\n            featureObjs[uniqueKey].indicatorValue = [''];\n            featureObjs[uniqueKey].dummyFeature = true;\n          }\n          const features = [];\n          const keys = Object.keys(featureObjs);\n\n          for (let kk = 0; kk < keys.length; kk += 1) {\n            const coordinates = keys[kk].split('_')[0].split(',').map(Number);\n            featureObjs[keys[kk]].id = globalIdCounter; // to connect indicator & feature\n            features.push({\n              latlng: latLng(coordinates),\n              id: globalIdCounter,\n              properties: {\n                indicatorObject: featureObjs[keys[kk]],\n              },\n            });\n            globalIdCounter += 1;\n          }\n          resolve(features);\n        },\n      });\n    });\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n"]}]}
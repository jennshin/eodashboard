{"remainingRequest":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/babel-loader/lib/index.js!/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/components/IframeButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/components/IframeButton.vue","mtime":1624532486000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/babel-loader/lib/index.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/vue-loader/lib/index.js","mtime":1624878753000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Wb2x1bWVzL1dEX0VsZW1lbnRzXzI1QTFfTWVkaWEvR29vZ2xlIERyaXZlL19fX1B1YmxpYy9fXzIwMjEtSGFja2F0aG9uLUVPRC9lb2Rhc2gtc3RhZ2luZy9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGRpYWxvZ01peGluIGZyb20gJ0AvbWl4aW5zL2RpYWxvZ01peGluJzsKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW2RpYWxvZ01peGluXSwKICBwcm9wczogWydpbmRpY2F0b3JPYmplY3QnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgY29weVN1Y2Nlc3M6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlmcmFtZUNvZGU6IGZ1bmN0aW9uIGlmcmFtZUNvZGUoKSB7CiAgICAgIHJldHVybiAiPGlmcmFtZSBjbGFzcz1cIml0ZW1cIiBzcmM9XCIiLmNvbmNhdCh3aW5kb3cubG9jYXRpb24ub3JpZ2luLCAiL2lmcmFtZT9wb2k9IikuY29uY2F0KHRoaXMuZ2V0TG9jYXRpb25Db2RlKHRoaXMuaW5kaWNhdG9yT2JqZWN0KSkuY29uY2F0KHRoaXMuJHJvdXRlLnF1ZXJ5LnNlbnNvciA/ICImc2Vuc29yPSIuY29uY2F0KHRoaXMuJHJvdXRlLnF1ZXJ5LnNlbnNvcikgOiAnJywgIlwiIHdpZHRoPVwiODAwcHhcIiBoZWlnaHQ9XCI1MDBweFwiIGZyYW1lQm9yZGVyPVwiMFwiIHNjcm9sbD1cIm5vXCIgc3R5bGU9XCJvdmVyZmxvdzpoaWRkZW5cIj48L2lmcmFtZT4iKTsKICAgIH0sCiAgICBzaG93TWFwOiBmdW5jdGlvbiBzaG93TWFwKCkgewogICAgICByZXR1cm4gWydhbGwnXS5pbmNsdWRlcyh0aGlzLmluZGljYXRvck9iamVjdC5jb3VudHJ5KSB8fCBBcnJheS5pc0FycmF5KHRoaXMuaW5kaWNhdG9yT2JqZWN0LmNvdW50cnkpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY29weTogZnVuY3Rpb24gY29weShzKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHMpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpcy5jb3B5U3VjY2VzcyA9IHRydWU7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["IframeButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,OAAA,WAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,WAAA,CADA;AAEA,EAAA,KAAA,EAAA,CAAA,iBAAA,CAFA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAAA,GAHA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,oDAAA,MAAA,CAAA,QAAA,CAAA,MAAA,yBAAA,KAAA,eAAA,CAAA,KAAA,eAAA,CAAA,SAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,qBAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,IAAA,EAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,KAAA,eAAA,CAAA,OAAA,KAAA,KAAA,CAAA,OAAA,CAAA,KAAA,eAAA,CAAA,OAAA,CAAA;AACA;AANA,GAPA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,CADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CADA;;AAAA;AAEA,gBAAA,KAAA,CAAA,WAAA,GAAA,IAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAJA;AAfA,CAAA","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"500\"\n  >\n    <template v-slot:activator=\"{}\">\n      <v-btn\n        color=\"primary\"\n        text\n        small\n        @click=\"dialog = true\"\n      >\n        <template v-if=\"showMap\">\n          <v-icon left>mdi-map-search</v-icon>\n          embed map\n        </template>\n        <template v-else>\n          <v-icon left>mdi-poll-box</v-icon>\n          embed chart\n        </template>\n      </v-btn>\n    </template>\n\n    <v-card>\n      <v-card-title class=\"headline primary white--text\">\n        Embed this chart into your website\n      </v-card-title>\n\n      <v-card-text class=\"py-5\">\n        Copy and paste this code into your HTML file:\n        <code class=\"pa-3\">{{ iframeCode }}\n        </code>\n        <div class=\"d-flex align-center justify-end pt-3\">\n          <v-expand-transition>\n            <div v-if=\"copySuccess\" class=\"success--text mr-3\">\n            <v-icon\n              color=\"success\"\n              left\n            >mdi-clipboard-check-outline</v-icon>\n              <small>copied!</small>\n            </div>\n          </v-expand-transition>\n          <v-btn\n            small\n            text\n            @click=\"copy(iframeCode)\"\n          >\n            <v-icon left>mdi-content-copy</v-icon>\n            copy to clipboard\n          </v-btn>\n        </div>\n      </v-card-text>\n\n      <v-divider></v-divider>\n\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          color=\"primary\"\n          text\n          @click=\"dialog = false\"\n        >\n          Close\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport dialogMixin from '@/mixins/dialogMixin';\n\nexport default {\n  mixins: [dialogMixin],\n  props: ['indicatorObject'],\n  data: () => ({\n    dialog: false,\n    copySuccess: false,\n  }),\n  computed: {\n    iframeCode() {\n      return `<iframe class=\"item\" src=\"${window.location.origin}/iframe?poi=${this.getLocationCode(this.indicatorObject)}${this.$route.query.sensor ? `&sensor=${this.$route.query.sensor}` : ''}\" width=\"800px\" height=\"500px\" frameBorder=\"0\" scroll=\"no\" style=\"overflow:hidden\"></iframe>`;\n    },\n    showMap() {\n      return ['all'].includes(this.indicatorObject.country) || Array.isArray(this.indicatorObject.country);\n    },\n  },\n  methods: {\n    async copy(s) {\n      await navigator.clipboard.writeText(s);\n      this.copySuccess = true;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}
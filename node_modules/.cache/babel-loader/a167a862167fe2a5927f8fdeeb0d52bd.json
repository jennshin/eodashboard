{"remainingRequest":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/babel-loader/lib/index.js!/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/src/App.vue","mtime":1624532486000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/babel-loader/lib/index.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/vue-loader/lib/index.js","mtime":1624878753000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable global-require -->\n<template>\n  <v-app id=\"inspire\" :class=\"`fill-height brand-${appConfig.id}`\">\n    <div v-if=\"comingSoon\"\n      class=\"fill-height d-flex justify-center align-center\"\n      :style=\"{background: $vuetify.theme.themes[theme].background}\"\n    >\n      <countdown v-if=\"countDownTime\" :time=\"countDownTime\" @end=\"comingSoon = false\">\n        <template slot-scope=\"props\">\n          <div class=\"text-center\">\n            <img src=\"../public/data/trilateral/Countdown.png\"\n              style=\"width: 70%; max-width: 100vw\" class=\"mb-5\" />\n            <h1 class=\"display-2 primary--text\">\n              <span v-if=\"props.days > 0\">{{ props.days }} days, </span>{{ props.hours }} hours,\n              <br v-if=\"$vuetify.breakpoint.xsOnly\" />{{ props.minutes }} minutes,\n              <br v-if=\"$vuetify.breakpoint.xsOnly\" />{{ props.seconds }} seconds\n            </h1>\n          </div>\n        </template>\n      </countdown>\n    </div>\n    <template v-else>\n      <router-view />\n      <cookie-law\n        v-if=\"showCookieNotice\" @accept=\"acceptCookies\"\n        :theme=\"$vuetify.theme.dark ? 'blood-orange' : 'base'\"\n      >\n        <div slot-scope=\"props\" style=\"width: 100%;\">\n          <div class=\"d-flex align-center justify-center mb-5\">\n            <small class=\"mb-0\">\n              We use cookies which are essential for you to access our website and/or\n              to provide you with our services\n              and allow us to measure and improve the\n              performance of our website. <br v-if=\"$vuetify.breakpoint.xsOnly\" />\n              <a href=\"/privacy\" target=\"_blank\">Learn more</a>.\n            </small>\n          </div>\n          <div class=\"text-center\">\n            <v-btn\n              color=\"primary\"\n              :block=\"$vuetify.breakpoint.xsOnly\"\n              :class=\"$vuetify.breakpoint.smAndUp ? 'mr-5' : 'mb-5'\"\n              @click=\"props.accept\"\n            >\n              <v-icon left>mdi-checkbox-marked-circle-outline</v-icon>\n              Accept all cookies\n            </v-btn>\n            <v-btn\n              color=\"primary\"\n              outlined\n              :block=\"$vuetify.breakpoint.xsOnly\"\n              @click=\"props.close\"\n            >\n              <v-icon left>mdi-cancel</v-icon>\n              Accept essential only\n            </v-btn>\n          </div>\n        </div>\n      </cookie-law>\n      <alert />\n    </template>\n  </v-app>\n</template>\n\n<script>\n// Utilities\nimport {\n  mapState,\n  mapGetters,\n} from 'vuex';\nimport CookieLaw from 'vue-cookie-law';\nimport { loadIndicatorData } from '@/utils';\n\nimport axios from 'axios';\nimport { Wkt } from 'wicket';\n\nimport Alert from './components/Alert.vue';\n\nconst wkt = new Wkt();\n\nexport default {\n  components: {\n    CookieLaw,\n    Alert,\n  },\n  data: () => ({\n    showPrivacyDialog: false,\n    comingSoon: null,\n    countDownTime: null,\n  }),\n  computed: {\n    ...mapState('config', [\n      'appConfig',\n      'baseConfig',\n    ]),\n    ...mapGetters('features', [\n      'getIndicators',\n      'getCountryItems',\n    ]),\n    showCookieNotice() {\n      return this.$route.path !== '/iframe';\n    },\n    theme() {\n      return (this.$vuetify.theme.dark) ? 'dark' : 'light';\n    },\n  },\n  created() {\n    if (Object.prototype.hasOwnProperty.call(this.appConfig, 'countDownTimer')\n      && this.appConfig.countDownMatch.includes(document.domain)) {\n      this.comingSoon = true;\n      this.checkComingSoon();\n    } else {\n      this.comingSoon = false;\n    }\n  },\n  mounted() {\n    // Listen for features added, and select if poi in query\n    this.$store.subscribe((mutation) => {\n      if (mutation.type === 'features/ADD_NEW_FEATURES') {\n        // Read route query and set selected poi\n        const { poi } = this.$route.query;\n        let selectedFeature = null;\n        if (poi && poi.includes('-')) {\n          const aoiId = poi.split('-')[0];\n          const indicatorCode = poi.split('-')[1];\n          selectedFeature = this.$store.state.features.allFeatures.find((f) => {\n            const { indicatorObject } = f.properties;\n            return indicatorObject.aoiID === aoiId\n              && indicatorObject.indicator === indicatorCode;\n          });\n        }\n        this.$store.commit('indicators/SET_SELECTED_INDICATOR', selectedFeature ? selectedFeature.properties.indicatorObject : null);\n        this.$store.commit('indicators/SET_SELECTED_INDICATOR', selectedFeature ? selectedFeature.properties.indicatorObject : null);\n\n        // Read route query and validate country and indicator if in query\n        const { country } = this.$route.query;\n        const { indicator } = this.$route.query;\n        // validate query for country - need to be among available\n        const selectedCountry = this.getCountryItems\n          .map((item) => item.code).flat().find((f) => f === country);\n        let selectedIndicator = this.getIndicators\n          .map((item) => item.code).find((f) => f === indicator);\n        // If selectedIndicator is undefined and indicator has been provided\n        // it could be an archived indicator so we activate\n        if (typeof indicator !== 'undefined' && typeof selectedIndicator === 'undefined') {\n          this.$store.commit('features/SET_FEATURE_FILTER', { includeArchived: true });\n          selectedIndicator = this.getIndicators\n            .map((item) => item.code).find((f) => f === indicator);\n        }\n        this.$store.commit('features/INIT_FEATURE_FILTER', {\n          countries: selectedCountry,\n          indicators: selectedIndicator,\n        });\n      }\n\n      // Url query replacement\n      if (mutation.type === 'features/SET_FEATURE_FILTER') {\n        if (Array.isArray(mutation.payload.countries) && mutation.payload.countries.length === 0) {\n          // Global\n          const query = Object.assign({}, this.$route.query); // eslint-disable-line\n          delete query.country;\n          this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n          this.trackEvent('filters', 'select_country_filter', 'Global');\n        } else if (typeof mutation.payload.countries === 'string') {\n          // Country\n          this.$router.replace({ query: Object.assign({}, this.$route.query, { country: mutation.payload.countries }) }).catch(err => {}); // eslint-disable-line\n          this.trackEvent('filters', 'select_country_filter', mutation.payload.countries);\n        }\n        if (Array.isArray(mutation.payload.indicators)) {\n          if (mutation.payload.indicators.length === 0) {\n            // Reset\n            const query = Object.assign({}, this.$route.query); // eslint-disable-line\n            delete query.indicator;\n            this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n            this.trackEvent('filters', 'select_indicator_filter', 'all');\n          } else {\n            // Single\n            this.$router.replace({ query: Object.assign({}, this.$route.query, { indicator: mutation.payload.indicators[0] }) }).catch(err => {}); // eslint-disable-line\n            this.trackEvent('filters', 'select_indicator_filter', mutation.payload.indicators[0]);\n          }\n        }\n      }\n\n      if (mutation.type === 'features/SET_SELECTED_AREA') {\n        if (mutation.payload) {\n          const area = wkt.read(JSON.stringify(mutation.payload)).write();\n          this.$router.replace({ query: Object.assign({}, this.$route.query, { area, }) }).catch(err => {}); // eslint-disable-line\n        } else {\n          const query = Object.assign({}, this.$route.query); // eslint-disable-line\n          delete query.area;\n          this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n        }\n      }\n\n      if (['indicators/SET_SELECTED_INDICATOR'].includes(mutation.type)) {\n        if (mutation.payload && !( // If dummy feature selected ignore\n          Object.prototype.hasOwnProperty.call(mutation.payload, 'dummyFeature')\n          && mutation.payload.dummyFeature)) {\n          this.loadIndicatorData(mutation.payload);\n          this.$router.replace({ query: Object.assign({}, this.$route.query, { poi: this.getLocationCode(mutation.payload) }) }).catch(err => {}); // eslint-disable-line\n          this.trackEvent('indicators', 'select_indicator', this.getLocationCode(mutation.payload));\n          this.$store.commit('indicators/CUSTOM_AREA_INDICATOR_LOAD_FINISHED', null);\n        } else {\n          const query = Object.assign({}, this.$route.query); // eslint-disable-line\n          delete query.poi;\n          this.$router.replace({ query }).catch(err => {}); // eslint-disable-line\n          this.$store.commit('indicators/INDICATOR_LOAD_FINISHED', null);\n          this.$store.commit('indicators/CUSTOM_AREA_INDICATOR_LOAD_FINISHED', null);\n          this.trackEvent('indicators', 'deselect_indicator');\n        }\n      }\n    });\n    this.setAreaFromQuery();\n  },\n  methods: {\n    async checkComingSoon() {\n      const currentTime = await this.getCurrentTime();\n      this.countDownTime = new Date(this.appConfig.countDownTimer) - currentTime;\n      this.comingSoon = this.countDownTime > 0;\n    },\n    async getCurrentTime() {\n      const response = await axios.get('/');\n      return new Date(response.headers.date);\n    },\n    async loadIndicatorData(payload) {\n      const indicatorObject = await loadIndicatorData(this.baseConfig, payload);\n      if (indicatorObject) {\n        this.$store.commit('indicators/INDICATOR_LOAD_FINISHED', indicatorObject);\n      }\n    },\n    acceptCookies() {\n      if (this.$matomo) {\n        this.$matomo.rememberConsentGiven();\n      }\n    },\n    setAreaFromQuery() {\n      const { area } = this.$route.query;\n      // simply validate format of area from query\n      if (typeof area === 'string') {\n        const validArea = wkt.read(area);\n        if (validArea) {\n          // save as JSON\n          this.$store.commit('features/SET_SELECTED_AREA', validArea.toJson());\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"~@/scss/global.scss\";\n</style>\n"],"sourceRoot":"src"}]}
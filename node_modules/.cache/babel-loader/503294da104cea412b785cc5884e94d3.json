{"remainingRequest":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/babel-loader/lib/index.js!/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/utils.js","dependencies":[{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/utils.js","mtime":1624532486000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/babel-loader/lib/index.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/node_modules/eslint-loader/index.js","mtime":1624878752000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Volumes/WD_Elements_25A1_Media/Google Drive/___Public/__2021-Hackathon-EOD/eodash-staging/app/src/utils.js"],"names":["DateTime","axios","padLeft","str","pad","size","out","length","shTimeFunction","date","tempDate","Array","isArray","dateObj","fromISO","defaultFormat","alternativeFormat","second","hour","minute","nextDay","plus","days","toFormat","shS2TimeFunction","dateFuture","minutes","datePast","minus","template","templateRe","data","replace","stri","key","value","undefined","Error","loadIndicatorData","baseConfig","payload","Object","prototype","hasOwnProperty","call","dataLoadFinished","indicatorObject","url","dataPath","aoiID","indicator","join","get","credentials","response","mapping","colorCode","dataProvider","eoSensor","indicatorValue","inputData","measurement","referenceTime","referenceValue","time","siteName","parsedData","i","entries","forEach","val","includes","split","map","Number","NaN","push"],"mappings":"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","sourcesContent":["import { DateTime } from 'luxon';\nimport axios from 'axios';\n\nexport function padLeft(str, pad, size) {\n  let out = str;\n  while (out.length < size) {\n    out = pad + str;\n  }\n  return out;\n}\n\nexport function shTimeFunction(date) {\n  let tempDate = date;\n  if (!Array.isArray(tempDate)) {\n    tempDate = [tempDate];\n  }\n  const dateObj = DateTime.fromISO(tempDate[0]);\n  const defaultFormat = \"yyyy-MM-dd'T'HH:mm:ss\";\n  const alternativeFormat = 'yyyy-MM-dd';\n  if (dateObj.second === 0 && dateObj.hour === 0 && dateObj.minute === 0) {\n    // if only day input, format as an interval to next day\n    const nextDay = dateObj.plus({ days: 1 });\n    return `${dateObj.toFormat(alternativeFormat)}/${nextDay.toFormat(alternativeFormat)}`;\n  }\n  // otherwise return single date with full format\n  return `${dateObj.toFormat(defaultFormat)}/${dateObj.toFormat(defaultFormat)}`;\n}\n\nexport function shS2TimeFunction(date) {\n  // modifies the start and end by 1 hour to past and future\n  // this is done to fix mismatch between S2 filename\n  // and metadata time resulting in transparent image\n  let tempDate = date;\n  if (!Array.isArray(tempDate)) {\n    tempDate = [tempDate];\n  }\n  const dateObj = DateTime.fromISO(tempDate[0]);\n  const dateFuture = dateObj.plus({ minutes: 45 });\n  const datePast = dateObj.minus({ minutes: 45 });\n  const defaultFormat = \"yyyy-MM-dd'T'HH:mm:ss\";\n  return `${datePast.toFormat(defaultFormat)}/${dateFuture.toFormat(defaultFormat)}`;\n}\n\nexport function template(templateRe, str, data) {\n  return str.replace(templateRe, (stri, key) => {\n    let value = data[key];\n\n    if (value === undefined) {\n      throw new Error(`No value provided for variable ${stri}`);\n    } else if (typeof value === 'function') {\n      value = value(data);\n    }\n    return value;\n  });\n}\n\nexport async function loadIndicatorData(baseConfig, payload) {\n  let indicatorObject;\n\n  // Check if data was already loaded\n  if (Object.prototype.hasOwnProperty.call(payload, 'dataLoadFinished')\n    && payload.dataLoadFinished) {\n    indicatorObject = payload;\n  } else {\n    // Start loading of data from indicator\n    const url = `${baseConfig.dataPath}${[payload.aoiID, payload.indicator].join('-')}.json`;\n    // Fetch location data\n    const response = await axios.get(url, { credentials: 'same-origin' });\n    if (response) {\n      const { data } = response;\n      indicatorObject = payload;\n      // Set data to indicator object\n      // Convert data first\n      const mapping = {\n        colorCode: 'color_code',\n        dataProvider: 'data_provider',\n        eoSensor: 'eo_sensor',\n        indicatorValue: 'indicator_value',\n        inputData: 'input_data',\n        measurement: 'measurement_value',\n        referenceTime: 'reference_time',\n        referenceValue: 'reference_value',\n        time: 'time',\n        siteName: 'site_name_arr',\n      };\n      const parsedData = {};\n      for (let i = 0; i < data.length; i += 1) {\n        Object.entries(mapping).forEach(([key, value]) => {\n          let val = data[i][value];\n          if (Object.prototype.hasOwnProperty.call(parsedData, key)) {\n            // If key already there add element to array\n            if (['time', 'referenceTime'].includes(key)) {\n              val = DateTime.fromISO(val);\n            } else if (['measurement'].includes(key)) {\n              if (val.length > 0) {\n                // We have a special array case here\n                if (val[0] === '[') {\n                  val = val.replace(/[[\\]']+/g, '').split(',').map(Number);\n                } else {\n                  val = Number(val);\n                }\n              } else {\n                val = Number.NaN;\n              }\n            }\n            parsedData[key].push(val);\n          } else {\n            // If not then set element as array\n            if (['time', 'referenceTime'].includes(key)) {\n              val = DateTime.fromISO(val);\n            } else if (['measurement'].includes(key)) {\n              if (val.length > 0) {\n                // We have a special array case here\n                if (val[0] === '[') {\n                  val = val.replace(/[[\\]']+/g, '').split(',').map(Number);\n                } else {\n                  val = Number(val);\n                }\n              } else {\n                val = Number.NaN;\n              }\n            }\n            parsedData[key] = [val];\n          }\n        });\n      }\n      Object.entries(parsedData).forEach(([key, value]) => {\n        indicatorObject[key] = value;\n      });\n      indicatorObject.dataLoadFinished = true;\n    }\n  }\n  return indicatorObject;\n}\n"]}]}
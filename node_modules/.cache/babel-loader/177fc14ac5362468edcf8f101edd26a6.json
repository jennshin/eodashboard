{"remainingRequest":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/babel-loader/lib/index.js!/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/src/store/modules/indicators.js","dependencies":[{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/src/store/modules/indicators.js","mtime":1624532486000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/babel-loader/lib/index.js","mtime":1624878747000},{"path":"/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/node_modules/eslint-loader/index.js","mtime":1624878752000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Wb2x1bWVzL1dEX0VsZW1lbnRzXzI1QTFfTWVkaWEvR29vZ2xlIERyaXZlL19HaXRodWIvZ2l0aHViX3VwbG9hZC9lb2Rhc2hib2FyZC9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVm9sdW1lcy9XRF9FbGVtZW50c18yNUExX01lZGlhL0dvb2dsZSBEcml2ZS9fR2l0aHViL2dpdGh1Yl91cGxvYWQvZW9kYXNoYm9hcmQvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwoKLyogZXNsaW50IG5vLXNoYWRvdzogWyJlcnJvciIsIHsgImFsbG93IjogWyJzdGF0ZSJdIH1dICovCnZhciBzdGF0ZSA9IHsKICBzZWxlY3RlZEluZGljYXRvcjogbnVsbCwKICBjdXN0b21BcmVhSW5kaWNhdG9yOiBudWxsCn07CnZhciBnZXR0ZXJzID0gewogIGdldEluZGljYXRvckZpbHRlcmVkSW5wdXREYXRhOiBmdW5jdGlvbiBnZXRJbmRpY2F0b3JGaWx0ZXJlZElucHV0RGF0YShzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChzZWxlY3RlZEluZGljYXRvcikgewogICAgICB2YXIgaW5kaWNhdG9yID0gc2VsZWN0ZWRJbmRpY2F0b3IgfHwgX29iamVjdFNwcmVhZCh7fSwgc3RhdGUuc2VsZWN0ZWRJbmRpY2F0b3IpOyAvLyBmaWx0ZXIgb3V0IHJvd3Mgd2hpY2ggaGF2ZSBlbXB0eSAiSW5wdXQgRGF0YSIKCgogICAgICB2YXIgbWFzayA9IGluZGljYXRvci5pbnB1dERhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0gIT09ICcnOwogICAgICB9KTsgLy8gZmlsdGVyaW5nIG9ubHkgYXJyYXlzIHdpdGggbW9yZSB0aGFuIDEgZWxlbWVudCB0byBub3QgZmFpbCBvbiBJbnB1dCBEYXRhOlsndmFsdWUnXSBzaG9ydGN1dAoKICAgICAgaWYgKG1hc2subGVuZ3RoID4gMSkgewogICAgICAgIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMoaW5kaWNhdG9yKTsgX2kgPCBfT2JqZWN0JGVudHJpZXMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICB2YXIgX09iamVjdCRlbnRyaWVzJF9pID0gX3NsaWNlZFRvQXJyYXkoX09iamVjdCRlbnRyaWVzW19pXSwgMiksCiAgICAgICAgICAgICAga2V5ID0gX09iamVjdCRlbnRyaWVzJF9pWzBdLAogICAgICAgICAgICAgIHZhbHVlID0gX09iamVjdCRlbnRyaWVzJF9pWzFdOwoKICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUKICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggPiAxKSB7CiAgICAgICAgICAgIGluZGljYXRvcltrZXldID0gdmFsdWUuZmlsdGVyKGZ1bmN0aW9uIChpdGVtLCBpKSB7CiAgICAgICAgICAgICAgcmV0dXJuIG1hc2tbaV07CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGluZGljYXRvcjsKICAgIH07CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIFNFVF9TRUxFQ1RFRF9JTkRJQ0FUT1I6IGZ1bmN0aW9uIFNFVF9TRUxFQ1RFRF9JTkRJQ0FUT1IoKSB7fSwKICBJTkRJQ0FUT1JfTE9BRF9GSU5JU0hFRDogZnVuY3Rpb24gSU5ESUNBVE9SX0xPQURfRklOSVNIRUQoc3RhdGUsIGluZGljYXRvck9iamVjdCkgewogICAgc3RhdGUuc2VsZWN0ZWRJbmRpY2F0b3IgPSBpbmRpY2F0b3JPYmplY3Q7CiAgfSwKICBTRVRfQ1VTVE9NX0FSRUFfSU5ESUNBVE9SOiBmdW5jdGlvbiBTRVRfQ1VTVE9NX0FSRUFfSU5ESUNBVE9SKCkge30sCiAgQ1VTVE9NX0FSRUFfSU5ESUNBVE9SX0xPQURfRklOSVNIRUQ6IGZ1bmN0aW9uIENVU1RPTV9BUkVBX0lORElDQVRPUl9MT0FEX0ZJTklTSEVEKHN0YXRlLCBpbmRpY2F0b3JPYmplY3QpIHsKICAgIHN0YXRlLmN1c3RvbUFyZWFJbmRpY2F0b3IgPSBpbmRpY2F0b3JPYmplY3Q7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHt9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/Volumes/WD_Elements_25A1_Media/Google Drive/_Github/github_upload/eodashboard/app/src/store/modules/indicators.js"],"names":["state","selectedIndicator","customAreaIndicator","getters","getIndicatorFilteredInputData","indicator","mask","inputData","map","item","length","Object","entries","key","value","Array","isArray","filter","i","mutations","SET_SELECTED_INDICATOR","INDICATOR_LOAD_FINISHED","indicatorObject","SET_CUSTOM_AREA_INDICATOR","CUSTOM_AREA_INDICATOR_LOAD_FINISHED","actions","namespaced"],"mappings":";;;;;;AAAA;AAEA,IAAMA,KAAK,GAAG;AACZC,EAAAA,iBAAiB,EAAE,IADP;AAEZC,EAAAA,mBAAmB,EAAE;AAFT,CAAd;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,6BAA6B,EAAE,uCAACJ,KAAD;AAAA,WAAW,UAACC,iBAAD,EAAuB;AAC/D,UAAMI,SAAS,GAAGJ,iBAAiB,sBAASD,KAAK,CAACC,iBAAf,CAAnC,CAD+D,CAE/D;;;AACA,UAAMK,IAAI,GAAGD,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAwB,UAACC,IAAD;AAAA,eAAUA,IAAI,KAAK,EAAnB;AAAA,OAAxB,CAAb,CAH+D,CAI/D;;AACA,UAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AACnB,2CAAyBC,MAAM,CAACC,OAAP,CAAeP,SAAf,CAAzB,qCAAoD;AAA/C;AAAA,cAAKQ,GAAL;AAAA,cAAUC,KAAV;;AAAiD;AACpD,cAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBA,KAAK,CAACJ,MAAN,GAAe,CAA3C,EAA8C;AAC5CL,YAAAA,SAAS,CAACQ,GAAD,CAAT,GAAiBC,KAAK,CAACG,MAAN,CAAa,UAACR,IAAD,EAAOS,CAAP;AAAA,qBAAaZ,IAAI,CAACY,CAAD,CAAjB;AAAA,aAAb,CAAjB;AACD;AACF;AACF;;AACD,aAAOb,SAAP;AACD,KAb8B;AAAA;AADjB,CAAhB;AAiBA,IAAMc,SAAS,GAAG;AAChBC,EAAAA,sBADgB,oCACS,CACxB,CAFe;AAGhBC,EAAAA,uBAHgB,mCAGQrB,KAHR,EAGesB,eAHf,EAGgC;AAC9CtB,IAAAA,KAAK,CAACC,iBAAN,GAA0BqB,eAA1B;AACD,GALe;AAMhBC,EAAAA,yBANgB,uCAMY,CAC3B,CAPe;AAQhBC,EAAAA,mCARgB,+CAQoBxB,KARpB,EAQ2BsB,eAR3B,EAQ4C;AAC1DtB,IAAAA,KAAK,CAACE,mBAAN,GAA4BoB,eAA5B;AACD;AAVe,CAAlB;AAaA,IAAMG,OAAO,GAAG,EAAhB;AAGA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEb1B,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbgB,EAAAA,SAAS,EAATA,SAJa;AAKbM,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["/* eslint no-shadow: [\"error\", { \"allow\": [\"state\"] }] */\n\nconst state = {\n  selectedIndicator: null,\n  customAreaIndicator: null,\n};\n\nconst getters = {\n  getIndicatorFilteredInputData: (state) => (selectedIndicator) => {\n    const indicator = selectedIndicator || { ...state.selectedIndicator };\n    // filter out rows which have empty \"Input Data\"\n    const mask = indicator.inputData.map((item) => item !== '');\n    // filtering only arrays with more than 1 element to not fail on Input Data:['value'] shortcut\n    if (mask.length > 1) {\n      for (let [key, value] of Object.entries(indicator)) { // eslint-disable-line\n        if (Array.isArray(value) && value.length > 1) {\n          indicator[key] = value.filter((item, i) => mask[i]);\n        }\n      }\n    }\n    return indicator;\n  },\n};\n\nconst mutations = {\n  SET_SELECTED_INDICATOR() {\n  },\n  INDICATOR_LOAD_FINISHED(state, indicatorObject) {\n    state.selectedIndicator = indicatorObject;\n  },\n  SET_CUSTOM_AREA_INDICATOR() {\n  },\n  CUSTOM_AREA_INDICATOR_LOAD_FINISHED(state, indicatorObject) {\n    state.customAreaIndicator = indicatorObject;\n  },\n};\n\nconst actions = {\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n"]}]}
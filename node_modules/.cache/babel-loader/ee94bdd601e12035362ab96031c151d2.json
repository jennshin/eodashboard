{"remainingRequest":"/Users/8ps/Downloads/eodash-staging/app/node_modules/babel-loader/lib/index.js!/Users/8ps/Downloads/eodash-staging/app/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/Users/8ps/Downloads/eodash-staging/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/8ps/Downloads/eodash-staging/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/8ps/Downloads/eodash-staging/app/src/components/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/8ps/Downloads/eodash-staging/app/src/components/Map.vue","mtime":1624532486000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <l-map\n    ref=\"map\"\n    style=\"height: 100%; width: 100%; background: #cad2d3; z-index: 1\"\n    :options=\"defaultMapOptions\"\n    :zoom=\"zoom\"\n    :center=\"center\"\n    :maxZoom=\"maxMapZoom\"\n    :minMapZoom=\"minMapZoom\"\n    @update:zoom=\"zoomUpdated\"\n    @update:center=\"centerUpdated\"\n    @update:bounds=\"boundsUpdated\"\n  >\n    <l-control-attribution position=\"bottomright\" prefix=''></l-control-attribution>\n    <l-control-layers position=\"topright\"></l-control-layers>\n    <l-control-zoom position=\"topright\"></l-control-zoom>\n    <LTileLayer\n      v-for=\"layer in baseLayers.filter(b => b.protocol === 'xyz')\"\n      :key=\"layer.name\"\n      v-bind=\"layer\"\n      layer-type=\"base\"\n      :opacity=\"opacityTerrain[zoom]\"\n      :options=\"layerOptions(null, layer)\"\n    >\n    </LTileLayer>\n    <LWMSTileLayer\n      v-for=\"layer in baseLayers.filter(b => b.protocol === 'WMS')\"\n      :key=\"layer.name\"\n      v-bind=\"layer\"\n      :options=\"layerOptions(null, layer)\"\n      layer-type=\"base\"\n    >\n    </LWMSTileLayer>\n    <l-geo-json\n    :geojson=\"countriesJson\"\n    :optionsStyle=\"countriesStyle\"\n    name=\"Country vectors\"\n    layer-type=\"overlay\"\n    >\n    </l-geo-json>\n    <l-geo-json\n    ref=\"subaoiLayer\"\n    :geojson=\"subAoi\"\n    :optionsStyle=\"subAoiStyle\">\n    </l-geo-json>\n    <LTileLayer\n      v-for=\"layer in overlayLayers.filter(b => b.protocol === 'xyz')\"\n      :key=\"layer.name\"\n      v-bind=\"layer\"\n      layer-type=\"overlay\"\n      :opacity=\"opacityOverlay[zoom]\"\n      :options=\"layerOptions(null, layer)\"\n    >\n    </LTileLayer>\n    <LWMSTileLayer\n      v-for=\"layer in overlayLayers.filter(b => b.protocol === 'WMS')\"\n      v-bind=\"layer\"\n      :key=\"layer.name\"\n      :options=\"layerOptions(null, layer)\"\n      :opacity=\"opacityOverlay[zoom]\"\n      layer-type=\"overlay\"\n    >\n    </LWMSTileLayer>\n    <l-marker-cluster ref=\"clusterLayer\" :options=\"clusterOptions\">\n      <l-marker v-for=\"(feature) in getGroupedFeatures.filter((f) => f.latlng)\"\n        :key=\"feature.id\"\n        ref=\"markers\"\n        :lat-lng=\"feature.latlng\"\n        :name='`${getLocationCode(feature.properties.indicatorObject)}`'\n        @click=\"selectIndicator(feature)\"\n      >\n        <l-icon\n          :icon-anchor=\"currentSelected === getLocationCode(feature.properties.indicatorObject)\n            ? [18, 18]\n            : [14, 14]\"\n          style=\"outline: none;\"\n        >\n          <div\n            :style=\"`display: flex; align-items: center;\n              justify-content: center;\n              border-radius: 50%;\n              border: 2px ${currentSelected ===\n                getLocationCode(feature.properties.indicatorObject)\n                  ? 'dashed var(--v-primary-base)'\n                  : 'solid white'};\n              width: ${currentSelected ===\n                getLocationCode(feature.properties.indicatorObject) ? '36px' : '28px'};\n              height: ${currentSelected ===\n                getLocationCode(feature.properties.indicatorObject) ? '36px' : '28px'};\n              background-color: ${getColor(feature.properties.indicatorObject)}`\"\n          >\n              <v-icon\n                color=\"white\"\n                class=\"pa-1\"\n                icon-url=\"/test\"\n                :small=\"currentSelected !== getLocationCode(feature.properties.indicatorObject)\"\n              >\n                {{ baseConfig.indicatorClassesIcons[baseConfig\n                    .indicatorsDefinition[feature.properties.indicatorObject.indicator].class]\n                    ? baseConfig.indicatorClassesIcons[baseConfig\n                      .indicatorsDefinition[feature.properties.indicatorObject.indicator].class]\n                    : 'mdi-lightbulb-on-outline'}}\n              </v-icon>\n          </div>\n        </l-icon>\n        <l-tooltip class=\"tooltip text-center\" :options=\"{ direction: 'top' }\">\n          <p class=\"ma-0\">\n            <strong>{{ feature.properties.indicatorObject.city }}</strong>\n          </p>\n            <p class=\"ma-0\" v-if=\"baseConfig.indicatorsDefinition[\n              feature.properties.indicatorObject.indicator\n              ].indicatorOverwrite\">\n              <strong>{{ baseConfig.indicatorsDefinition[\n                feature.properties.indicatorObject.indicator\n              ].indicatorOverwrite}}\n              </strong>\n            </p>\n            <p class=\"ma-0\" v-else>\n              <strong>{{ feature.properties.indicatorObject.description }}</strong>\n            </p>\n            <p\n              class=\"ma-0\"\n            >\n              {{ formatLabel(feature) }}\n            </p>\n        </l-tooltip>\n      </l-marker>\n    </l-marker-cluster>\n  </l-map>\n</template>\n\n<script>\nimport {\n  mapGetters,\n  mapState,\n} from 'vuex';\n\nimport {\n  geoJson, Point, DivIcon, featureGroup,\n} from 'leaflet';\nimport {\n  LMap, LTileLayer, LWMSTileLayer, LGeoJson, LMarker, LIcon, LTooltip,\n  LControlLayers, LControlAttribution, LControlZoom,\n} from 'vue2-leaflet';\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.css'; // eslint-disable-line import/no-extraneous-dependencies\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'; // eslint-disable-line import/no-extraneous-dependencies\nimport 'leaflet-mouse-position';\n\nimport countries from '@/assets/countries.json';\n\nexport default {\n  components: {\n    LMap,\n    LTileLayer,\n    LWMSTileLayer,\n    LGeoJson,\n    LMarker,\n    LIcon,\n    LTooltip,\n    LControlLayers,\n    LControlAttribution,\n    LControlZoom,\n    'l-marker-cluster': Vue2LeafletMarkerCluster,\n  },\n  data() {\n    return {\n      map: null,\n      minMapZoom: 3,\n      zoom: 3,\n      maxMapZoom: 14,\n      center: [55, 10],\n      bounds: null,\n      currentSelected: null,\n      currentSelectedIndex: null,\n      subAoi: null,\n      defaultMapOptions: {\n        attributionControl: false,\n        zoomControl: false,\n      },\n      opacityTerrain: [1],\n      opacityOverlay: [0, 0, 0, 0, 0, 0, 0.4, 0.4, 0.8, 0.8, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9],\n      opacityCountries: [1, 1, 1, 1, 0.7, 0.7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    };\n  },\n  computed: {\n    ...mapGetters('features', ['getGroupedFeatures']),\n    ...mapState('config', ['appConfig', 'baseConfig']),\n    baseLayers() {\n      return this.baseConfig.baseLayersLeftMap;\n    },\n    overlayLayers() {\n      return this.baseConfig.overlayLayersLeftMap;\n    },\n    countriesJson() {\n      return countries;\n    },\n    clusterOptions() {\n      return {\n        maxClusterRadius: 40,\n        animate: false,\n        // zoomToBoundsOnClick: false,\n        iconCreateFunction: function (cluster) { // eslint-disable-line func-names\n          // left as default\n          let selCluster = null;\n          if (this.currentSelected !== null && this.$refs.clusterLayer) {\n            const selectedMarker = this.$refs.markers.find(\n              (item) => item.name === this.currentSelected,\n            );\n            if (selectedMarker) {\n              selCluster = this.$refs.clusterLayer.mapObject.getVisibleParent(\n                selectedMarker.mapObject,\n              );\n            }\n          }\n          // modified selected cluster style\n          const sel = selCluster !== null ? cluster._leaflet_id === selCluster._leaflet_id : false;\n          const selectedClass = sel ? ' marker-cluster-selected' : '';\n          let iconSize = null;\n          if (sel) {\n            iconSize = new Point(48, 48);\n          } else {\n            iconSize = new Point(40, 40);\n          }\n          const childCount = cluster.getChildCount();\n          return new DivIcon({\n            html: `<div class=\"${selectedClass}\"><span>${childCount}</span></div>`,\n            className: `marker-cluster ${selectedClass}`,\n            iconSize,\n          });\n        }.bind(this),\n        polygonOptions: {\n          fillColor: this.$vuetify.theme.themes.light.primary,\n          color: this.$vuetify.theme.themes.light.primary,\n          weight: 0.5,\n          opacity: 1,\n          fillOpacity: 0.3,\n          dashArray: 4,\n        },\n      };\n    },\n    indicatorsDefinition: () => this.baseConfig.indicatorsDefinition,\n    countriesStyle() {\n      return {\n        color: '#a2a2a2',\n        weight: 1,\n        fillColor: '#fff',\n        opacity: this.opacityCountries[this.zoom],\n        fillOpacity: this.opacityCountries[this.zoom],\n      };\n    },\n    subAoiStyle() {\n      let currentIndicator;\n      let fillColor;\n      if (this.$store.state.indicators.selectedIndicator) {\n        currentIndicator = this.$store.state.indicators.selectedIndicator;\n        fillColor = this.getColor(currentIndicator);\n      } else {\n        fillColor = this.getIndicatorColor('');\n      }\n      return {\n        color: '#fff',\n        weight: 1,\n        fillColor,\n        opacity: 1,\n        fillOpacity: 0.5,\n      };\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const layerButton = document.querySelector('.leaflet-control-layers-toggle');\n      layerButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"${this.appConfig.branding.primaryColor}\" width=\"32px\" height=\"32px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z\"/></svg>`;\n\n      this.map = this.$refs.map.mapObject;\n\n      this.$refs.subaoiLayer.mapObject.bindTooltip('Reference area', {\n        direction: 'top',\n      });\n\n      // update leaflet controls\n      L.control.mousePosition({ // eslint-disable-line no-undef\n        emptyString: '',\n        formatter: (lon, lat) => `${lon.toFixed(3)}, ${lat.toFixed(3)}`,\n        position: 'bottomright',\n      }).addTo(this.map);\n      // hide attribution under icon\n      this.map.attributionControl._update = function () { // eslint-disable-line\n        const attribs = [];\n        const kk = Object.keys(this._attributions);\n        for (let i = 0; i < kk.length; i += 1) {\n          if (this._attributions[kk[i]]) {\n            attribs.push(kk[i]);\n          }\n        }\n        const prefixAndAttribs = [];\n        if (this.options.prefix) {\n          prefixAndAttribs.push(this.options.prefix);\n        }\n        if (attribs.length) {\n          prefixAndAttribs.push(attribs.join(', '));\n        }\n        this._container.innerHTML = `<div class='attribution-body'>${prefixAndAttribs.join(' | ')}</div><div class='attribution-icon'>ℹ</div>`;\n      };\n      this.map.attributionControl._update();\n      this.onResize();\n    });\n    this.$store.subscribe((mutation) => {\n      if (mutation.type === 'indicators/INDICATOR_LOAD_FINISHED') {\n        if (mutation.payload !== null && mutation.payload.aoi !== null) {\n          this.currentSelected = this.getLocationCode(mutation.payload);\n          if (mutation.payload.subAoi) {\n            this.subAoi = mutation.payload.subAoi;\n          }\n        } else {\n          this.currentSelected = null;\n          this.subAoi = {\n            type: 'FeatureCollection',\n            features: [],\n          };\n        }\n        this.resetClusterLayer();\n      } else if (mutation.type === 'features/SET_FEATURE_FILTER') {\n        if (Object.keys(mutation.payload).includes('includeArchived') && Object.keys(mutation.payload).length === 1) {\n          return;\n        }\n\n        const features = this.getGroupedFeatures;\n        const featuresOnMap = features.filter((f) => f.latlng);\n        if (featuresOnMap.length > 0) {\n          const maxZoomFit = 8;\n          if (featuresOnMap.length === 1 && featuresOnMap[0].properties.indicatorObject.subAoi\n          && featuresOnMap[0].properties.indicatorObject.subAoi.features.length > 0) {\n            this.$nextTick(() => {\n              const bounds = geoJson(\n                featuresOnMap[0].properties.indicatorObject.subAoi,\n              ).getBounds();\n              this.map.fitBounds(bounds, {\n                padding: [25, 25],\n              });\n            });\n          } else {\n            this.$nextTick(() => {\n              const markers = this.$refs.markers.map((component) => component.mapObject);\n              const dummyFtrGroup = featureGroup(markers);\n              this.map.fitBounds(dummyFtrGroup.getBounds(), {\n                padding: [25, 25],\n                maxZoom: maxZoomFit,\n              });\n            });\n          }\n        }\n      }\n    });\n  },\n  methods: {\n    selectIndicator(feature) {\n      const { indicatorObject } = feature.properties;\n      if (!indicatorObject.dummyFeature) {\n        this.$store.commit('indicators/SET_SELECTED_INDICATOR', indicatorObject);\n        const query = { ...this.$route.query };\n        delete query.sensor;\n        this.$router.replace({ query }).catch(() => {});\n      }\n    },\n    getColor(indObj) {\n      let colorCode;\n      if (indObj) {\n        if (indObj.updateFrequency && indObj.updateFrequency.toLowerCase() === 'archived') {\n          colorCode = 'grey';\n        } else if (Object.prototype.hasOwnProperty.call(indObj, 'lastColorCode')\n          && !['', '/'].includes(indObj.lastColorCode)) {\n          colorCode = indObj.lastColorCode;\n        } else if (Object.prototype.hasOwnProperty.call(indObj, 'indicator')\n          && ['N1', 'N1a', 'N1b', 'N3b', 'E10a3', 'E10a8', 'E10a9', 'E12b', 'C1', 'C2', 'C3']\n            .includes(indObj.indicator)) {\n          colorCode = 'BLUE';\n        }\n      }\n      return this.getIndicatorColor(colorCode);\n    },\n    formatLabel(feature) {\n      let label = '(coming soon)';\n      if (feature) {\n        const { indicatorObject } = feature.properties;\n        if (Object.prototype.hasOwnProperty.call(indicatorObject, 'lastIndicatorValue') || Object.prototype.hasOwnProperty.call(indicatorObject, 'lastMeasurement')) {\n          label = 'Latest value: ';\n          const indVal = indicatorObject.lastIndicatorValue !== '' ? indicatorObject.lastIndicatorValue : indicatorObject.lastMeasurement;\n          if (['E10a1', 'E10a5'].includes(indicatorObject.indicator)) {\n            const percVal = Number((indVal * 100).toPrecision(4));\n            if (percVal > 0) {\n              label += `+${percVal}%`;\n            } else {\n              label += `${percVal}%`;\n            }\n          } else if (['E10a3', 'E10a8', 'E10a9', 'N4c'].includes(indicatorObject.indicator)) {\n            label += 'multiple';\n          } else if (['E10a6', 'E10a7'].includes(indicatorObject.indicator)) {\n            const newIndVal = Number(indicatorObject.lastMeasurement).toPrecision(4);\n            label += `${newIndVal}%`;\n          } else if (['N1', 'N3b', 'N1b', 'E12b', 'C1', 'C2', 'C3'].includes(indicatorObject.indicator)) {\n            label = '';\n          } else if (indVal === null) {\n            label = null;\n          } else {\n            label += indVal;\n          }\n        }\n\n        // Overwrite label if archived\n        if (indicatorObject.updateFrequency && indicatorObject.updateFrequency.toLowerCase() === 'archived') {\n          label = 'Archived';\n        }\n      }\n\n      return label;\n    },\n    resetClusterLayer() {\n      if (this.$refs.clusterLayer) {\n        this.$refs.clusterLayer.mapObject.refreshClusters();\n      }\n    },\n    zoomUpdated(zoom) {\n      this.zoom = zoom;\n      this.onResize();\n      this.$nextTick(() => {\n        this.resetClusterLayer();\n      });\n    },\n    centerUpdated(center) {\n      this.center = center;\n      this.onResize();\n      this.$nextTick(() => {\n        this.resetClusterLayer();\n      });\n    },\n    boundsUpdated(bounds) {\n      this.bounds = bounds;\n      this.onResize();\n    },\n    onResize() {\n      // to fix panel size for reference image window\n      if (this.map) {\n        this.map._onResize();\n      }\n    },\n    layerOptions(time, sourceOptionsObj) {\n      const additionalSettings = {\n        minZoom: sourceOptionsObj.minZoom,\n        maxZoom: sourceOptionsObj.maxZoom,\n        minNativeZoom: sourceOptionsObj.minNativeZoom,\n        maxNativeZoom: sourceOptionsObj.maxNativeZoom,\n      };\n      if (time !== null) {\n        // time as is gets automatically injected to WMS query OR xyz url {time} template\n        additionalSettings.time = sourceOptionsObj.dateFormatFunction\n          ? sourceOptionsObj.dateFormatFunction(time)\n          : time;\n      }\n      return additionalSettings;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep .leaflet-tooltip-top {\n  background: #00000099;\n  border-radius: 3px;\n  color: #fff;\n  pointer-events: none;\n  white-space: nowrap;\n  border: none;\n  &:before {\n    border-top-color: #00000099;\n  }\n}\n::v-deep .marker-cluster {\n  // TO-DO find a way how to get the primary color into this\n  // background-color: rgba(var(--primary-less));\n  background-color: rgba(#003247, 0.5);\n  div {\n    background-color: var(--v-primary-base);\n    span {\n      color: white;\n    }\n    &.marker-cluster-selected {\n      margin-left: 3px;\n      margin-top: 3px;\n      width: 38px;\n      height: 38px;\n      border-radius: 19px;\n      & span {\n        line-height: 38px;\n        font-size: 14px;\n      }\n    }\n  }\n  &.marker-cluster-selected {\n    border: 2px var(--v-primary-base) dashed;\n  }\n}\n::v-deep .leaflet-control-attribution:active :not(.attribution-icon),\n::v-deep .leaflet-control-attribution:hover :not(.attribution-icon),\n::v-deep .leaflet-control-attribution .attribution-icon {\n  display: inline-block;\n}\n::v-deep .leaflet-control-attribution :not(.attribution-icon),\n::v-deep .leaflet-control-attribution:active .attribution-icon,\n::v-deep .leaflet-control-attribution:hover .attribution-icon {\n  display: none;\n}\n::v-deep .attribution-icon {\n  font-size: 1.2em;\n  margin: 1px;\n}\n::v-deep .leaflet-control-mouseposition {\n  background-color: rgba(255, 255, 255, 0.8);\n  transform: translate3d(-8px, 32px, 0);\n  padding: 2px 4px;\n}\n::v-deep .leaflet-bar a, ::v-deep .leaflet-control-attribution {\n  color: var(--v-primary-base) !important;\n}\n::v-deep .leaflet-control-layers-toggle {\n  background-image: none;\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}
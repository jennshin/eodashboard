{"remainingRequest":"/Users/8ps/Downloads/eodash-staging/app/node_modules/thread-loader/dist/cjs.js!/Users/8ps/Downloads/eodash-staging/app/node_modules/babel-loader/lib/index.js!/Users/8ps/Downloads/eodash-staging/app/node_modules/vuetify/lib/components/VWindow/VWindow.js","dependencies":[{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/vuetify/lib/components/VWindow/VWindow.js","mtime":1624878747000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/cache-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/thread-loader/dist/cjs.js","mtime":1624878747000},{"path":"/Users/8ps/Downloads/eodash-staging/app/node_modules/babel-loader/lib/index.js","mtime":1624878747000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}